{
  "version": 3,
  "sources": ["../../../../../../packages/themes/src/ThemeContext.tsx", "../../../../../../packages/themes/src/defaults.ts", "../../../../../tinycolor2/esm/tinycolor.js", "../../../../../../packages/themes/src/utils.ts"],
  "sourcesContent": ["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { Theme, ThemeMode, LegacyTheme } from './types';\nimport { defaultTheme } from './defaults';\nimport { themeToCSS, getEffectiveTheme, /* mergeThemes */ } from './utils';\n\n// Context for managing the theme\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  mode: ThemeMode;\n  setMode: (mode: ThemeMode) => void;\n  legacyTheme: LegacyTheme; // For backward compatibility\n  applyTheme: () => void;\n  resetTheme: () => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\n// Convert new theme to legacy format for backward compatibility\nfunction themeToLegacy(theme: Theme): LegacyTheme {\n  return {\n    primaryColor: theme.colors.primary[500],\n    secondaryColor: theme.colors.secondary[500],\n    backgroundColor: theme.semanticColors.bgPrimary,\n    textColor: theme.semanticColors.textPrimary,\n  };\n}\n\n// Create the context with default values\nconst ThemeContext = createContext<ThemeContextType>({\n  theme: defaultTheme,\n  setTheme: () => {},\n  mode: 'light',\n  setMode: () => {},\n  legacyTheme: themeToLegacy(defaultTheme),\n  applyTheme: () => {},\n  resetTheme: () => {},\n  isLoading: false,\n  error: null,\n});\n\n// Hook to use the theme context\nexport const useTheme = () => useContext(ThemeContext);\n\n// Provider component for the theme\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>(defaultTheme);\n  const [mode, setModeState] = useState<ThemeMode>('light');\n  const [isLoading, /* setIsLoading */] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const effectiveTheme = getEffectiveTheme(theme, mode);\n  const legacyTheme = themeToLegacy(effectiveTheme);\n\n  // Apply theme to CSS variables\n  const applyTheme = useCallback(() => {\n    const css = themeToCSS(effectiveTheme);\n    const styleElement = document.getElementById('wheel-theme-styles');\n    if (styleElement) {\n      styleElement.innerHTML = css;\n    } else {\n      const newStyleElement = document.createElement('style');\n      newStyleElement.id = 'wheel-theme-styles';\n      newStyleElement.innerHTML = css;\n      document.head.appendChild(newStyleElement);\n    }\n  }, [effectiveTheme]);\n\n  // Set the theme\n  const setTheme = useCallback((newTheme: Theme) => {\n    try {\n      setThemeState(newTheme);\n    } catch (e) {\n      setError('Invalid theme format');\n    }\n  }, []);\n\n  // Reset the theme\n  const resetTheme = useCallback(() => {\n    setThemeState(defaultTheme);\n    setModeState('light');\n  }, []);\n\n  // Apply the theme when it changes\n  useEffect(() => {\n    applyTheme();\n  }, [applyTheme]);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        setTheme,\n        mode,\n        setMode: setModeState,\n        legacyTheme,\n        applyTheme,\n        resetTheme,\n        isLoading,\n        error,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n", "import { \n  Theme, \n  ColorScale, \n  SemanticColors, \n  Typography, \n  Spacing, \n  Borders, \n  Shadows, \n  Animations, \n  Breakpoints, \n  ZIndices \n} from '../types/theme.types';\n\n/**\n * Default primary color scale - Midnight Blue\n */\nconst primaryColorScale: ColorScale = {\n  50: '#e0e7ff',\n  100: '#c7d2fe',\n  200: '#a5b4fc',\n  300: '#818cf8',\n  400: '#6366f1',\n  500: '#1e1b4b', // Base midnight blue\n  600: '#312e81',\n  700: '#3730a3',\n  800: '#4338ca',\n  900: '#0f0c29',\n};\n\n/**\n * Default secondary color scale - Amber\n */\nconst secondaryColorScale: ColorScale = {\n  50: '#fffbeb',\n  100: '#fef3c7',\n  200: '#fde68a',\n  300: '#fcd34d',\n  400: 'var(--warning)',\n  500: 'var(--warning)', // Base amber\n  600: '#d97706',\n  700: '#b45309',\n  800: '#92400e',\n  900: '#78350f',\n};\n\n/**\n * Default accent color scale - Gradient blend\n */\nconst accentColorScale: ColorScale = {\n  50: '#e8f4fd',\n  100: '#d1e9fb',\n  200: '#a3d3f7',\n  300: '#75bdf3',\n  400: '#47a6ef',\n  500: '#6366f1', // Blend of primary and secondary\n  600: '#1273bc',\n  700: '#0e568d',\n  800: '#0a395e',\n  900: '#051d2f',\n};\n\n/**\n * Default success color scale\n */\nconst successColorScale: ColorScale = {\n  50: '#f3faf7',\n  100: '#def7ec',\n  200: '#bcf0da',\n  300: '#84e1bc',\n  400: '#31c48d',\n  500: '#0e9f6e',\n  600: '#057a55',\n  700: '#046c4e',\n  800: '#03543f',\n  900: '#014737',\n};\n\n/**\n * Default warning color scale\n */\nconst warningColorScale: ColorScale = {\n  50: '#fdfdea',\n  100: '#fdf6b2',\n  200: '#fce96a',\n  300: '#faca15',\n  400: '#e3a008',\n  500: '#c27803',\n  600: '#9f580a',\n  700: '#8e4b10',\n  800: '#723b13',\n  900: '#633112',\n};\n\n/**\n * Default danger color scale\n */\nconst dangerColorScale: ColorScale = {\n  50: '#fdf2f2',\n  100: '#fde8e8',\n  200: '#fbd5d5',\n  300: '#f8b4b4',\n  400: '#f98080',\n  500: '#f05252',\n  600: '#e02424',\n  700: '#c81e1e',\n  800: '#9b1c1c',\n  900: '#771d1d',\n};\n\n/**\n * Default info color scale\n */\nconst infoColorScale: ColorScale = {\n  50: '#e8f4fd',\n  100: '#d1e9fb',\n  200: '#a3d3f7',\n  300: '#75bdf3',\n  400: '#47a6ef',\n  500: '#1a90eb',\n  600: '#1273bc',\n  700: '#0e568d',\n  800: '#0a395e',\n  900: '#051d2f',\n};\n\n/**\n * Default neutral color scale\n */\nconst neutralColorScale: ColorScale = {\n  50: 'var(--bg-secondary)',\n  100: 'var(--bg-secondary)',\n  200: 'var(--border-default)',\n  300: 'var(--border-default)',\n  400: 'var(--text-disabled)',\n  500: 'var(--text-secondary)',\n  600: 'var(--text-secondary)',\n  700: 'var(--text-secondary)',\n  800: 'var(--text-primary)',\n  900: 'var(--text-primary)',\n};\n\n/**\n * Default semantic colors\n */\nconst semanticColors: SemanticColors = {\n  // Background colors\n  bgPrimary: 'var(--bg-secondary)',\n  bgSecondary: 'var(--bg-secondary)',\n  bgTertiary: 'var(--border-default)',\n  bgCard: 'var(--bg-primary)',\n  bgModal: '#ffffff',\n  bgHover: 'rgba(0, 0, 0, 0.05)',\n  bgActive: 'var(--shadow-color-light)',\n  bgDisabled: 'var(--border-default)',\n  \n  // Text colors\n  textPrimary: '#1e1b4b', // Updated to midnight blue\n  textSecondary: 'var(--text-secondary)',\n  textTertiary: 'var(--text-disabled)',\n  textDisabled: 'var(--border-default)',\n  textInverted: 'var(--bg-primary)',\n  textLink: '#3730a3', // Updated to midnight blue\n  textLinkHover: 'var(--warning)', // Updated to amber\n  \n  // Border colors\n  borderDefault: 'var(--border-default)',\n  borderFocus: '#3730a3', // Updated to midnight blue\n  borderDisabled: 'var(--border-default)',\n  \n  // Other semantic colors\n  shadow: 'var(--shadow-color-light)',\n  overlay: 'var(--overlay-background)',\n  \n  // Gradient backgrounds\n  bgGradientPrimary: 'linear-gradient(135deg, #0f0c29 0%, #1e1b4b 25%, #312e81 50%, #d97706 75%, var(--warning) 100%)',\n  bgGradientMidnight: 'linear-gradient(135deg, #1e1b4b 0%, #3730a3 100%)',\n  bgGradientAmber: 'linear-gradient(135deg, var(--warning) 0%, #d97706 100%)',\n  bgGradientJourney: 'linear-gradient(135deg, var(--warning) 0%, #d97706 50%, #b45309 100%)',\n};\n\n/**\n * Default typography settings\n */\nconst typography: Typography = {\n  fonts: {\n    sans: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\n    serif: \"Georgia, Cambria, 'Times New Roman', Times, serif\",\n    mono: \"Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace\",\n  },\n  \n  fontSizes: {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    md: '1.125rem',\n    lg: '1.25rem',\n    xl: '1.5rem',\n    '2xl': '1.875rem',\n    '3xl': '2.25rem',\n    '4xl': '3rem',\n    '5xl': '4rem',\n  },\n  \n  fontWeights: {\n    thin: 100,\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n    black: 900,\n  },\n  \n  lineHeights: {\n    none: '1',\n    tight: '1.25',\n    snug: '1.375',\n    normal: '1.5',\n    relaxed: '1.625',\n    loose: '2',\n  },\n  \n  letterSpacings: {\n    tighter: '-0.05em',\n    tight: '-0.025em',\n    normal: '0',\n    wide: '0.025em',\n    wider: '0.05em',\n    widest: '0.1em',\n  },\n};\n\n/**\n * Default spacing settings\n */\nconst spacing: Spacing = {\n  0: '0',\n  1: '0.25rem',\n  2: '0.5rem',\n  3: '0.75rem',\n  4: '1rem',\n  5: '1.25rem',\n  6: '1.5rem',\n  8: '2rem',\n  10: '2.5rem',\n  12: '3rem',\n  16: '4rem',\n  20: '5rem',\n  24: '6rem',\n  32: '8rem',\n  40: '10rem',\n  48: '12rem',\n  56: '14rem',\n  64: '16rem',\n  72: '18rem',\n  80: '20rem',\n  96: '24rem',\n};\n\n/**\n * Default border settings\n */\nconst borders: Borders = {\n  width: {\n    none: '0',\n    thin: '1px',\n    base: '2px',\n    thick: '4px',\n    thicker: '8px',\n  },\n  \n  radius: {\n    none: '0',\n    sm: '0.125rem',\n    base: '0.25rem',\n    md: '0.375rem',\n    lg: '0.5rem',\n    xl: '0.75rem',\n    full: '9999px',\n  },\n  \n  styles: {\n    solid: 'solid',\n    dashed: 'dashed',\n    dotted: 'dotted',\n    double: 'double',\n  },\n};\n\n/**\n * Default shadow settings\n */\nconst shadows: Shadows = {\n  none: 'none',\n  sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n  base: '0 1px 3px 0 var(--shadow-color-light), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n  md: '0 4px 6px -1px var(--shadow-color-light), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n  lg: '0 10px 15px -3px var(--shadow-color-light), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n  xl: '0 20px 25px -5px var(--shadow-color-light), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n  inner: 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)',\n  outline: '0 0 0 3px rgba(55, 48, 163, 0.5)', // Updated to midnight blue\n};\n\n/**\n * Default animation settings\n */\nconst animations: Animations = {\n  durations: {\n    fastest: '50ms',\n    fast: '100ms',\n    normal: '200ms',\n    slow: '300ms',\n    slowest: '500ms',\n  },\n  \n  easings: {\n    linear: 'linear',\n    ease: 'ease',\n    easeIn: 'ease-in',\n    easeOut: 'ease-out',\n    easeInOut: 'ease-in-out',\n  },\n  \n  transitions: {\n    default: 'all 200ms ease',\n    slow: 'all 300ms ease',\n    fast: 'all 100ms ease',\n  },\n  \n  keyframes: {\n    spin: '@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }',\n    ping: '@keyframes ping { 0% { transform: scale(1); opacity: 1; } 75%, 100% { transform: scale(2); opacity: 0; } }',\n    pulse: '@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: .5; } }',\n    bounce: '@keyframes bounce { 0%, 100% { transform: translateY(-25%); animation-timing-function: cubic-bezier(0.8, 0, 1, 1); } 50% { transform: translateY(0); animation-timing-function: cubic-bezier(0, 0, 0.2, 1); } }',\n    ambient: '@keyframes ambient { 0% { opacity: 0.8; transform: scale(1); } 100% { opacity: 1; transform: scale(1.05); } }',\n  },\n};\n\n/**\n * Default breakpoint settings\n */\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '640px',\n  md: '768px',\n  lg: '1024px',\n  xl: '1280px',\n  '2xl': '1536px',\n};\n\n/**\n * Default z-index settings\n */\nconst zIndices: ZIndices = {\n  hide: -1,\n  auto: 0,\n  base: 1,\n  dropdown: 1000,\n  sticky: 1100,\n  fixed: 1200,\n  overlay: 1300,\n  modal: 1400,\n  popover: 1500,\n  toast: 1600,\n  tooltip: 1700,\n};\n\n/**\n * Default theme\n */\nexport const defaultTheme: Theme = {\n  // Metadata\n  id: 'default',\n  name: 'THE WHEEL Default Theme',\n  description: 'The default theme for The Wheel',\n  version: '1.0.0',\n  author: 'The Wheel Team',\n  isPublic: true,\n  \n  // Core theme properties\n  colors: {\n    primary: primaryColorScale,\n    secondary: secondaryColorScale,\n    accent: accentColorScale,\n    success: successColorScale,\n    warning: warningColorScale,\n    danger: dangerColorScale,\n    info: infoColorScale,\n    neutral: neutralColorScale,\n  },\n  semanticColors,\n  typography,\n  spacing,\n  borders,\n  shadows,\n  animations,\n  breakpoints,\n  zIndices,\n  \n  // Custom settings\n  custom: {\n    assets: {\n      logoUrl: '/logos/wheel_logo_primary.svg',\n    },\n  },\n};\n\n/**\n * Platform Hero Theme Preset\n */\nexport const platformHeroTheme: Theme = {\n  ...defaultTheme,\n  name: 'Platform Hero',\n  description: 'A bold theme for landing pages and hero sections',\n  semanticColors: {\n    ...defaultTheme.semanticColors,\n    bgPrimary: 'linear-gradient(135deg, #0f0c29 0%, #1e1b4b 25%, #312e81 50%, #d97706 75%, var(--warning) 100%)',\n    bgModal: '#1e1b4b',\n    textPrimary: 'var(--bg-primary)',\n    textSecondary: '#e0e0e0',\n    textTertiary: '#a0a0a0',\n    borderDefault: '#3d3d3d',\n  },\n  custom: {\n    ...defaultTheme.custom,\n    assets: {\n      logoUrl: '/logos/wheel_logo_stacked.svg',\n    },\n  },\n};\n\n/**\n * Founder Dashboard Theme Preset\n */\nexport const founderDashboardTheme: Theme = {\n  ...defaultTheme,\n  name: 'Founder Dashboard',\n  description: 'A dark theme for founder dashboards',\n  semanticColors: {\n    ...defaultTheme.semanticColors,\n    bgPrimary: '#121212',\n    bgSecondary: '#1e1e1e',\n    bgTertiary: '#2d2d2d',\n    bgCard: '#2d2d2d',\n    bgModal: '#1e1e1e',\n    textPrimary: 'var(--bg-primary)',\n    textSecondary: '#e0e0e0',\n    textTertiary: '#a0a0a0',\n    borderDefault: '#3d3d3d',\n  },\n  custom: {\n    ...defaultTheme.custom,\n    assets: {\n      logoUrl: '/logos/wheel_logo_dashboard.svg',\n    },\n  },\n};\n\n/**\n * VC Portal Theme Preset\n */\nexport const vcPortalTheme: Theme = {\n  ...defaultTheme,\n  name: 'VC Portal',\n  description: 'A professional light theme for VC portals',\n  semanticColors: {\n    ...defaultTheme.semanticColors,\n    bgPrimary: 'var(--bg-primary)',\n    bgSecondary: '#f8fafc',\n    bgTertiary: '#f1f5f9',\n    bgCard: 'var(--bg-primary)',\n    bgModal: '#ffffff',\n    textPrimary: '#1e1b4b',\n    textSecondary: '#334155',\n    textTertiary: '#64748b',\n    borderDefault: '#e2e8f0',\n  },\n  custom: {\n    ...defaultTheme.custom,\n    assets: {\n      logoUrl: '/logos/wheel_logo_vc_portfolio.svg',\n    },\n  },\n};\n\n/**\n * Journey Energy Theme Preset\n */\nexport const journeyEnergyTheme: Theme = {\n  ...defaultTheme,\n  name: 'Journey Energy',\n  description: 'An energetic theme for journey milestones',\n  colors: {\n    ...defaultTheme.colors,\n    primary: secondaryColorScale, // Use amber as primary\n    secondary: primaryColorScale, // Use midnight blue as secondary\n  },\n  semanticColors: {\n    ...defaultTheme.semanticColors,\n    bgPrimary: 'linear-gradient(135deg, var(--warning) 0%, #d97706 50%, #b45309 100%)',\n    bgModal: '#b45309',\n    textPrimary: 'var(--bg-primary)',\n    textSecondary: '#fef3c7',\n    textTertiary: 'var(--warning)',\n    borderDefault: '#b45309',\n  },\n  custom: {\n    ...defaultTheme.custom,\n    assets: {\n      logoUrl: '/logos/wheel_logo_journey_energy.svg',\n    },\n  },\n};\n", "// This file is autogenerated. It's used to publish ESM to npm.\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nvar trimLeft = /^\\s+/;\nvar trimRight = /\\s+$/;\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {};\n\n  // If input is already a tinycolor, return itself\n  if (color instanceof tinycolor) {\n    return color;\n  }\n  // If we are called as a function, call using new instead\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n  var rgb = inputToRGB(color);\n  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n  this._gradientType = opts.gradientType;\n\n  // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n  this._ok = rgb.ok;\n}\ntinycolor.prototype = {\n  isDark: function isDark() {\n    return this.getBrightness() < 128;\n  },\n  isLight: function isLight() {\n    return !this.isDark();\n  },\n  isValid: function isValid() {\n    return this._ok;\n  },\n  getOriginalInput: function getOriginalInput() {\n    return this._originalInput;\n  },\n  getFormat: function getFormat() {\n    return this._format;\n  },\n  getAlpha: function getAlpha() {\n    return this._a;\n  },\n  getBrightness: function getBrightness() {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function getLuminance() {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function setAlpha(value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function toHsv() {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return {\n      h: hsv.h * 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: this._a\n    };\n  },\n  toHsvString: function toHsvString() {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n      s = Math.round(hsv.s * 100),\n      v = Math.round(hsv.v * 100);\n    return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function toHsl() {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return {\n      h: hsl.h * 360,\n      s: hsl.s,\n      l: hsl.l,\n      a: this._a\n    };\n  },\n  toHslString: function toHslString() {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n      s = Math.round(hsl.s * 100),\n      l = Math.round(hsl.l * 100);\n    return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function toHex(allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function toHexString(allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function toHex8(allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function toHex8String(allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function toRgb() {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a\n    };\n  },\n  toRgbString: function toRgbString() {\n    return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n  },\n  toPercentageRgb: function toPercentageRgb() {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a\n    };\n  },\n  toPercentageRgbString: function toPercentageRgbString() {\n    return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n  },\n  toName: function toName() {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n    if (this._a < 1) {\n      return false;\n    }\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function toFilter(secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n  },\n  toString: function toString(format) {\n    var formatSet = !!format;\n    format = format || this._format;\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n    return formattedString || this.toHexString();\n  },\n  clone: function clone() {\n    return tinycolor(this.toString());\n  },\n  _applyModification: function _applyModification(fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function lighten() {\n    return this._applyModification(_lighten, arguments);\n  },\n  brighten: function brighten() {\n    return this._applyModification(_brighten, arguments);\n  },\n  darken: function darken() {\n    return this._applyModification(_darken, arguments);\n  },\n  desaturate: function desaturate() {\n    return this._applyModification(_desaturate, arguments);\n  },\n  saturate: function saturate() {\n    return this._applyModification(_saturate, arguments);\n  },\n  greyscale: function greyscale() {\n    return this._applyModification(_greyscale, arguments);\n  },\n  spin: function spin() {\n    return this._applyModification(_spin, arguments);\n  },\n  _applyCombination: function _applyCombination(fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function analogous() {\n    return this._applyCombination(_analogous, arguments);\n  },\n  complement: function complement() {\n    return this._applyCombination(_complement, arguments);\n  },\n  monochromatic: function monochromatic() {\n    return this._applyCombination(_monochromatic, arguments);\n  },\n  splitcomplement: function splitcomplement() {\n    return this._applyCombination(_splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function triad() {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function tetrad() {\n    return this._applyCombination(polyad, [4]);\n  }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function (color, opts) {\n  if (_typeof(color) == \"object\") {\n    var newColor = {};\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n    color = newColor;\n  }\n  return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n  if (_typeof(color) == \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n  a = boundAlpha(a);\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a\n  };\n}\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255\n  };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    v = max;\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  var i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    mod = i % 6,\n    r = [v, q, p, p, t, v][mod],\n    g = [t, v, v, q, p, p][mod],\n    b = [p, p, t, v, v, q][mod];\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n\n  // Return a 3 character hex if possible\n  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n  // Return a 4 character hex if possible\n  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n  return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random()\n  });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction _desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction _saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction _greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\nfunction _lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\nfunction _brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\nfunction _darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction _spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction _complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({\n      h: (hsl.h + i * step) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }));\n  }\n  return result;\n}\nfunction _splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [tinycolor(color), tinycolor({\n    h: (h + 72) % 360,\n    s: hsl.s,\n    l: hsl.l\n  }), tinycolor({\n    h: (h + 216) % 360,\n    s: hsl.s,\n    l: hsl.l\n  })];\n}\nfunction _analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n  return ret;\n}\nfunction _monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n  while (results--) {\n    ret.push(tinycolor({\n      h: h,\n      s: s,\n      v: v\n    }));\n    v = (v + modification) % 1;\n  }\n  return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n  var p = amount / 100;\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a\n  };\n  return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n  out = false;\n  wcag2Parms = validateWCAG2Parms(wcag2);\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n  return out;\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n  if (tinycolor.isReadable(baseColor, bestColor, {\n    level: level,\n    size: size\n  }) || !includeFallbackColors) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n};\n\n// Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\nvar names = tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n  var flipped = {};\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n  return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n  return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return n % max / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n  return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\nvar matchers = function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n  // <http://www.w3.org/TR/css3-values/#number-value>\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n  // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n  var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n  };\n}();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: \"name\"\n    };\n  }\n\n  // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n  var match;\n  if (match = matchers.rgb.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n  }\n  if (match = matchers.rgba.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsl.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3]\n    };\n  }\n  if (match = matchers.hsla.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsv.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3]\n    };\n  }\n  if (match = matchers.hsva.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hex8.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex6.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  if (match = matchers.hex4.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex3.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  return false;\n}\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || {\n    level: \"AA\",\n    size: \"small\"\n  };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n  return {\n    level: level,\n    size: size\n  };\n}\n\nexport { tinycolor as default };\n", "import { Theme, ThemeMode, ColorScale } from '../types/theme.types';\nimport tinycolor from 'tinycolor2';\n\n/**\n * Merges two themes, with the override theme taking precedence\n * @param base The base theme\n * @param override The override theme\n * @returns The merged theme\n */\nexport function mergeThemes(base: Theme, override: Partial<Theme>): Theme {\n  // Start with a deep copy of the base theme\n  const result: Theme = JSON.parse(JSON.stringify(base));\n  \n  // Merge metadata\n  if (override.id) result.id = override.id;\n  if (override.name) result.name = override.name;\n  if (override.description) result.description = override.description;\n  if (override.version) result.version = override.version;\n  if (override.author) result.author = override.author;\n  if (override.isPublic !== undefined) result.isPublic = override.isPublic;\n  \n  // Merge colors\n  if (override.colors) {\n    Object.keys(override.colors).forEach(colorKey => {\n      const overrideColor = override.colors?.[colorKey];\n      if (overrideColor) {\n        if (!result.colors[colorKey]) {\n          result.colors[colorKey] = { ...overrideColor } as ColorScale;\n        } else {\n          result.colors[colorKey] = { \n            ...result.colors[colorKey], \n            ...overrideColor \n          } as ColorScale;\n        }\n      }\n    });\n  }\n  \n  // Merge semantic colors\n  if (override.semanticColors) {\n    result.semanticColors = { ...result.semanticColors, ...override.semanticColors };\n  }\n  \n  // Merge typography\n  if (override.typography) {\n    result.typography = {\n      fonts: { ...result.typography.fonts, ...override.typography.fonts },\n      fontSizes: { ...result.typography.fontSizes, ...override.typography.fontSizes },\n      fontWeights: { ...result.typography.fontWeights, ...override.typography.fontWeights },\n      lineHeights: { ...result.typography.lineHeights, ...override.typography.lineHeights },\n      letterSpacings: { ...result.typography.letterSpacings, ...override.typography.letterSpacings }\n    };\n  }\n  \n  // Merge spacing\n  if (override.spacing) {\n    result.spacing = { ...result.spacing, ...override.spacing };\n  }\n  \n  // Merge borders\n  if (override.borders) {\n    result.borders = {\n      width: { ...result.borders.width, ...override.borders.width },\n      radius: { ...result.borders.radius, ...override.borders.radius },\n      styles: override.borders.styles \n        ? { \n            ...(result.borders.styles || {}),\n            ...override.borders.styles,\n            // Ensure required properties are present\n            solid: override.borders.styles.solid || (result.borders.styles?.solid || 'solid')\n          }\n        : result.borders.styles || { solid: 'solid' }\n    };\n  }\n  \n  // Merge shadows\n  if (override.shadows) {\n    result.shadows = { ...result.shadows, ...override.shadows };\n  }\n  \n  // Merge animations\n  if (override.animations && result.animations) {\n    // Create a safe copy of the easings with required properties\n    const safeEasings = override.animations.easings \n      ? { \n          ...result.animations.easings,\n          ...override.animations.easings,\n          // Ensure required properties are present with non-undefined values\n          ease: override.animations.easings.ease || result.animations.easings.ease || 'ease'\n        }\n      : result.animations.easings;\n    \n    // Create a safe copy of the transitions with required properties\n    const safeTransitions = override.animations.transitions \n      ? { \n          ...result.animations.transitions,\n          ...override.animations.transitions,\n          // Ensure required properties are present with non-undefined values\n          default: override.animations.transitions?.default || result.animations.transitions?.default || 'all 0.3s ease'\n        }\n      : result.animations.transitions;\n      \n    result.animations = {\n      durations: { ...result.animations.durations, ...override.animations.durations },\n      easings: safeEasings,\n      transitions: safeTransitions,\n      keyframes: { ...result.animations.keyframes, ...override.animations.keyframes }\n    };\n  } else if (override.animations) {\n    // Ensure we have all required properties when creating a new animations object\n    const defaultEasings = { \n      ease: 'ease',\n      linear: 'linear',\n      easeIn: 'ease-in',\n      easeOut: 'ease-out',\n      easeInOut: 'ease-in-out'\n    };\n    \n    const defaultTransitions = {\n      default: 'all 0.3s ease'\n    };\n    \n    result.animations = { \n      ...override.animations,\n      easings: override.animations.easings \n        ? { ...defaultEasings, ...override.animations.easings }\n        : defaultEasings,\n      transitions: override.animations.transitions\n        ? { ...defaultTransitions, ...override.animations.transitions }\n        : defaultTransitions\n    };\n  }\n  \n  // Merge breakpoints\n  if (override.breakpoints) {\n    result.breakpoints = { ...result.breakpoints, ...override.breakpoints };\n  }\n  \n  // Merge z-indices\n  if (override.zIndices) {\n    result.zIndices = { ...result.zIndices, ...override.zIndices };\n  }\n  \n  // Merge custom settings\n  if (override.custom) {\n    if (!result.custom) result.custom = {};\n    \n    // Merge assets\n    if (override.custom.assets) {\n      if (!result.custom.assets) result.custom.assets = {};\n      result.custom.assets = { ...result.custom.assets, ...override.custom.assets };\n    }\n    \n    // Merge components\n    if (override.custom.components) {\n      if (!result.custom.components) result.custom.components = {};\n      result.custom.components = { ...result.custom.components, ...override.custom.components };\n    }\n    \n    // Merge other custom properties\n    if (override.custom.css) result.custom.css = override.custom.css;\n    if (override.custom.javascript) result.custom.javascript = override.custom.javascript;\n  }\n  \n  return result;\n}\n\n/**\n * Validates a theme object\n * @param theme The theme to validate\n * @returns The validated theme\n * @throws Error if the theme is invalid\n */\nexport function validateTheme(theme: any): Theme {\n  // Check required properties\n  if (!theme) throw new Error('Theme is required');\n  if (typeof theme !== 'object') throw new Error('Theme must be an object');\n  \n  // Check required theme properties\n  if (!theme.name) throw new Error('Theme name is required');\n  if (!theme.colors) throw new Error('Theme colors are required');\n  if (!theme.semanticColors) throw new Error('Theme semantic colors are required');\n  if (!theme.typography) throw new Error('Theme typography is required');\n  if (!theme.borders) throw new Error('Theme borders are required');\n  \n  // Check required color properties\n  if (!theme.colors.primary) throw new Error('Primary color is required');\n  if (!theme.colors.secondary) throw new Error('Secondary color is required');\n  if (!theme.colors.accent) throw new Error('Accent color is required');\n  \n  // Check required semantic color properties\n  if (!theme.semanticColors.bgPrimary) throw new Error('Background primary color is required');\n  if (!theme.semanticColors.textPrimary) throw new Error('Text primary color is required');\n  if (!theme.semanticColors.bgCard) throw new Error('Card background color is required');\n  if (!theme.semanticColors.borderDefault) throw new Error('Border default color is required');\n  \n  // Check required typography properties\n  if (!theme.typography.fonts || !theme.typography.fonts.sans) {\n    throw new Error('Sans font is required');\n  }\n  \n  if (!theme.typography.fontSizes || !theme.typography.fontSizes.base) {\n    throw new Error('Base font size is required');\n  }\n  \n  if (!theme.typography.fontWeights || \n      theme.typography.fontWeights.normal === undefined || \n      theme.typography.fontWeights.bold === undefined) {\n    throw new Error('Normal and bold font weights are required');\n  }\n  \n  if (!theme.typography.lineHeights || !theme.typography.lineHeights.normal) {\n    throw new Error('Normal line height is required');\n  }\n  \n  if (!theme.typography.letterSpacings || !theme.typography.letterSpacings.normal) {\n    throw new Error('Normal letter spacing is required');\n  }\n  \n  // Check required border properties\n  if (!theme.borders.width || !theme.borders.width.base) {\n    throw new Error('Base border width is required');\n  }\n  \n  if (!theme.borders.radius || !theme.borders.radius.base) {\n    throw new Error('Base border radius is required');\n  }\n  \n  return theme as Theme;\n}\n\n/**\n * Generates a color scale from a base color\n * @param baseColor The base color (500)\n * @returns A color scale object\n */\nexport function generateColorScale(baseColor: string): Partial<ColorScale> {\n  const color = tinycolor(baseColor);\n  \n  return {\n    50: tinycolor.mix(color, tinycolor('var(--bg-primary)'), 90).toHexString(),\n    100: tinycolor.mix(color, tinycolor('var(--bg-primary)'), 80).toHexString(),\n    200: tinycolor.mix(color, tinycolor('var(--bg-primary)'), 60).toHexString(),\n    300: tinycolor.mix(color, tinycolor('var(--bg-primary)'), 40).toHexString(),\n    400: tinycolor.mix(color, tinycolor('var(--bg-primary)'), 20).toHexString(),\n    // 500 is the base color, provided by the caller\n    600: tinycolor.mix(color, tinycolor('var(--text-primary)'), 10).toHexString(),\n    700: tinycolor.mix(color, tinycolor('var(--text-primary)'), 20).toHexString(),\n    800: tinycolor.mix(color, tinycolor('var(--text-primary)'), 30).toHexString(),\n    900: tinycolor.mix(color, tinycolor('var(--text-primary)'), 40).toHexString(),\n  };\n}\n\n/**\n * Converts a theme to CSS variables\n * @param theme The theme to convert\n * @returns CSS string\n */\nexport function themeToCSS(theme: Theme): string {\n  let css = ':root {\\n';\n  \n  // Add color variables\n  Object.entries(theme.colors).forEach(([colorName, colorScale]) => {\n    Object.entries(colorScale).forEach(([shade, value]) => {\n      css += `  --color-${colorName}-${shade}: ${value};\\n`;\n    });\n  });\n  \n  // Add semantic color variables\n  Object.entries(theme.semanticColors).forEach(([name, value]) => {\n    if (value) {\n      css += `  --${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Add typography variables\n  // Fonts\n  Object.entries(theme.typography.fonts).forEach(([name, value]) => {\n    if (value) {\n      css += `  --font-${name}: ${value};\\n`;\n    }\n  });\n  \n  // Font sizes\n  Object.entries(theme.typography.fontSizes).forEach(([name, value]) => {\n    if (value) {\n      css += `  --font-size-${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Font weights\n  Object.entries(theme.typography.fontWeights).forEach(([name, value]) => {\n    if (value) {\n      css += `  --font-weight-${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Line heights\n  Object.entries(theme.typography.lineHeights).forEach(([name, value]) => {\n    if (value) {\n      css += `  --line-height-${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Letter spacings\n  Object.entries(theme.typography.letterSpacings).forEach(([name, value]) => {\n    if (value) {\n      css += `  --letter-spacing-${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Add spacing variables\n  if (theme.spacing) {\n    Object.entries(theme.spacing).forEach(([name, value]) => {\n      if (value) {\n        css += `  --spacing-${name}: ${value};\\n`;\n      }\n    });\n  }\n  \n  // Add border variables\n  // Border widths\n  Object.entries(theme.borders.width).forEach(([name, value]) => {\n    if (value) {\n      css += `  --border-width-${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Border radii\n  Object.entries(theme.borders.radius).forEach(([name, value]) => {\n    if (value) {\n      css += `  --border-radius-${kebabCase(name)}: ${value};\\n`;\n    }\n  });\n  \n  // Border styles\n  if (theme.borders.styles) {\n    Object.entries(theme.borders.styles).forEach(([name, value]) => {\n      if (value) {\n        css += `  --border-style-${kebabCase(name)}: ${value};\\n`;\n      }\n    });\n  }\n  \n  // Add shadow variables\n  if (theme.shadows) {\n    Object.entries(theme.shadows).forEach(([name, value]) => {\n      if (value) {\n        css += `  --shadow-${kebabCase(name)}: ${value};\\n`;\n      }\n    });\n  }\n  \n  // Add animation variables\n  if (theme.animations) {\n    // Durations\n    Object.entries(theme.animations.durations).forEach(([name, value]) => {\n      if (value) {\n        css += `  --duration-${kebabCase(name)}: ${value};\\n`;\n      }\n    });\n    \n    // Easings\n    Object.entries(theme.animations.easings).forEach(([name, value]) => {\n      if (value) {\n        css += `  --easing-${kebabCase(name)}: ${value};\\n`;\n      }\n    });\n    \n    // Transitions\n    if (theme.animations.transitions) {\n      Object.entries(theme.animations.transitions).forEach(([name, value]) => {\n        if (value) {\n          css += `  --transition-${kebabCase(name)}: ${value};\\n`;\n        }\n      });\n    }\n  }\n  \n  // Add z-index variables\n  if (theme.zIndices) {\n    Object.entries(theme.zIndices).forEach(([name, value]) => {\n      if (value !== undefined) {\n        css += `  --z-index-${kebabCase(name)}: ${value};\\n`;\n      }\n    });\n  }\n  \n  // Add breakpoint variables\n  if (theme.breakpoints) {\n    Object.entries(theme.breakpoints).forEach(([name, value]) => {\n      if (value) {\n        css += `  --breakpoint-${kebabCase(name)}: ${value};\\n`;\n      }\n    });\n  }\n  \n  // Add custom CSS\n  if (theme.custom?.css) {\n    css += `\\n  /* Custom CSS */\\n${theme.custom.css}\\n`;\n  }\n  \n  css += '}\\n';\n  \n  return css;\n}\n\n/**\n * Gets the effective theme based on the current mode\n * @param theme The base theme\n * @param mode The theme mode\n * @returns The effective theme\n */\nexport function getEffectiveTheme(theme: Theme, mode: ThemeMode): Theme {\n  // Start with a copy of the base theme\n  const effectiveTheme = { ...theme };\n  \n  // Apply mode-specific overrides\n  if (mode.mode === 'dark' && theme.custom?.darkMode) {\n    return mergeThemes(effectiveTheme, theme.custom.darkMode as Partial<Theme>);\n  } else if (mode.mode === 'high-contrast' && theme.custom?.highContrast) {\n    return mergeThemes(effectiveTheme, theme.custom.highContrast as Partial<Theme>);\n  } else if (mode.customMode && theme.custom?.[mode.customMode]) {\n    return mergeThemes(effectiveTheme, theme.custom[mode.customMode] as Partial<Theme>);\n  }\n  \n  return effectiveTheme;\n}\n\n/**\n * Converts a string to kebab-case\n * @param str The string to convert\n * @returns The kebab-cased string\n */\nfunction kebabCase(str: string): string {\n  return str\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_]+/g, '-')\n    .toLowerCase();\n}\n"],
  "mappings": "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",
  "names": ["obj", "p", "q", "_a"]
}
