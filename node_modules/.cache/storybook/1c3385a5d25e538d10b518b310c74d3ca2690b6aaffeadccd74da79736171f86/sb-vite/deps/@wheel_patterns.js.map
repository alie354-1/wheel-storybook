{
  "version": 3,
  "sources": ["../../../../../../packages/patterns/src/components/StatCard.tsx", "../../../../../../packages/patterns/src/components/clientcard.tsx", "../../../../../../packages/patterns/src/components/ActivityCard.tsx", "../../../../../../packages/patterns/src/components/workspacecard.tsx", "../../../../../../packages/patterns/src/components/ProgressCard.tsx", "../../../../../../packages/patterns/src/components/projectcard.tsx", "../../../../../../packages/patterns/src/components/billingcard.tsx", "../../../../../../packages/patterns/src/components/timecard.tsx", "../../../../../../packages/patterns/src/components/ModalPortal.tsx", "../../../../../../packages/patterns/src/components/Toast.tsx", "../../../../../../packages/patterns/src/components/Tooltip.tsx", "../../../../../../packages/patterns/src/components/forms/FormField.tsx", "../../../../../../packages/patterns/src/components/forms/Form.tsx", "../../../../../../packages/patterns/src/components/forms/ValidatedForm.tsx", "../../../../../../packages/patterns/src/components/Chart.tsx", "../../../../../../packages/patterns/src/components/MediaPlayer.tsx", "../../../../../../packages/patterns/src/components/NotificationCard.tsx", "../../../../../../packages/patterns/src/components/StatusCard.tsx", "../../../../../../packages/patterns/src/components/UserCard.tsx", "../../../../../../packages/patterns/src/components/actions/ActionMenu.tsx", "../../../../../../packages/patterns/src/components/actions/ButtonGroup.tsx", "../../../../../../packages/patterns/src/components/actions/Toolbar.tsx", "../../../../../../packages/patterns/src/components/workspace/BillingControls.tsx", "../../../../../../packages/patterns/src/components/workspace/ClientSelector.tsx", "../../../../../../packages/patterns/src/components/workspace/TimeTracker.tsx", "../../../../../../packages/patterns/src/components/workspace/WorkspaceSwitcher.tsx", "../../../../../../packages/patterns/src/components/errors/utils.ts", "../../../../../../packages/patterns/src/components/errors/ErrorAlert.tsx", "../../../../../../packages/patterns/src/components/errors/ErrorBoundary.tsx", "../../../../../../packages/patterns/src/components/errors/error-reporting.ts", "../../../../../../packages/patterns/src/components/errors/ErrorFeedback.tsx", "../../../../../../packages/patterns/src/components/errors/ErrorModal.tsx", "../../../../../../packages/patterns/src/components/errors/ErrorPage.tsx", "../../../../../../packages/patterns/src/components/errors/ErrorToast.tsx", "../../../../../../packages/patterns/src/components/errors/FallbackContent.tsx", "../../../../../../packages/patterns/src/components/errors/FallbackUI.tsx", "../../../../../../packages/patterns/src/components/errors/InlineError.tsx", "../../../../../../packages/patterns/src/components/errors/RecoveryProgress.tsx", "../../../../../../packages/patterns/src/components/errors/RefreshPage.tsx", "../../../../../../packages/patterns/src/components/errors/RetryButton.tsx"],
  "sourcesContent": ["import { useInterval } from '@wheel/shared';\nimport { Card } from '@wheel/ui';\nimport React, { useState } from 'react';\n\nexport interface StatCardProps {\n  title: string;\n  value: string | number;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  trend?: {\n    value: number;\n    direction: 'up' | 'down' | 'stable';\n    period: string;\n  };\n  comparison?: {\n    value: number;\n    label: string;\n    type: 'previous' | 'target' | 'average';\n  };\n  format?: 'currency' | 'percentage' | 'number' | 'custom';\n  formatter?: (value: any) => string;\n  onClick?: () => void;\n  loading?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n  onUpdate?: (value: number) => void;\n  updateInterval?: number;\n}\n\nexport const StatCard: React.FC<StatCardProps> = ({\n  title,\n  value,\n  context = 'neutral',\n  trend,\n  comparison,\n  format = 'number',\n  formatter,\n  onClick,\n  loading = false,\n  size = 'md',\n  onUpdate,\n  updateInterval,\n}) => {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useInterval(() => {\n    const newValue = typeof currentValue === 'number' ? currentValue + Math.floor(Math.random() * 100) : currentValue;\n    setCurrentValue(newValue);\n    if (onUpdate) {\n      onUpdate(newValue as number);\n    }\n  }, updateInterval || null);\n\n  const formattedValue = () => {\n    if (formatter) {\n      return formatter(currentValue);\n    }\n    switch (format) {\n      case 'currency':\n        return `$${Number(currentValue).toFixed(2)}`;\n      case 'percentage':\n        return `${currentValue}%`;\n      default:\n        return currentValue;\n    }\n  };\n\n  return (\n    <Card\n      className={`stat-card--${context} stat-card--${size}`}\n      onClick={onClick}\n    >\n      <div className=\"text-lg font-bold\">{title}</div>\n      <div className=\"text-3xl\">{loading ? '...' : formattedValue()}</div>\n      {trend && (\n        <div>\n          {trend.direction === 'up' ? '↑' : '↓'} {trend.value}% vs {trend.period}\n        </div>\n      )}\n      {comparison && (\n        <div>\n          vs {comparison.label}: {comparison.value}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import { Avatar } from '@wheel/ui';\nimport { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport React from 'react';\nimport { StatCard } from './StatCard';\nimport { Client, Project } from './types';\n\nexport interface ClientCardProps {\n  client: Client;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showProjects?: boolean;\n  showMetrics?: boolean;\n  showActions?: boolean;\n  onClientClick?: (client: Client) => void;\n  onProjectClick?: (project: Project) => void;\n  onActionClick?: (action: string, client: Client) => void;\n  permissions?: string[];\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const ClientCard: React.FC<ClientCardProps> = ({\n  client,\n  context = 'neutral',\n  showProjects = false,\n  showMetrics = false,\n  showActions = false,\n  onClientClick,\n  onProjectClick,\n  onActionClick,\n  permissions = [],\n  size = 'md',\n}) => {\n  return (\n    <Card\n      className={`client-card--${context} client-card--${size}`}\n      onClick={() => onClientClick?.(client)}\n    >\n      <div className=\"flex items-center\">\n        <Avatar src={client.avatarUrl} alt={client.name} />\n        <div className=\"ml-4\">\n          <div className=\"text-lg font-bold\">{client.name}</div>\n        </div>\n      </div>\n      {showProjects && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Projects</h4>\n          {client.projects?.map((project) => (\n            <div key={project.id} onClick={() => onProjectClick?.(project)}>\n              {project.name}\n            </div>\n          ))}\n        </div>\n      )}\n      {showMetrics && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Metrics</h4>\n          {client.metrics?.map((metric) => (\n            <StatCard key={metric.title} {...metric} />\n          ))}\n        </div>\n      )}\n      {showActions && (\n        <div className=\"mt-4\">\n          {permissions.includes('edit') && (\n            <Button onClick={() => onActionClick?.('edit', client)}>\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport React from 'react';\nimport { Activity, ActivityFilter } from './types';\n\nexport interface ActivityCardProps {\n  activities: Activity[];\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  filters?: ActivityFilter[];\n  onActivityClick?: (activity: Activity) => void;\n  onFilterChange?: (filters: ActivityFilter[]) => void;\n  realTimeUpdates?: boolean;\n  maxItems?: number;\n  showLoadMore?: boolean;\n  onLoadMore?: () => void;\n}\n\nexport const ActivityCard: React.FC<ActivityCardProps> = ({\n  activities,\n  context = 'neutral',\n  filters = [],\n  onActivityClick,\n  onFilterChange,\n  realTimeUpdates = false,\n  maxItems,\n  showLoadMore = false,\n  onLoadMore,\n}) => {\n  const filteredActivities = activities.filter((activity) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    return filters.every((filter) => {\n      if (filter.type === 'user') {\n        return activity.user.id === filter.id;\n      }\n      if (filter.type === 'type') {\n        return activity.type === filter.name;\n      }\n      return true;\n    });\n  });\n\n  return (\n    <Card className={`activity-card--${context}`}>\n      {filteredActivities.slice(0, maxItems).map((activity) => (\n        <div key={activity.id} onClick={() => onActivityClick?.(activity)}>\n          {activity.description} @ {activity.timestamp.toLocaleDateString()}\n        </div>\n      ))}\n      {showLoadMore && <Button onClick={onLoadMore}>Load More</Button>}\n    </Card>\n  );\n};\n", "import { Avatar } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport React from 'react';\nimport { ActivityCard } from './ActivityCard';\nimport { StatCard } from './StatCard';\nimport { Activity, User, Workspace } from './types';\n\nexport interface WorkspaceCardProps {\n  workspace: Workspace;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showMembers?: boolean;\n  showActivity?: boolean;\n  showMetrics?: boolean;\n  onWorkspaceClick?: (workspace: Workspace) => void;\n  onMemberClick?: (member: User) => void;\n  onActivityClick?: (activity: Activity) => void;\n  permissions?: string[];\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const WorkspaceCard: React.FC<WorkspaceCardProps> = ({\n  workspace,\n  context = 'neutral',\n  showMembers = false,\n  showActivity = false,\n  showMetrics = false,\n  onWorkspaceClick,\n  onMemberClick,\n  onActivityClick,\n  permissions = [],\n  size = 'md',\n}) => {\n  return (\n    <Card\n      className={`workspace-card--${context} workspace-card--${size}`}\n      onClick={() => onWorkspaceClick?.(workspace)}\n    >\n      <div className=\"text-lg font-bold\">{workspace.name}</div>\n      {showMembers && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Members</h4>\n          {workspace.members?.map((member) => (\n            <div key={member.id} onClick={() => onMemberClick?.(member)}>\n              <Avatar src={member.avatarUrl} alt={member.name} />\n              {member.name}\n            </div>\n          ))}\n        </div>\n      )}\n      {showActivity && workspace.activity && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Activity</h4>\n          <ActivityCard activities={workspace.activity} />\n        </div>\n      )}\n      {showMetrics && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Metrics</h4>\n          {workspace.metrics?.map((metric) => (\n            <StatCard key={metric.title} {...metric} />\n          ))}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import { useProgress } from '@wheel/shared';\nimport { Card } from '@wheel/ui';\nimport { ProgressIndicator } from '@wheel/ui';\nimport React from 'react';\nimport { Milestone, Progress } from './types';\n\nexport interface ProgressCardProps {\n  title: string;\n  progress: Progress;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showMilestones?: boolean;\n  showTrend?: boolean;\n  onMilestoneClick?: (milestone: Milestone) => void;\n  onProgressUpdate?: (progress: Progress) => void;\n  size?: 'sm' | 'md' | 'lg';\n  interactive?: boolean;\n  updateInterval?: number;\n}\n\nexport const ProgressCard: React.FC<ProgressCardProps> = ({\n  title,\n  progress,\n  context = 'neutral',\n  showMilestones = false,\n  size = 'md',\n  updateInterval,\n}) => {\n  const currentValue = useProgress(progress.value, progress.target, updateInterval || null);\n  const percentage = (currentValue / progress.target) * 100;\n\n  return (\n    <Card className={`progress-card--${context} progress-card--${size}`}>\n      <div className=\"text-lg font-bold\">{title}</div>\n      <ProgressIndicator value={percentage} />\n      {showMilestones && (\n        <div className=\"mt-4\">\n          {progress.milestones?.map((milestone) => (\n            <div key={milestone.id}>{milestone.name}</div>\n          ))}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import { Avatar } from '@wheel/ui';\nimport { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport React from 'react';\nimport { ProgressCard } from './ProgressCard';\nimport { Project, User } from './types';\n\nexport interface ProjectCardProps {\n  project: Project;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showProgress?: boolean;\n  showTeam?: boolean;\n  showActions?: boolean;\n  onProjectClick?: (project: Project) => void;\n  onTeamMemberClick?: (member: User) => void;\n  onActionClick?: (action: string, project: Project) => void;\n  permissions?: string[];\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n  project,\n  context = 'neutral',\n  showProgress = false,\n  showTeam = false,\n  showActions = false,\n  onProjectClick,\n  onTeamMemberClick,\n  onActionClick,\n  permissions = [],\n  size = 'md',\n}) => {\n  return (\n    <Card\n      className={`project-card--${context} project-card--${size}`}\n      onClick={() => onProjectClick?.(project)}\n    >\n      <div className=\"text-lg font-bold\">{project.name}</div>\n      {showProgress && project.progress && (\n        <div className=\"mt-4\">\n          <ProgressCard title=\"Progress\" progress={project.progress} />\n        </div>\n      )}\n      {showTeam && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Team</h4>\n          {project.team?.map((member) => (\n            <div\n              key={member.id}\n              onClick={() => onTeamMemberClick?.(member)}\n            >\n              <Avatar src={member.avatarUrl} alt={member.name} />\n              {member.name}\n            </div>\n          ))}\n        </div>\n      )}\n      {showActions && (\n        <div className=\"mt-4\">\n          {permissions.includes('edit') && (\n            <Button onClick={() => onActionClick?.('edit', project)}>\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport React from 'react';\nimport { BillingInfo, Invoice } from './types';\n\nexport interface BillingCardProps {\n  billing: BillingInfo;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showPaymentHistory?: boolean;\n  showInvoices?: boolean;\n  showActions?: boolean;\n  onBillingClick?: (billing: BillingInfo) => void;\n  onInvoiceClick?: (invoice: Invoice) => void;\n  onActionClick?: (action: string, billing: BillingInfo) => void;\n  permissions?: string[];\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const BillingCard: React.FC<BillingCardProps> = ({\n  billing,\n  context = 'neutral',\n  showPaymentHistory = false,\n  showInvoices = false,\n  showActions = false,\n  onBillingClick,\n  onInvoiceClick,\n  onActionClick,\n  permissions = [],\n  size = 'md',\n}) => {\n  return (\n    <Card\n      className={`billing-card--${context} billing-card--${size}`}\n      onClick={() => onBillingClick?.(billing)}\n    >\n      <div className=\"text-lg font-bold\">{billing.name}</div>\n      {showPaymentHistory && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Payment History</h4>\n          {billing.paymentHistory?.map((payment) => (\n            <div key={payment.id}>\n              {payment.amount} on {payment.date.toLocaleDateString()}\n            </div>\n          ))}\n        </div>\n      )}\n      {showInvoices && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">Invoices</h4>\n          {billing.invoices?.map((invoice) => (\n            <div key={invoice.id} onClick={() => onInvoiceClick?.(invoice)}>\n              {invoice.amount} due on {invoice.dueDate.toLocaleDateString()}\n            </div>\n          ))}\n        </div>\n      )}\n      {showActions && (\n        <div className=\"mt-4\">\n          {permissions.includes('edit') && (\n            <Button onClick={() => onActionClick?.('edit', billing)}>\n              Edit\n            </Button>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import React from 'react';\nimport { cn } from '@wheel/shared/utils/cn';\nimport { Card } from '@wheel/ui';\nimport { TimeIndicator } from '@wheel/ui';\n\nexport interface TimeCardProps {\n  time: Date;\n  className?: string;\n}\n\n/**\n * TimeCard component for displaying a time.\n */\nexport const TimeCard: React.FC<TimeCardProps> = ({\n  time,\n  className = '',\n}) => {\n  return (\n    <Card className={cn('p-4', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold\">Time</h3>\n        <TimeIndicator time={time} />\n      </div>\n    </Card>\n  );\n};\n\nexport default TimeCard;\n", "import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface ModalPortalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  className?: string;\n  preventBackdropClose?: boolean;\n  zIndex?: number;\n}\n\nlet modalStack: string[] = [];\nlet modalCounter = 0;\n\nexport const ModalPortal: React.FC<ModalPortalProps> = ({\n  isOpen,\n  onClose,\n  children,\n  className = '',\n  preventBackdropClose = false,\n  zIndex = 9999,\n}) => {\n  const [modalId] = useState(() => `modal-${++modalCounter}`);\n  const backdropRef = useRef<HTMLDivElement>(null);\n  const modalRef = useRef<HTMLDivElement>(null);\n  const previousActiveElement = useRef<HTMLElement | null>(null);\n  const [isClosing, setIsClosing] = useState(false);\n\n  // Focus management\n  const trapFocus = useCallback((e: KeyboardEvent) => {\n    if (!modalRef.current) return;\n\n    const focusableElements = modalRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n    if (e.key === 'Tab') {\n      if (e.shiftKey) {\n        if (document.activeElement === firstElement) {\n          e.preventDefault();\n          lastElement?.focus();\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          e.preventDefault();\n          firstElement?.focus();\n        }\n      }\n    }\n  }, []);\n\n  // Handle escape key\n  const handleEscape = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n\n      // Only close if this is the topmost modal\n      if (modalStack[modalStack.length - 1] === modalId) {\n        handleClose();\n      }\n    }\n  }, [modalId]);\n\n  // Robust close handler\n  const handleClose = useCallback(() => {\n    if (isClosing) return; // Prevent multiple close calls\n\n    setIsClosing(true);\n\n    // Remove from modal stack\n    const index = modalStack.indexOf(modalId);\n    if (index > -1) {\n      modalStack.splice(index, 1);\n    }\n\n    // Call the onClose callback\n    onClose();\n\n    // Reset closing state after a short delay\n    setTimeout(() => setIsClosing(false), 100);\n  }, [modalId, onClose, isClosing]);\n\n  // Handle backdrop click\n  const handleBackdropClick = useCallback((e: React.MouseEvent) => {\n    if (preventBackdropClose) return;\n\n    if (e.target === backdropRef.current) {\n      e.preventDefault();\n      e.stopPropagation();\n      handleClose();\n    }\n  }, [preventBackdropClose, handleClose]);\n\n  // Prevent event bubbling on modal content\n  const handleModalClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n  }, []);\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      // Store current focus\n      previousActiveElement.current = document.activeElement as HTMLElement;\n\n      // Add to modal stack\n      if (!modalStack.includes(modalId)) {\n        modalStack.push(modalId);\n      }\n\n      // Prevent body scroll\n      document.body.style.overflow = 'hidden';\n\n      // Add event listeners\n      document.addEventListener('keydown', handleEscape, true);\n      document.addEventListener('keydown', trapFocus);\n\n      // Focus the modal\n      setTimeout(() => {\n        const firstFocusable = modalRef.current?.querySelector(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        ) as HTMLElement;\n        firstFocusable?.focus();\n      }, 10);\n\n    } else {\n      // Remove from modal stack\n      const index = modalStack.indexOf(modalId);\n      if (index > -1) {\n        modalStack.splice(index, 1);\n      }\n\n      // Restore body scroll if no other modals\n      if (modalStack.length === 0) {\n        document.body.style.overflow = '';\n      }\n\n      // Remove event listeners\n      document.removeEventListener('keydown', handleEscape, true);\n      document.removeEventListener('keydown', trapFocus);\n\n      // Restore focus\n      if (previousActiveElement.current && modalStack.length === 0) {\n        previousActiveElement.current.focus();\n        previousActiveElement.current = null;\n      }\n    }\n\n    return () => {\n      // Cleanup on unmount\n      const index = modalStack.indexOf(modalId);\n      if (index > -1) {\n        modalStack.splice(index, 1);\n      }\n\n      if (modalStack.length === 0) {\n        document.body.style.overflow = '';\n      }\n\n      document.removeEventListener('keydown', handleEscape, true);\n      document.removeEventListener('keydown', trapFocus);\n    };\n  }, [isOpen, isClosing, modalId, handleEscape, trapFocus]);\n\n  // Force cleanup effect for stuck modals\n  useEffect(() => {\n    const cleanup = () => {\n      // Remove any stuck modal backdrops\n      const stuckBackdrops = document.querySelectorAll('[data-modal-backdrop=\"true\"]');\n      stuckBackdrops.forEach((backdrop, index) => {\n        if (index > 0) { // Keep only the first one if multiple exist\n          backdrop.remove();\n        }\n      });\n    };\n\n    const timer = setTimeout(cleanup, 100);\n    return () => clearTimeout(timer);\n  }, [isOpen]);\n\n  if (!isOpen || isClosing) {\n    return null;\n  }\n\n  const modalContent = (\n    <div\n      ref={backdropRef}\n      className={`fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4 ${className}`}\n      onClick={handleBackdropClick}\n      data-modal-backdrop=\"true\"\n      aria-modal=\"true\"\n      role=\"dialog\"\n      aria-labelledby=\"modal-title\"\n    >\n      <div\n        ref={modalRef}\n        className=\"relative max-w-full max-h-full overflow-auto\"\n        onClick={handleModalClick}\n        data-modal-content=\"true\"\n      >\n        {children}\n      </div>\n    </div>\n  );\n\n  // Create portal to document.body\n  return createPortal(modalContent, document.body);\n};\n\nexport default ModalPortal;\n", "import React from 'react';\n\n// Simple toast implementation for our UI\ninterface ToastOptions {\n  position?: string;\n  autoClose?: number;\n  hideProgressBar?: boolean;\n  closeOnClick?: boolean;\n  pauseOnHover?: boolean;\n  draggable?: boolean;\n}\n\n// Mock implementation of toast functions\nexport const toast = {\n  success: (message: string, options?: ToastOptions) => {\n    console.log('SUCCESS:', message);\n    // In a real implementation, this would show a success toast\n  },\n  error: (message: string, options?: ToastOptions) => {\n    console.error('ERROR:', message);\n    // In a real implementation, this would show an error toast\n  },\n  warning: (message: string, options?: ToastOptions) => {\n    console.warn('WARNING:', message);\n    // In a real implementation, this would show a warning toast\n  },\n  info: (message: string, options?: ToastOptions) => {\n    console.info('INFO:', message);\n    // In a real implementation, this would show an info toast\n  }\n};\n", "import React, { useEffect, useRef, useState } from 'react';\n\ninterface TooltipProps {\n  content: React.ReactNode;\n  position?: 'top' | 'bottom' | 'left' | 'right';\n  delay?: number;\n  children: React.ReactElement;\n  className?: string;\n}\n\n/**\n * Tooltip component\n *\n * Displays a tooltip when hovering over the child element.\n */\nexport const Tooltip: React.FC<TooltipProps> = ({\n  content,\n  position = 'top',\n  delay = 300,\n  children,\n  className = ''\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [delayHandler, setDelayHandler] = useState<number | null>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n\n  const showTooltip = () => {\n    const handler = window.setTimeout(() => {\n      setIsVisible(true);\n    }, delay);\n\n    setDelayHandler(handler);\n  };\n\n  const hideTooltip = () => {\n    if (delayHandler) {\n      clearTimeout(delayHandler);\n      setDelayHandler(null);\n    }\n    setIsVisible(false);\n  };\n\n  // Handle click outside to hide tooltip\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (tooltipRef.current && !tooltipRef.current.contains(event.target as Node)) {\n        hideTooltip();\n      }\n    };\n\n    if (isVisible) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isVisible]);\n\n  // Get position styles based on the position prop\n  const getPositionStyles = () => {\n    switch (position) {\n      case 'top':\n        return {\n          bottom: '100%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          marginBottom: '5px'\n        };\n      case 'bottom':\n        return {\n          top: '100%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          marginTop: '5px'\n        };\n      case 'left':\n        return {\n          right: '100%',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          marginRight: '5px'\n        };\n      case 'right':\n        return {\n          left: '100%',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          marginLeft: '5px'\n        };\n      default:\n        return {\n          bottom: '100%',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          marginBottom: '5px'\n        };\n    }\n  };\n\n  // Clone the child element with onMouseEnter and onMouseLeave props\n  const childWithProps = React.cloneElement(children, {\n    onMouseEnter: showTooltip,\n    onMouseLeave: hideTooltip,\n    onClick: (e: React.MouseEvent) => {\n      if (children.props.onClick) {\n        children.props.onClick(e);\n      }\n      hideTooltip();\n    }\n  });\n\n  return (\n    <div className=\"relative inline-block\" ref={tooltipRef}>\n      {childWithProps}\n      {isVisible && (\n        <div\n          className={`absolute z-50 px-2 py-1 text-sm text-slate-50 bg-slate-900 rounded-md shadow-lg whitespace-nowrap transition-opacity duration-150 ${className}`}\n          style={getPositionStyles()}\n        >\n          {content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tooltip;\n", "import { Input } from '@wheel/ui';\nimport { Label } from '@wheel/ui';\nimport React from 'react';\n\nexport interface FormFieldProps {\n  label: string;\n  name: string;\n  type?: string;\n  placeholder?: string;\n  value?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  error?: string;\n}\n\nconst FormField: React.FC<FormFieldProps> = ({\n  label,\n  name,\n  type = 'text',\n  placeholder,\n  value,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"mb-4\">\n      <Label htmlFor={name}>{label}</Label>\n      <Input\n        id={name}\n        name={name}\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={error ? 'border-red-500' : ''}\n      />\n      {error && <p className=\"text-red-500 text-xs mt-1\">{error}</p>}\n    </div>\n  );\n};\n\nexport default FormField;\n", "import React from 'react';\nimport FormField from './FormField';\n\nexport interface FormProps {\n  fields: any[];\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  children: React.ReactNode;\n}\n\nconst Form: React.FC<FormProps> = ({ fields, onSubmit, children }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      {fields.map((field) => (\n        <FormField key={field.name} {...field} />\n      ))}\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n", "import { Button } from '@wheel/ui';\nimport React, { useState } from 'react';\nimport { z, ZodError } from 'zod';\nimport FormField from './FormField';\n\ninterface ValidatedFormProps {\n  schema: z.ZodObject<any>;\n  fields: any[];\n  onSubmit: (data: any) => void;\n}\n\nconst ValidatedForm: React.FC<ValidatedFormProps> = ({\n  schema,\n  fields,\n  onSubmit,\n}) => {\n  const [formData, setFormData] = useState<any>({});\n  const [errors, setErrors] = useState<any>({});\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const data = schema.parse(formData);\n      setErrors({});\n      onSubmit(data);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        const fieldErrors: any = {};\n        error.issues.forEach((err) => {\n          if (err.path) {\n            fieldErrors[err.path[0]] = err.message;\n          }\n        });\n        setErrors(fieldErrors);\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {fields.map((field) => (\n        <FormField\n          key={field.name}\n          {...field}\n          value={formData[field.name] || ''}\n          onChange={handleChange}\n          error={errors[field.name]}\n        />\n      ))}\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  );\n};\n\nexport default ValidatedForm;\n", "import { useInterval } from '@wheel/shared';\nimport React, { useState } from 'react';\nimport {\n  Area,\n  AreaChart,\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Scatter,\n  ScatterChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { ChartData } from './types';\n\nexport interface ChartProps {\n  data: ChartData[];\n  type: 'line' | 'bar' | 'pie' | 'scatter' | 'area';\n  updateInterval?: number;\n}\n\nexport const Chart: React.FC<ChartProps> = ({ data, type, updateInterval }) => {\n  const [chartData, setChartData] = useState(data);\n\n  useInterval(() => {\n    setChartData(\n      chartData.map((item) => ({\n        ...item,\n        value: item.value + Math.floor(Math.random() * 100),\n      }))\n    );\n  }, updateInterval || null);\n\n  const renderChart = () => {\n    switch (type) {\n      case 'line':\n        return (\n          <LineChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n          </LineChart>\n        );\n      case 'bar':\n        return (\n          <BarChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\n          </BarChart>\n        );\n      case 'pie':\n        return (\n          <PieChart>\n            <Pie\n              data={chartData}\n              dataKey=\"value\"\n              nameKey=\"name\"\n              fill=\"#8884d8\"\n              isAnimationActive={false}\n            />\n            <Tooltip />\n          </PieChart>\n        );\n      case 'scatter':\n        return (\n          <ScatterChart>\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"name\" name=\"name\" />\n            <YAxis type=\"number\" dataKey=\"value\" name=\"value\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter name=\"A school\" data={chartData} fill=\"#8884d8\" />\n          </ScatterChart>\n        );\n      case 'area':\n        return (\n          <AreaChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          </AreaChart>\n        );\n      default:\n        throw new Error(`Invalid chart type: ${type}`);\n    }\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      {renderChart()}\n    </ResponsiveContainer>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport Hls from 'hls.js';\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { Media } from './types';\n\nexport interface MediaPlayerProps {\n  media: Media;\n}\n\nexport const MediaPlayer: React.FC<MediaPlayerProps> = ({ media }) => {\n  const waveformRef = useRef<HTMLDivElement>(null);\n  const wavesurfer = useRef<WaveSurfer | null>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  useEffect(() => {\n    if (media.type === 'audio' && waveformRef.current) {\n      // Destroy previous instance\n      if (wavesurfer.current) {\n        wavesurfer.current.destroy();\n      }\n\n      wavesurfer.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'violet',\n        progressColor: 'purple',\n        barWidth: 2,\n        cursorWidth: 1,\n        height: 100,\n      });\n\n      wavesurfer.current.load(media.src);\n\n      const playButton = document.createElement('button');\n      playButton.innerText = 'Play/Pause';\n      playButton.onclick = () => wavesurfer.current?.playPause();\n\n      // Clear previous buttons before appending a new one\n      while (waveformRef.current.firstChild) {\n        waveformRef.current.removeChild(waveformRef.current.firstChild);\n      }\n\n      waveformRef.current.appendChild(playButton);\n\n\n      return () => {\n        wavesurfer.current?.destroy();\n      };\n    } else if (media.type === 'video' && videoRef.current) {\n      if (Hls.isSupported()) {\n        const hls = new Hls();\n        hls.loadSource(media.src);\n        hls.attachMedia(videoRef.current);\n      }\n    }\n  }, [media.src, media.type]);\n\n  const renderPlayer = () => {\n    switch (media.type) {\n      case 'video':\n        return <video ref={videoRef} src={media.src} controls className=\"w-full\" />;\n      case 'audio':\n        return <div ref={waveformRef} />;\n      case 'presentation':\n        return (\n          <div>\n            <img src={media.slides?.[currentSlide]} alt={`Slide ${currentSlide + 1}`} />\n            <div className=\"flex justify-between mt-2\">\n              <Button\n                onClick={() => setCurrentSlide((prev) => Math.max(0, prev - 1))}\n                disabled={currentSlide === 0}\n              >\n                Previous\n              </Button>\n              <Button\n                onClick={() =>\n                  setCurrentSlide((prev) => Math.min(media.slides?.length || 0 - 1, prev + 1))\n                }\n                disabled={currentSlide === (media.slides?.length || 0) - 1}\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Card>\n      {media.title && <h3 className=\"text-lg font-bold\">{media.title}</h3>}\n      {renderPlayer()}\n      {media.description && <p className=\"mt-2\">{media.description}</p>}\n    </Card>\n  );\n};\n", "import { Card } from '@wheel/ui';\nimport React from 'react';\nimport { Notification } from './types';\n\nexport interface NotificationCardProps {\n  notification: Notification;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showActions?: boolean;\n  onActionClick?: (action: string) => void;\n  onDismiss?: () => void;\n  onMarkRead?: () => void;\n  compact?: boolean;\n}\n\nexport const NotificationCard: React.FC<NotificationCardProps> = ({\n  notification,\n  context = 'neutral',\n  compact = false,\n}) => {\n  return (\n    <Card\n      className={`notification-card--${context} notification-card--${\n        notification.type\n      } ${compact ? 'notification-card--compact' : ''}`}\n    >\n      <div className=\"font-bold\">{notification.title}</div>\n      <div>{notification.message}</div>\n    </Card>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport React from 'react';\nimport { Status } from './types';\n\nexport interface StatusCardProps {\n  title: string;\n  status: Status;\n  statusHistory?: Status[];\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showHistory?: boolean;\n  showActions?: boolean;\n  onStatusChange?: (newStatus: Status) => void;\n  onActionClick?: (action: string) => void;\n  permissions?: string[];\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const StatusCard: React.FC<StatusCardProps> = ({\n  title,\n  status,\n  statusHistory = [],\n  context = 'neutral',\n  showHistory = false,\n  showActions = false,\n  onStatusChange,\n  onActionClick,\n  permissions = [],\n  size = 'md',\n}) => {\n  const handleActionClick = (action: string) => {\n    if (onActionClick) {\n      onActionClick(action);\n    }\n  };\n\n  return (\n    <Card\n      className={`status-card--${context} status-card--${size}`}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-lg font-bold\">{title}</div>\n        <div\n          className=\"w-4 h-4 rounded-full\"\n          style={{ backgroundColor: status.color }}\n        />\n      </div>\n      <div className=\"mt-2\">{status.name}</div>\n      {showHistory && (\n        <div className=\"mt-4\">\n          <h4 className=\"font-bold\">History</h4>\n          {statusHistory.map((s) => (\n            <div key={s.id}>{s.name}</div>\n          ))}\n        </div>\n      )}\n      {showActions && (\n        <div className=\"mt-4\">\n          {permissions.includes('change_status') && (\n            <Button onClick={() => onStatusChange?.(status)}>Change Status</Button>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import { Avatar } from '@wheel/ui';\nimport { Badge } from '@wheel/ui';\nimport { Button } from '@wheel/ui';\nimport { Card } from '@wheel/ui';\nimport { StatusDot } from '@wheel/ui';\nimport React from 'react';\nimport { User } from './types';\n\nexport interface UserCardProps {\n  user: User;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showPresence?: boolean;\n  showStatus?: boolean;\n  showActions?: boolean;\n  onUserClick?: (user: User) => void;\n  onActionClick?: (action: string, user: User) => void;\n  permissions?: string[];\n  size?: 'sm' | 'md' | 'lg';\n  layout?: 'horizontal' | 'vertical';\n}\n\nexport const UserCard: React.FC<UserCardProps> = ({\n  user,\n  context = 'neutral',\n  showPresence = false,\n  showStatus = false,\n  showActions = false,\n  onUserClick,\n  onActionClick,\n  permissions = [],\n  size = 'md',\n  layout = 'vertical',\n}) => {\n  const handleActionClick = (action: string) => {\n    if (onActionClick) {\n      onActionClick(action, user);\n    }\n  };\n\n  const canViewRole = permissions.includes('view_role');\n\n  return (\n    <Card\n      className={`user-card--${context} user-card--${size} user-card--${layout}`}\n      onClick={() => onUserClick?.(user)}\n    >\n      <div className=\"flex items-center\">\n        <Avatar src={user.avatarUrl} alt={user.name} />\n        {showPresence && user.status && <StatusDot status={user.status} />}\n        <div className=\"ml-4\">\n          <div className=\"text-lg font-bold\">{user.name}</div>\n          {showStatus && user.role && canViewRole && <Badge>{user.role}</Badge>}\n        </div>\n      </div>\n      {showActions && (\n        <div className=\"mt-4\">\n          {permissions.includes('edit') && (\n            <Button onClick={() => handleActionClick('edit')}>Edit</Button>\n          )}\n          {permissions.includes('delete') && (\n            <Button onClick={() => handleActionClick('delete')} variant=\"danger\">\n              Delete\n            </Button>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n};\n", "import {\n  Button, DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger, Icon\n} from '@wheel/ui';\nimport React from 'react';\nimport { ActionItem } from './ButtonGroup';\n\nexport interface ActionMenuProps {\n  actions: ActionItem[];\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  trigger?: React.ReactNode;\n  align?: 'start' | 'center' | 'end';\n  onActionClick?: (action: ActionItem) => void;\n  onMenuOpen?: () => void;\n  onMenuClose?: () => void;\n  permissions?: string[];\n  showSuggestions?: boolean;\n  searchable?: boolean;\n  actionHistory?: ActionItem[];\n}\n\nexport const ActionMenu: React.FC<ActionMenuProps> = ({\n  actions,\n  context = 'neutral',\n  trigger,\n  align = 'center',\n  onActionClick,\n  onMenuOpen,\n  onMenuClose,\n  permissions = [],\n  showSuggestions = false,\n  actionHistory = [],\n}) => {\n  const [history, setHistory] = React.useState<ActionItem[]>(actionHistory);\n\n  const hasPermission = (action: ActionItem) => {\n    if (!action.permission) return true;\n    return permissions.includes(action.permission);\n  };\n\n  const isVisibleInContext = (action: ActionItem) => {\n    if (!action.workspaceContext) return true;\n    return action.workspaceContext.includes(context);\n  };\n\n  const visibleActions = actions.filter(\n    (action) => hasPermission(action) && isVisibleInContext(action)\n  );\n\n  const suggestedActions = showSuggestions\n    ? visibleActions.filter((a) => a.metadata?.suggested)\n    : [];\n\n  const handleActionClick = (action: ActionItem) => {\n    if (onActionClick) {\n      onActionClick(action);\n    }\n    action.onClick();\n    setHistory((prev) => [action, ...prev].slice(0, 5));\n  };\n\n  return (\n    <DropdownMenu onOpenChange={(open) => (open ? onMenuOpen?.() : onMenuClose?.())}>\n      <DropdownMenuTrigger asChild>\n        {trigger || <Button variant=\"ghost\">Open Menu</Button>}\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align={align}>\n        {suggestedActions.length > 0 && (\n          <>\n            {suggestedActions.map((action) => (\n              <DropdownMenuItem\n                key={`suggested-${action.id}`}\n                disabled={action.disabled}\n                onSelect={() => handleActionClick(action)}\n              >\n                <Icon name=\"Star\" className=\"mr-2\" />\n                {action.label}\n              </DropdownMenuItem>\n            ))}\n            <hr className=\"my-1\" />\n          </>\n        )}\n        {visibleActions.map((action) => (\n          <DropdownMenuItem\n            key={action.id}\n            disabled={action.disabled}\n            onSelect={() => handleActionClick(action)}\n          >\n            {action.icon && <Icon name={action.icon} className=\"mr-2\" />}\n            {action.label}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n", "import { Button, ButtonVariant, Icon, LucideIconName, cn } from '@wheel/ui';\nimport React from 'react';\n\nexport interface ActionItem {\n  id: string;\n  label: string;\n  icon?: LucideIconName;\n  shortcut?: string;\n  permission?: string;\n  workspaceContext?: string[];\n  disabled?: boolean;\n  loading?: boolean;\n  variant?: 'primary' | 'secondary' | 'danger';\n  onClick: () => void;\n  metadata?: Record<string, any>;\n}\n\nexport interface ButtonGroupProps {\n  actions: ActionItem[];\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  orientation?: 'horizontal' | 'vertical';\n  size?: 'sm' | 'md' | 'lg';\n  variant?: ButtonVariant;\n  onActionClick?: (action: ActionItem) => void;\n  permissions?: string[];\n  maxVisible?: number;\n  showOverflow?: boolean;\n  hasBulkActions?: boolean;\n  responsive?: boolean;\n}\n\nexport const ButtonGroup: React.FC<ButtonGroupProps> = ({\n  actions,\n  context = 'neutral',\n  orientation = 'horizontal',\n  size = 'md',\n  variant = 'primary',\n  onActionClick,\n  permissions = [],\n  maxVisible,\n  showOverflow = true,\n  hasBulkActions = false,\n  responsive = false,\n}) => {\n  const [selectedItems, setSelectedItems] = React.useState<string[]>([]);\n\n  const handleSelectItem = (id: string) => {\n    setSelectedItems((prev) =>\n      prev.includes(id) ? prev.filter((i) => i !== id) : [...prev, id]\n    );\n  };\n\n  const hasPermission = (action: ActionItem) => {\n    if (!action.permission) return true;\n    return permissions.includes(action.permission);\n  };\n\n  const isVisibleInContext = (action: ActionItem) => {\n    if (!action.workspaceContext) return true;\n    return action.workspaceContext.includes(context);\n  };\n\n  const visibleActions = actions.filter(\n    (action) => hasPermission(action) && isVisibleInContext(action)\n  );\n\n  const displayedActions =\n    maxVisible && showOverflow\n      ? visibleActions.slice(0, maxVisible)\n      : visibleActions;\n  const overflowActions =\n    maxVisible && showOverflow ? visibleActions.slice(maxVisible) : [];\n\n  const handleActionClick = (action: ActionItem) => {\n    if (onActionClick) {\n      onActionClick(action);\n    }\n    action.onClick();\n  };\n\n  return (\n    <div\n      className={cn(\n        'inline-flex',\n        orientation === 'vertical' ? 'flex-col' : 'flex-row',\n        responsive && 'flex-wrap',\n        'items-center'\n      )}\n    >\n      {hasBulkActions && (\n        <div className=\"p-2\">\n          <input\n            type=\"checkbox\"\n            onChange={(e) =>\n              setSelectedItems(\n                e.target.checked ? displayedActions.map((a) => a.id) : []\n              )\n            }\n          />\n        </div>\n      )}\n      {displayedActions.map((action) => (\n        <Button\n          key={action.id}\n          variant={action.variant || variant}\n          size={size}\n          disabled={action.disabled || (hasBulkActions && selectedItems.length === 0)}\n          onClick={() => handleActionClick(action)}\n          className=\"first:rounded-l-md last:rounded-r-md\"\n        >\n          {hasBulkActions && (\n            <input\n              type=\"checkbox\"\n              className=\"mr-2\"\n              checked={selectedItems.includes(action.id)}\n              onChange={() => handleSelectItem(action.id)}\n            />\n          )}\n          {action.icon && <Icon name={action.icon} className=\"mr-2\" />}\n          {action.label}\n        </Button>\n      ))}\n      {overflowActions.length > 0 && (\n        // Overflow menu will be implemented later\n        <Button variant={variant} size={size} className=\"rounded-r-md\">\n          ...\n        </Button>\n      )}\n    </div>\n  );\n};\n", "import { Button, Icon, LucideIconName, cn } from '@wheel/ui';\nimport React from 'react';\n\nexport interface ToolItem {\n  id: string;\n  label: string;\n  icon?: LucideIconName;\n  permission?: string;\n  workspaceContext?: string[];\n  disabled?: boolean;\n  onClick: () => void;\n  group?: string;\n}\n\nexport type ToolbarLayout = 'horizontal' | 'vertical' | 'grid';\n\nexport interface ToolbarProps {\n  tools: ToolItem[];\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  layout?: ToolbarLayout;\n  customizable?: boolean;\n  onToolClick?: (tool: ToolItem) => void;\n  onLayoutChange?: (layout: ToolbarLayout) => void;\n  permissions?: string[];\n  persistent?: boolean;\n  responsive?: boolean;\n}\n\nexport const Toolbar: React.FC<ToolbarProps> = ({\n  tools,\n  context = 'neutral',\n  layout = 'horizontal',\n  onToolClick,\n  permissions = [],\n  customizable = false,\n  onLayoutChange,\n  persistent = false,\n  responsive = false,\n}) => {\n  const [currentLayout, setCurrentLayout] = React.useState<ToolbarLayout>(() => {\n    if (persistent) {\n      return (localStorage.getItem('toolbar-layout') as ToolbarLayout) || layout;\n    }\n    return layout;\n  });\n\n  const handleLayoutChange = (newLayout: ToolbarLayout) => {\n    setCurrentLayout(newLayout);\n    if (onLayoutChange) {\n      onLayoutChange(newLayout);\n    }\n    if (persistent) {\n      localStorage.setItem('toolbar-layout', newLayout);\n    }\n  };\n  const hasPermission = (tool: ToolItem) => {\n    if (!tool.permission) return true;\n    return permissions.includes(tool.permission);\n  };\n\n  const isVisibleInContext = (tool: ToolItem) => {\n    if (!tool.workspaceContext) return true;\n    return tool.workspaceContext.includes(context);\n  };\n\n  const visibleTools = tools.filter(\n    (tool) => hasPermission(tool) && isVisibleInContext(tool)\n  );\n\n  const groupedTools = visibleTools.reduce((acc, tool) => {\n    const group = tool.group || 'default';\n    if (!acc[group]) {\n      acc[group] = [];\n    }\n    acc[group].push(tool);\n    return acc;\n  }, {} as Record<string, ToolItem[]>);\n\n  const handleToolClick = (tool: ToolItem) => {\n    if (onToolClick) {\n      onToolClick(tool);\n    }\n    tool.onClick();\n  };\n\n  return (\n    <div\n      className={cn(\n        'flex p-1 bg-gray-100 rounded-md',\n        currentLayout === 'vertical' ? 'flex-col' : 'flex-row',\n        currentLayout === 'grid' && 'grid grid-cols-4',\n        responsive && 'flex-wrap',\n        'gap-1'\n      )}\n    >\n      {customizable && (\n        <div className=\"flex items-center\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => handleLayoutChange('horizontal')}>H</Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => handleLayoutChange('vertical')}>V</Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => handleLayoutChange('grid')}>G</Button>\n        </div>\n      )}\n      {Object.entries(groupedTools).map(([group, tools]) => (\n        <div key={group} className=\"flex items-center\">\n          {tools.map((tool) => (\n            <Button\n              key={tool.id}\n              variant=\"ghost\"\n              size=\"sm\"\n              disabled={tool.disabled}\n              onClick={() => handleToolClick(tool)}\n              aria-label={tool.label}\n            >\n              {tool.icon && <Icon name={tool.icon} />}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport React from 'react';\nimport {\n  BillingInfo,\n  InvoiceData,\n  PaymentData,\n  ReportType,\n  Workspace,\n} from './types';\n\nexport interface BillingControlsProps {\n  workspace: Workspace;\n  billing: BillingInfo;\n  onInvoiceGenerate: (data: InvoiceData) => void;\n  onPaymentProcess: (payment: PaymentData) => void;\n  onReportGenerate: (type: ReportType) => void;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showInvoicing?: boolean;\n  showPayments?: boolean;\n  showReports?: boolean;\n  permissions?: string[];\n  showAnalytics?: boolean;\n}\n\nexport const BillingControls: React.FC<BillingControlsProps> = ({\n  onInvoiceGenerate,\n  onPaymentProcess,\n  onReportGenerate,\n  showAnalytics = false,\n}) => {\n  const handleGenerateInvoice = () => {\n    const invoiceData: InvoiceData = {\n      id: '1',\n      amount: 1000,\n      currency: 'USD',\n      dueDate: new Date(),\n    };\n    onInvoiceGenerate(invoiceData);\n  };\n\n  const handleProcessPayment = () => {\n    const paymentData: PaymentData = {\n      id: '1',\n      amount: 1000,\n      currency: 'USD',\n      date: new Date(),\n    };\n    onPaymentProcess(paymentData);\n  };\n\n  return (\n    <div className=\"flex space-x-2\">\n      <Button onClick={handleGenerateInvoice}>Generate Invoice</Button>\n      <Button onClick={handleProcessPayment}>Process Payment</Button>\n      <Button onClick={() => onReportGenerate('billing')}>\n        Generate Billing Report\n      </Button>\n      {showAnalytics && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-lg font-bold\">Revenue Analytics</h3>\n          <p>Total Revenue: $10,000</p>\n          <p>Monthly Recurring Revenue: $2,000</p>\n        </div>\n      )}\n    </div>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@wheel/ui';\nimport { Icon } from '@wheel/ui';\nimport React from 'react';\nimport { Client } from './types';\n\nexport interface ClientFilter {\n  id: string;\n  label: string;\n  isActive: boolean;\n}\n\nexport interface ClientSelectorProps {\n  clients: Client[];\n  selectedClient?: Client;\n  onClientSelect: (client: Client) => void;\n  onClientCreate?: () => void;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showSearch?: boolean;\n  showRecent?: boolean;\n  showFilters?: boolean;\n  filters?: ClientFilter[];\n  onFilterChange?: (filters: ClientFilter[]) => void;\n  permissions?: string[];\n  maxRecent?: number;\n}\n\nexport const ClientSelector: React.FC<ClientSelectorProps> = ({\n  clients,\n  selectedClient,\n  onClientSelect,\n  onClientCreate,\n  showRecent = false,\n  maxRecent = 5,\n  filters = [],\n  onFilterChange,\n  showFilters = false,\n  permissions = [],\n}) => {\n  const [recentClients, setRecentClients] = React.useState<Client[]>([]);\n\n  const handleClientSelect = (client: Client) => {\n    onClientSelect(client);\n    setRecentClients((prev) =>\n      [client, ...prev.filter((c) => c.id !== client.id)].slice(0, maxRecent)\n    );\n  };\n\n  const hasPermission = (permission: string) => {\n    return permissions.includes(permission);\n  };\n\n  const filteredClients = clients.filter((client) => {\n    if (filters.length === 0) return true;\n    return filters.some((filter) => filter.isActive);\n  });\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\">\n          <Icon name=\"User\" className=\"mr-2\" />\n          {selectedClient ? selectedClient.name : 'Select Client'}\n          <Icon name=\"ChevronDown\" className=\"ml-2\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent>\n        {showRecent && recentClients.length > 0 && (\n          <>\n            <div className=\"p-2 text-xs text-gray-500\">Recent</div>\n            {recentClients.map((client) => (\n              <DropdownMenuItem\n                key={`recent-${client.id}`}\n                onSelect={() => handleClientSelect(client)}\n              >\n                {client.name}\n              </DropdownMenuItem>\n            ))}\n            <hr className=\"my-1\" />\n          </>\n        )}\n        {showFilters && (\n            <div className=\"p-2\">\n                {filters.map((filter) => (\n                    <div key={filter.id} className=\"flex items-center\">\n                        <input\n                            type=\"checkbox\"\n                            checked={filter.isActive}\n                            onChange={() => {\n                                const newFilters = filters.map((f) =>\n                                    f.id === filter.id ? { ...f, isActive: !f.isActive } : f\n                                );\n                                onFilterChange?.(newFilters);\n                            }}\n                        />\n                        <span className=\"ml-2\">{filter.label}</span>\n                    </div>\n                ))}\n            </div>\n        )}\n        {filteredClients.map((client) => (\n          <DropdownMenuItem\n            key={client.id}\n            onSelect={() => handleClientSelect(client)}\n          >\n            {client.name}\n          </DropdownMenuItem>\n        ))}\n        {onClientCreate && hasPermission('create-client') && (\n          <>\n            <hr className=\"my-1\" />\n            <DropdownMenuItem onSelect={onClientCreate}>\n              <Icon name=\"Plus\" className=\"mr-2\" />\n              Create Client\n            </DropdownMenuItem>\n          </>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport { Icon } from '@wheel/ui';\nimport React, { useEffect, useState } from 'react';\nimport { Project, Task, TimeEntry, TimeSession } from './types';\n\nexport interface TimeTrackerProps {\n  currentSession?: TimeSession;\n  onSessionStart: (project: Project, task?: Task) => void;\n  onSessionStop: () => void;\n  onSessionPause: () => void;\n  onTimeEntry: (entry: TimeEntry) => void;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  projects: Project[];\n  tasks: Task[];\n  showTimer?: boolean;\n  showHistory?: boolean;\n  autoSave?: boolean;\n}\n\nexport const TimeTracker: React.FC<TimeTrackerProps> = ({\n  onSessionStart,\n  onSessionStop,\n  onSessionPause,\n  onTimeEntry,\n  projects,\n  showHistory = false,\n}) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(0);\n  const [startTime, setStartTime] = useState<Date | null>(null);\n  const [timeEntries, setTimeEntries] = useState<TimeEntry[]>([]);\n\n  useEffect(() => {\n    let interval: ReturnType<typeof setTimeout> | null = null;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 1);\n      }, 1000);\n    } else if (!isRunning && time !== 0) {\n      if (interval) {\n        clearInterval(interval);\n      }\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isRunning, time]);\n\n  const handleStart = () => {\n    setIsRunning(true);\n    setStartTime(new Date());\n    onSessionStart(projects[0]);\n  };\n\n  const validateTimeEntry = (entry: TimeEntry) => {\n    if (entry.endTime.getTime() - entry.startTime.getTime() < 1000) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleStop = () => {\n    setIsRunning(false);\n    if (startTime) {\n      const entry: TimeEntry = {\n        id: new Date().toISOString(),\n        startTime,\n        endTime: new Date(),\n        project: projects[0],\n      };\n      if (validateTimeEntry(entry)) {\n        onTimeEntry(entry);\n        setTimeEntries((prev) => [entry, ...prev]);\n      } else {\n        alert('Invalid time entry');\n      }\n    }\n    onSessionStop();\n  };\n\n  const handlePause = () => {\n    setIsRunning(false);\n    onSessionPause();\n  };\n\n  const formatTime = (timeInSeconds: number) => {\n    const hours = Math.floor(timeInSeconds / 3600);\n    const minutes = Math.floor((timeInSeconds % 3600) / 60);\n    const seconds = timeInSeconds % 60;\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(\n      2,\n      '0'\n    )}:${String(seconds).padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div>{formatTime(time)}</div>\n      {!isRunning ? (\n        <Button onClick={handleStart}>\n          <Icon name=\"Play\" />\n        </Button>\n      ) : (\n        <>\n          <Button onClick={handlePause}>\n            <Icon name=\"Pause\" />\n          </Button>\n          <Button onClick={handleStop}>\n            <Icon name=\"Square\" />\n          </Button>\n        </>\n      )}\n      {showHistory && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-lg font-bold\">Time Entries</h3>\n          <ul>\n            {timeEntries.map((entry) => (\n              <li key={entry.id}>\n                {entry.project.name}: {formatTime(Math.floor((entry.endTime.getTime() - entry.startTime.getTime()) / 1000))}\n              </li>\n            ))}\n          </ul>\n          <Button onClick={() => alert('Exporting time entries...')}>Export</Button>\n        </div>\n      )}\n    </div>\n  );\n};\n", "import { Button } from '@wheel/ui';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@wheel/ui';\nimport { Icon } from '@wheel/ui';\nimport React from 'react';\nimport { Workspace } from './types';\n\nexport interface WorkspaceSwitcherProps {\n  workspaces: Workspace[];\n  currentWorkspace: Workspace;\n  onWorkspaceChange: (workspace: Workspace) => void;\n  onWorkspaceCreate?: () => void;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showRecent?: boolean;\n  showSearch?: boolean;\n  maxRecent?: number;\n  placement?: 'dropdown' | 'modal' | 'sidebar';\n}\n\nexport const WorkspaceSwitcher: React.FC<WorkspaceSwitcherProps> = ({\n  workspaces,\n  currentWorkspace,\n  onWorkspaceChange,\n  onWorkspaceCreate,\n  showSearch = false,\n  showRecent = false,\n  maxRecent = 5,\n}) => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [recentWorkspaces, setRecentWorkspaces] = React.useState<Workspace[]>([]);\n\n  const handleWorkspaceChange = (workspace: Workspace) => {\n    onWorkspaceChange(workspace);\n    setRecentWorkspaces((prev) =>\n      [workspace, ...prev.filter((w) => w.id !== workspace.id)].slice(0, maxRecent)\n    );\n  };\n\n  const filteredWorkspaces = workspaces.filter((workspace) =>\n    workspace.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\">\n          <Icon name=\"Users\" className=\"mr-2\" />\n          {currentWorkspace.name}\n          <Icon name=\"ChevronDown\" className=\"ml-2\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent>\n        {showSearch && (\n          <div className=\"p-2\">\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              className=\"w-full p-1 border rounded\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n        )}\n        {showRecent && recentWorkspaces.length > 0 && (\n          <>\n            <div className=\"p-2 text-xs text-gray-500\">Recent</div>\n            {recentWorkspaces.map((workspace) => (\n              <DropdownMenuItem\n                key={`recent-${workspace.id}`}\n                onSelect={() => handleWorkspaceChange(workspace)}\n              >\n                {workspace.name}\n              </DropdownMenuItem>\n            ))}\n            <hr className=\"my-1\" />\n          </>\n        )}\n        {filteredWorkspaces.map((workspace) => (\n          <DropdownMenuItem\n            key={workspace.id}\n            onSelect={() => handleWorkspaceChange(workspace)}\n          >\n            {workspace.name}\n          </DropdownMenuItem>\n        ))}\n        {onWorkspaceCreate && (\n          <>\n            <hr className=\"my-1\" />\n            <DropdownMenuItem onSelect={onWorkspaceCreate}>\n              <Icon name=\"Plus\" className=\"mr-2\" />\n              Create Workspace\n            </DropdownMenuItem>\n          </>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n", "import { ErrorCategory } from './types';\n\nexport const categorizeError = (error: Error): ErrorCategory => {\n  // Basic error categorization logic. This can be expanded.\n  if (error.message.includes('Network')) {\n    return {\n      type: 'network',\n      severity: 'high',\n      recoverable: true,\n      userMessage: 'A network error occurred. Please check your connection and try again.',\n      technicalMessage: error.message,\n      suggestedActions: [{ label: 'Retry', action: () => window.location.reload(), type: 'primary' }],\n    };\n  }\n\n  if (error.message.includes('Permission')) {\n    return {\n      type: 'permission',\n      severity: 'medium',\n      recoverable: false,\n      userMessage: \"You don't have permission to perform this action.\",\n      technicalMessage: error.message,\n      suggestedActions: [],\n    };\n  }\n\n  return {\n    type: 'unknown',\n    severity: 'critical',\n    recoverable: false,\n    userMessage: 'An unexpected error occurred.',\n    technicalMessage: error.message,\n    suggestedActions: [],\n  };\n};\n", "import { Alert, AlertProps } from '@wheel/ui';\nimport { Button } from '@wheel/ui';\nimport React from 'react';\nimport { ErrorAction, ErrorInfo } from './types';\nimport { categorizeError } from './utils';\n\ninterface ErrorAlertProps extends Omit<AlertProps, 'variant' | 'title' | 'description' | 'actions'> {\n  error: Error | ErrorInfo;\n  severity?: 'low' | 'medium' | 'high' | 'critical';\n  showDetails?: boolean;\n  showErrorCode?: boolean;\n  actions?: ErrorAction[];\n  onDismiss?: () => void;\n}\n\nconst ErrorAlert: React.FC<ErrorAlertProps> = ({\n  error,\n  severity,\n  context,\n  dismissible,\n  onDismiss,\n  showDetails,\n  showErrorCode,\n  actions,\n  ...props\n}) => {\n  const normalizedError = error instanceof Error ? error : new Error('An error occurred');\n  const category = categorizeError(normalizedError);\n\n  const alertVariant = {\n    low: 'info',\n    medium: 'warning',\n    high: 'error',\n    critical: 'error',\n  }[severity || category.severity] as AlertProps['variant'];\n\n  return (\n    <Alert\n      variant={alertVariant}\n      title={category.userMessage}\n      context={context}\n      dismissible={dismissible}\n      onClose={onDismiss}\n      {...props}\n    >\n      {showDetails && (\n        <details>\n          <summary>Error Details</summary>\n          <pre>{category.technicalMessage}</pre>\n        </details>\n      )}\n      {showErrorCode && <code>Error Code: {normalizedError.name}</code>}\n      <div>\n        {actions?.map((action, index) => (\n          <Button key={index} onClick={action.action} variant={action.type}>\n            {action.label}\n          </Button>\n        ))}\n      </div>\n    </Alert>\n  );\n};\n\nexport { ErrorAlert };\nexport type { ErrorAlertProps };\n\n", "import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { errorReporter } from './error-reporting';\n\ninterface ErrorBoundaryProps {\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  fallback?: React.ComponentType<ErrorFallbackProps>;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n  resetKeys?: Array<string | number>;\n  resetOnPropsChange?: boolean;\n  isolate?: boolean;\n  level?: 'page' | 'section' | 'component';\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\ninterface ErrorFallbackProps {\n  error: Error;\n  resetError: () => void;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  errorInfo?: ErrorInfo;\n  level?: 'page' | 'section' | 'component';\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    errorReporter.report(error, errorInfo);\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  resetError = () => {\n    this.setState({ hasError: false, error: null });\n  };\n\n  render() {\n    const { hasError, error } = this.state;\n    const { fallback: FallbackComponent, children, context, level } = this.props;\n\n    if (hasError && error) {\n      if (FallbackComponent) {\n        return (\n          <FallbackComponent\n            error={error}\n            resetError={this.resetError}\n            context={context}\n            level={level}\n          />\n        );\n      }\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return children;\n  }\n}\n\nexport { ErrorBoundary };\nexport type { ErrorBoundaryProps, ErrorFallbackProps };\n\n", "import { ErrorInfo } from './types';\n\nclass ErrorReportingService {\n  report(error: Error, errorInfo: ErrorInfo) {\n    // In a real application, this would send the error to a service like Sentry, Bugsnag, or a custom backend.\n    console.group('Error Reporter');\n    console.error('Caught an error:', error);\n    console.log('Additional info:', errorInfo);\n    console.groupEnd();\n  }\n}\n\nexport const errorReporter = new ErrorReportingService();\n", "import { Button } from '@wheel/ui';\nimport { Input } from '@wheel/ui';\nimport { Label } from '@wheel/ui';\nimport { Textarea } from '@wheel/ui';\nimport React, { useState } from 'react';\nimport { ErrorInfo } from './types';\n\ninterface ErrorFeedback {\n  description: string;\n  steps?: string;\n  impact?: 'low' | 'medium' | 'high';\n  frequency?: 'once' | 'intermittent' | 'frequent';\n  contactInfo?: string;\n  screenshot?: File;\n}\n\ninterface ErrorFeedbackProps {\n  error: Error | ErrorInfo;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  onSubmit: (feedback: ErrorFeedback) => Promise<void>;\n  fields?: FeedbackField[];\n  showErrorDetails?: boolean;\n  anonymous?: boolean;\n}\n\ntype FeedbackField = 'description' | 'steps' | 'impact' | 'frequency' | 'contactInfo' | 'screenshot';\n\nconst ErrorFeedback: React.FC<ErrorFeedbackProps> = ({\n  error,\n  onSubmit,\n  fields = ['description', 'contactInfo'],\n  showErrorDetails = true,\n  anonymous = false,\n}) => {\n  const [feedback, setFeedback] = useState<ErrorFeedback>({ description: '' });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    await onSubmit(feedback);\n    setIsSubmitting(false);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setFeedback({ ...feedback, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {showErrorDetails && (\n        <div>\n          <h3 className=\"font-bold\">Error Details</h3>\n          <pre className=\"text-sm bg-gray-100 p-2 rounded\">\n            {error instanceof Error ? error.message : 'An error occurred'}\n          </pre>\n        </div>\n      )}\n      {fields.includes('description') && (\n        <div>\n          <Label htmlFor=\"description\">Description</Label>\n          <Textarea id=\"description\" name=\"description\" value={feedback.description} onChange={handleChange} required />\n        </div>\n      )}\n      {fields.includes('steps') && (\n        <div>\n          <Label htmlFor=\"steps\">Steps to Reproduce</Label>\n          <Textarea id=\"steps\" name=\"steps\" value={feedback.steps || ''} onChange={handleChange} />\n        </div>\n      )}\n      {fields.includes('impact') && (\n        <div>\n          <Label htmlFor=\"impact\">Impact</Label>\n          <select id=\"impact\" name=\"impact\" value={feedback.impact || 'low'} onChange={handleChange}>\n            <option value=\"low\">Low</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"high\">High</option>\n          </select>\n        </div>\n      )}\n      {fields.includes('frequency') && (\n        <div>\n          <Label htmlFor=\"frequency\">Frequency</Label>\n          <select id=\"frequency\" name=\"frequency\" value={feedback.frequency || 'once'} onChange={handleChange}>\n            <option value=\"once\">Once</option>\n            <option value=\"intermittent\">Intermittent</option>\n            <option value=\"frequent\">Frequent</option>\n          </select>\n        </div>\n      )}\n      {!anonymous && fields.includes('contactInfo') && (\n        <div>\n          <Label htmlFor=\"contactInfo\">Contact Info</Label>\n          <Input id=\"contactInfo\" name=\"contactInfo\" value={feedback.contactInfo || ''} onChange={handleChange} />\n        </div>\n      )}\n      <Button type=\"submit\" disabled={isSubmitting}>\n        {isSubmitting ? 'Submitting...' : 'Submit Feedback'}\n      </Button>\n    </form>\n  );\n};\n\nexport { ErrorFeedback };\nexport type { ErrorFeedbackProps, FeedbackField };\n\n", "import { Button } from '@wheel/ui';\nimport { Modal, ModalProps } from '@wheel/ui';\nimport React from 'react';\nimport { ErrorAction, ErrorInfo } from './types';\nimport { categorizeError } from './utils';\n\ninterface ErrorModalProps extends Omit<ModalProps, 'children'> {\n  error: Error | ErrorInfo;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showDetails?: boolean;\n  actions?: ErrorAction[];\n  severity?: 'low' | 'medium' | 'high' | 'critical';\n}\n\nconst ErrorModal: React.FC<ErrorModalProps> = ({\n  error,\n  context,\n  showDetails,\n  actions,\n  severity,\n  ...props\n}) => {\n  const normalizedError = error instanceof Error ? error : new Error('An error occurred');\n  const category = categorizeError(normalizedError);\n\n  return (\n    <Modal {...props}>\n      <div className=\"p-4\">\n        <h2 className=\"text-lg font-bold\">{category.userMessage}</h2>\n        {showDetails && (\n          <details className=\"mt-2\">\n            <summary>Error Details</summary>\n            <pre className=\"mt-2 text-sm bg-gray-100 p-2 rounded\">\n              {category.technicalMessage}\n            </pre>\n          </details>\n        )}\n        <div className=\"mt-4 space-x-2\">\n          {actions?.map((action, index) => (\n            <Button key={index} onClick={action.action} variant={action.type}>\n              {action.label}\n            </Button>\n          ))}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport { ErrorModal };\nexport type { ErrorModalProps };\n\n", "import { Button } from '@wheel/ui';\nimport React, { ReactNode } from 'react';\nimport { ErrorAction, ErrorInfo } from './types';\nimport { categorizeError } from './utils';\n\ninterface ErrorPageProps {\n  error: Error | ErrorInfo;\n  title?: string;\n  description?: string;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  illustration?: ReactNode;\n  actions?: ErrorAction[];\n  showHomeButton?: boolean;\n  showSupportContact?: boolean;\n}\n\nconst ErrorPage: React.FC<ErrorPageProps> = ({\n  error,\n  title,\n  description,\n  context = 'neutral',\n  illustration,\n  actions,\n  showHomeButton = true,\n  showSupportContact = true,\n}) => {\n  const normalizedError = error instanceof Error ? error : new Error('An error occurred');\n  const category = categorizeError(normalizedError);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 text-center p-4\">\n      {illustration}\n      <h1 className=\"text-4xl font-bold mt-4\">{title || category.userMessage}</h1>\n      <p className=\"text-lg mt-2\">{description || category.technicalMessage}</p>\n      <div className=\"mt-6 space-x-4\">\n        {actions?.map((action, index) => (\n          <Button key={index} onClick={action.action} variant={action.type}>\n            {action.label}\n          </Button>\n        ))}\n        {showHomeButton && <Button onClick={() => (window.location.href = '/')}>Go Home</Button>}\n      </div>\n      {showSupportContact && (\n        <p className=\"mt-4 text-sm text-gray-600\">\n          If the problem persists, please contact support.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport { ErrorPage };\nexport type { ErrorPageProps };\n\n", "import { ToastProps, useToast } from '@wheel/ui';\nimport { ErrorAction, ErrorInfo } from './types';\nimport { categorizeError } from './utils';\n\ninterface ErrorToastProps {\n  error: Error | ErrorInfo;\n  duration?: number;\n  position?: 'top' | 'bottom' | 'top-right' | 'bottom-right';\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  action?: ErrorAction;\n  onClose?: () => void;\n}\n\nexport const useErrorToast = () => {\n  const { show } = useToast();\n\n  const showErrorToast = (props: ErrorToastProps) => {\n    const normalizedError = props.error instanceof Error ? props.error : new Error('An error occurred');\n    const category = categorizeError(normalizedError);\n\n    const toastProps: ToastProps = {\n      variant: 'error',\n      title: category.userMessage,\n      description: category.technicalMessage,\n      duration: props.duration,\n      context: props.context,\n      actions: props.action ? [{ label: props.action.label, onClick: props.action.action }] : [],\n    };\n\n    show(toastProps);\n  };\n\n  return { showErrorToast };\n};\n", "import React, { ReactNode, useState } from 'react';\n\ninterface FallbackContentProps {\n  primaryContent: ReactNode;\n  fallbackContent: ReactNode;\n  error?: Error;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showError?: boolean;\n  onContentSwitch?: (isFallback: boolean) => void;\n}\n\nconst FallbackContent: React.FC<FallbackContentProps> = ({\n  primaryContent,\n  fallbackContent,\n  error,\n  showError = false,\n  onContentSwitch,\n}) => {\n  const [showFallback, setShowFallback] = useState(!!error);\n\n  const handleSwitch = () => {\n    const newShowFallback = !showFallback;\n    setShowFallback(newShowFallback);\n    if (onContentSwitch) {\n      onContentSwitch(newShowFallback);\n    }\n  };\n\n  return (\n    <div>\n      {showFallback ? fallbackContent : primaryContent}\n      {showError && error && (\n        <button onClick={handleSwitch} className=\"text-sm text-blue-500 mt-2\">\n          {showFallback ? 'Show Primary Content' : 'Show Fallback Content'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport { FallbackContent };\nexport type { FallbackContentProps };\n\n", "import { Button } from '@wheel/ui';\nimport React from 'react';\nimport { ErrorFallbackProps } from './ErrorBoundary';\nimport { categorizeError } from './utils';\n\nconst FallbackUI: React.FC<ErrorFallbackProps> = ({ error, resetError, context, level }) => {\n  const category = categorizeError(error);\n\n  return (\n    <div role=\"alert\">\n      <h2>{category.userMessage}</h2>\n      <p>Context: {context}</p>\n      <p>Level: {level}</p>\n      <details>\n        <summary>Error Details</summary>\n        <pre>{category.technicalMessage}</pre>\n      </details>\n      {category.suggestedActions.map((action, index) => (\n        <Button key={index} onClick={action.action} variant={action.type}>\n          {action.label}\n        </Button>\n      ))}\n      <Button onClick={resetError}>Try again</Button>\n    </div>\n  );\n};\n\nexport { FallbackUI };\n", "import { cn } from '@wheel/shared/utils/cn';\nimport React from 'react';\n\ninterface InlineErrorProps {\n  message: string;\n  fieldName?: string;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  icon?: boolean;\n  animate?: boolean;\n  className?: string;\n}\n\nconst InlineError: React.FC<InlineErrorProps> = ({\n  message,\n  fieldName,\n  context = 'neutral',\n  icon = true,\n  animate = true,\n  className,\n}) => {\n  const contextClasses = {\n    consultant: 'text-blue-600',\n    client: 'text-green-600',\n    admin: 'text-gray-600',\n    neutral: 'text-red-600',\n  };\n\n  const errorClasses = cn(\n    'text-sm',\n    contextClasses[context],\n    { 'transition-opacity duration-300 ease-in-out': animate },\n    className\n  );\n\n  return (\n    <div className={errorClasses} role=\"alert\" aria-label={`Error for ${fieldName}`}>\n      {icon && <span className=\"mr-1\">!</span>}\n      {message}\n    </div>\n  );\n};\n\nexport { InlineError };\nexport type { InlineErrorProps };\n\n", "import { ProgressIndicator } from '@wheel/ui';\nimport React, { useEffect, useState } from 'react';\n\ninterface RecoveryStep {\n  id: string;\n  label: string;\n  description?: string;\n  action: () => Promise<void>;\n  canSkip?: boolean;\n  timeout?: number;\n}\n\ninterface RecoveryProgressProps {\n  steps: RecoveryStep[];\n  currentStep: number;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  showStepDetails?: boolean;\n  onStepComplete?: (step: RecoveryStep) => void;\n  onRecoveryComplete?: () => void;\n  onRecoveryFail?: (error: Error) => void;\n}\n\nconst RecoveryProgress: React.FC<RecoveryProgressProps> = ({\n  steps,\n  onRecoveryComplete,\n  onRecoveryFail,\n  onStepComplete,\n}) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const runSteps = async () => {\n      for (let i = 0; i < steps.length; i++) {\n        setCurrentStep(i);\n        try {\n          await steps[i].action();\n          if (onStepComplete) {\n            onStepComplete(steps[i]);\n          }\n        } catch (e) {\n          setError(e as Error);\n          if (onRecoveryFail) {\n            onRecoveryFail(e as Error);\n          }\n          return;\n        }\n      }\n      if (onRecoveryComplete) {\n        onRecoveryComplete();\n      }\n    };\n\n    runSteps();\n  }, [steps, onRecoveryComplete, onRecoveryFail, onStepComplete]);\n\n  const progress = (currentStep / steps.length) * 100;\n\n  if (error) {\n    return <div>Recovery failed: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <ProgressIndicator value={progress} />\n      <p>\n        Step {currentStep + 1} of {steps.length}: {steps[currentStep].label}\n      </p>\n    </div>\n  );\n};\n\nexport { RecoveryProgress };\nexport type { RecoveryProgressProps, RecoveryStep };\n\n", "import { Button } from '@wheel/ui';\nimport React from 'react';\n\ninterface RefreshPageProps {\n  preserveState?: boolean;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  confirmBeforeRefresh?: boolean;\n  customMessage?: string;\n  onBeforeRefresh?: () => void;\n}\n\nconst RefreshPage: React.FC<RefreshPageProps> = ({\n  preserveState = false,\n  confirmBeforeRefresh = false,\n  customMessage = 'Are you sure you want to refresh the page?',\n  onBeforeRefresh,\n}) => {\n  const handleRefresh = () => {\n    if (confirmBeforeRefresh) {\n      if (window.confirm(customMessage)) {\n        if (onBeforeRefresh) {\n          onBeforeRefresh();\n        }\n        if (!preserveState) {\n          window.location.reload();\n        }\n      }\n    } else {\n      if (onBeforeRefresh) {\n        onBeforeRefresh();\n      }\n      if (!preserveState) {\n        window.location.reload();\n      }\n    }\n  };\n\n  return <Button onClick={handleRefresh}>Refresh Page</Button>;\n};\n\nexport { RefreshPage };\nexport type { RefreshPageProps };\n\n", "import { Button } from '@wheel/ui';\nimport React, { useState } from 'react';\n\ninterface RetryButtonProps {\n  onRetry: () => Promise<void>;\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  maxRetries?: number;\n  backoffMs?: number;\n  exponential?: boolean;\n  label?: string;\n  loadingLabel?: string;\n  failureLabel?: string;\n}\n\nconst RetryButton: React.FC<RetryButtonProps> = ({\n  onRetry,\n  maxRetries = 3,\n  backoffMs = 1000,\n  exponential = true,\n  label = 'Retry',\n  loadingLabel = 'Retrying...',\n  failureLabel = 'Failed',\n}) => {\n  const [isRetrying, setIsRetrying] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n\n  const handleRetry = async () => {\n    setIsRetrying(true);\n    setRetryCount(retryCount + 1);\n\n    try {\n      await onRetry();\n      setIsRetrying(false);\n      setRetryCount(0);\n    } catch (error) {\n      if (retryCount < maxRetries) {\n        const delay = exponential ? backoffMs * 2 ** retryCount : backoffMs;\n        setTimeout(handleRetry, delay);\n      } else {\n        setIsRetrying(false);\n      }\n    }\n  };\n\n  return (\n    <Button onClick={handleRetry} disabled={isRetrying}>\n      {isRetrying ? loadingLabel : retryCount > 0 ? `${label} (${retryCount})` : label}\n    </Button>\n  );\n};\n\nexport { RetryButton };\nexport type { RetryButtonProps };\n\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "Tooltip", "React", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "_a", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "tools", "import_jsx_runtime", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "React", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime"]
}
