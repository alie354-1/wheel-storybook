{
  "version": 3,
  "sources": ["../../../../../../packages/ui/src/components/addressinput.tsx", "../../../../../../packages/ui/src/components/alert.tsx", "../../../../../../packages/ui/src/components/index.ts", "../../../../../../packages/ui/src/components/billingstatus.tsx", "../../../../../../packages/ui/src/components/checkbox.tsx", "../../../../../../packages/ui/src/components/clientbadge.tsx", "../../../../../../packages/ui/src/components/collaboratoravatar.tsx", "../../../../../../packages/ui/src/components/colorpicker.tsx", "../../../../../../packages/ui/src/components/consenttoggle.tsx", "../../../../../../packages/ui/src/components/currencyinput.tsx", "../../../../../../packages/ui/src/components/datepicker.tsx", "../../../../../../packages/ui/src/components/documenttype.tsx", "../../../../../../packages/ui/src/components/dropdown-menu.tsx", "../../../../../../packages/ui/src/components/EmptyState.tsx", "../../../../../../packages/ui/src/components/expertisetag.tsx", "../../../../../../packages/ui/src/components/icon.tsx", "../../../../../../packages/ui/src/components/image.tsx", "../../../../../../packages/ui/src/components/input.tsx", "../../../../../../packages/ui/src/components/validationcontext.tsx", "../../../../../../packages/ui/src/components/label.tsx", "../../../../../../packages/ui/src/components/loadingoverlay.tsx", "../../../../../../packages/ui/src/components/spinner.tsx", "../../../../../../packages/ui/src/components/modal.tsx", "../../../../../../packages/ui/src/components/OnboardingWizard.tsx", "../../../../../../packages/ui/src/components/progress.tsx", "../../../../../../packages/ui/src/components/phoneinput.tsx", "../../../../../../packages/ui/src/components/progressindicator.tsx", "../../../../../../packages/ui/src/components/projectphase.tsx", "../../../../../../packages/ui/src/components/richtexteditor.tsx", "../../../../../../packages/ui/src/components/separator.tsx", "../../../../../../packages/ui/src/components/skeletonloader.tsx", "../../../../../../packages/ui/src/components/slider.tsx", "../../../../../../packages/ui/src/components/StatusDot.tsx", "../../../../../../packages/ui/src/components/switch.tsx", "../../../../../../packages/ui/src/components/tabs.tsx", "../../../../../../packages/ui/src/components/textarea.tsx", "../../../../../../packages/ui/src/components/timeindicator.tsx", "../../../../../../packages/ui/src/components/timepicker.tsx", "../../../../../../packages/ui/src/components/timerangeinput.tsx", "../../../../../../packages/ui/src/components/toast.tsx", "../../../../../../packages/ui/src/components/verticalslider.tsx", "../../../../../../packages/ui/src/components/workspaceicon.tsx", "../../../../../../packages/ui/src/components/container.tsx", "../../../../../../packages/ui/src/components/flex.tsx", "../../../../../../packages/ui/src/components/grid.tsx", "../../../../../../packages/ui/src/components/panel.tsx", "../../../../../../packages/ui/src/components/stack.tsx"],
  "sourcesContent": ["import React, { useState } from 'react';\nimport { cn } from '@wheel/shared';\n\nexport interface AddressInputProps {\n  value?: {\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n  };\n  onChange?: (value: {\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n  }) => void;\n  disabled?: boolean;\n  className?: string;\n}\n\n/**\n * AddressInput component for entering addresses.\n */\nexport const AddressInput: React.FC<AddressInputProps> = ({\n  value = { street: '', city: '', state: '', zip: '' },\n  onChange,\n  disabled = false,\n  className = '',\n}) => {\n  const [address, setAddress] = useState(value);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    const newAddress = { ...address, [name]: value };\n    setAddress(newAddress);\n    if (onChange) {\n      onChange(newAddress);\n    }\n  };\n\n  return (\n    <div className={cn('grid grid-cols-1 gap-4', className)}>\n      <input\n        type=\"text\"\n        name=\"street\"\n        value={address.street}\n        onChange={handleChange}\n        disabled={disabled}\n        className={cn(\n          'border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm',\n          disabled ? 'bg-gray-100' : ''\n        )}\n        placeholder=\"Street\"\n      />\n      <div className=\"grid grid-cols-3 gap-4\">\n        <input\n          type=\"text\"\n          name=\"city\"\n          value={address.city}\n          onChange={handleChange}\n          disabled={disabled}\n          className={cn(\n            'border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm col-span-2',\n            disabled ? 'bg-gray-100' : ''\n          )}\n          placeholder=\"City\"\n        />\n        <input\n          type=\"text\"\n          name=\"state\"\n          value={address.state}\n          onChange={handleChange}\n          disabled={disabled}\n          className={cn(\n            'border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm',\n            disabled ? 'bg-gray-100' : ''\n          )}\n          placeholder=\"State\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        name=\"zip\"\n        value={address.zip}\n        onChange={handleChange}\n        disabled={disabled}\n        className={cn(\n          'border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm',\n          disabled ? 'bg-gray-100' : ''\n        )}\n        placeholder=\"ZIP Code\"\n      />\n    </div>\n  );\n};\n\nexport default AddressInput;\n", "/**\n * Alert Component\n *\n * A component for displaying prominent messages and alerts to the user.\n */\n\nimport { cn } from '@wheel/shared';\nimport { X } from 'lucide-react';\nimport { forwardRef, ReactNode } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type AlertVariant = 'success' | 'warning' | 'error' | 'info';\nexport type Urgency = 'low' | 'medium' | 'high' | 'critical';\n\nexport interface AlertProps {\n  variant?: AlertVariant;\n  urgency?: Urgency;\n  context?: WorkspaceContext;\n  title?: string;\n  description?: string;\n  actions?: ReactNode;\n  dismissible?: boolean;\n  onClose?: () => void;\n  className?: string;\n  children?: ReactNode;\n}\n\nexport const Alert = forwardRef<HTMLDivElement, AlertProps>((\n  {\n    variant = 'info',\n    urgency = 'medium',\n    context = 'neutral',\n    title,\n    description,\n    actions,\n    dismissible = false,\n    onClose,\n    className,\n    children,\n    ...props\n  },\n  ref\n) => {\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'success': return 'bg-green-100 border-green-500 text-green-800';\n      case 'warning': return 'bg-yellow-100 border-yellow-500 text-yellow-800';\n      case 'error': return 'bg-red-100 border-red-500 text-red-800';\n      case 'info': return 'bg-sky-100 border-sky-500 text-sky-800';\n      default: return 'bg-gray-100 border-gray-500 text-gray-800';\n    }\n  };\n\n  const getContextClasses = () => {\n    if (variant !== 'info') return '';\n    switch (context) {\n      case 'consultant': return 'bg-blue-100 border-blue-500 text-blue-800';\n      case 'client': return 'bg-green-100 border-green-500 text-green-800';\n      case 'admin': return 'bg-gray-100 border-gray-500 text-gray-800';\n      case 'expert': return 'bg-purple-100 border-purple-500 text-purple-800';\n      case 'toolCreator': return 'bg-indigo-100 border-indigo-500 text-indigo-800';\n      case 'founder': return 'bg-orange-100 border-orange-500 text-orange-800';\n      default: return '';\n    }\n  };\n\n  const alertClasses = cn(\n    'p-4 border-l-4 rounded-r-lg',\n    getContextClasses() || getVariantClasses(),\n    className\n  );\n\n  return (\n    <div ref={ref} className={alertClasses} role=\"alert\" {...props}>\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          {/* Icon can be added here based on variant */}\n        </div>\n        <div className=\"ml-3\">\n          {title && <h3 className=\"text-sm font-medium\">{title}</h3>}\n          <div className=\"mt-2 text-sm\">\n            {description && <p>{description}</p>}\n            {children}\n          </div>\n          {actions && <div className=\"mt-4\">{actions}</div>}\n        </div>\n        {dismissible && (\n          <div className=\"ml-auto pl-3\">\n            <div className=\"-mx-1.5 -my-1.5\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"inline-flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2\"\n              >\n                <span className=\"sr-only\">Dismiss</span>\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n\nAlert.displayName = 'Alert';\n", "// UI Components\nexport { AddressInput } from './addressinput';\nexport { Alert, type AlertProps } from './alert';\nexport { Avatar } from './Avatar.tsx';\nexport { Badge } from './badge.tsx';\nexport { BillingStatus } from './billingstatus';\nexport { BreadcrumbItem, Breadcrumbs } from './Breadcrumbs.tsx';\nexport { Button, type ButtonVariant } from './button.tsx';\nexport { Card } from './card.tsx';\nexport { Checkbox } from './checkbox';\nexport { ClientBadge } from './clientbadge';\nexport { CollaboratorAvatar } from './collaboratoravatar';\nexport { ColorPicker } from './colorpicker';\nexport { ConsentToggle } from './consenttoggle';\nexport { CustomCurrencyInput as CurrencyInput } from './currencyinput';\nexport { DatePicker } from './datepicker';\nexport { DocumentType } from './documenttype';\nexport {\n  DropdownMenu, DropdownMenuContent,\n  DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger\n} from './dropdown-menu';\nexport { EmptyState } from './EmptyState';\nexport { ExpertiseTag } from './expertisetag';\nexport { Icon, type IconProps } from './icon';\nexport type { LucideIconName } from './icon';\nexport { Image } from './image';\nexport { Input } from './input';\nexport { Label } from './label';\nexport { LoadingOverlay } from './loadingoverlay';\nexport { Logo } from './Logo.tsx';\nexport { Modal, type ModalProps } from './modal';\nexport { OnboardingWizard } from './OnboardingWizard';\nexport { Pagination } from './Pagination.tsx';\nexport { PhoneInput } from './phoneinput';\nexport { Progress } from './progress';\nexport { ProgressIndicator } from './progressindicator';\nexport { ProjectPhase } from './projectphase';\nexport { RichTextEditor } from './richtexteditor';\nexport { EnhancedSelect as Select } from './select.tsx';\nexport { Separator } from './separator';\nexport { SkeletonLoader } from './skeletonloader';\nexport { Slider } from './slider';\nexport { Spinner } from './spinner';\nexport { StatusDot } from './StatusDot';\nexport { Switch } from './switch';\nexport { Tabs } from './tabs';\nexport { Textarea } from './textarea';\nexport { TimeIndicator } from './timeindicator';\nexport { TimePicker } from './timepicker';\nexport { TimeRangeInput } from './timerangeinput';\nexport { Toast, useToast, type ToastProps } from './toast';\nexport { Tooltip } from './Tooltip.tsx';\nexport { VerticalSlider } from './verticalslider';\nexport { WorkspaceIcon } from './workspaceicon';\n\n// Layout Components\nexport { Container } from './container';\nexport { Flex } from './flex';\nexport { Grid } from './grid';\nexport { Panel } from './panel';\nexport { Stack } from './stack';\n\n// Utils\nexport { cn } from '@wheel/shared';\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport type BillingStatusVariant = 'paid' | 'pending' | 'overdue' | 'draft';\n\nexport interface BillingStatusProps {\n  status: BillingStatusVariant;\n  className?: string;\n}\n\n/**\n * BillingStatus component that displays a billing status indicator.\n */\nexport const BillingStatus: React.FC<BillingStatusProps> = ({\n  status,\n  className = '',\n}) => {\n  const statusStyles: Record<BillingStatusVariant, string> = {\n    paid: 'bg-green-100 text-green-800',\n    pending: 'bg-yellow-100 text-yellow-800',\n    overdue: 'bg-red-100 text-red-800',\n    draft: 'bg-gray-100 text-gray-800',\n  };\n\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center rounded-full px-3 py-1 text-sm font-semibold',\n        statusStyles[status],\n        className\n      )}\n    >\n      {status.charAt(0).toUpperCase() + status.slice(1)}\n    </div>\n  );\n};\n\nexport default BillingStatus;\n", "import * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\nimport * as React from \"react\"\n\nimport { cn } from \"@wheel/shared\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-slate-300 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-700 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-slate-700 data-[state=checked]:text-white\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport interface ClientBadgeProps {\n  client: {\n    name: string;\n    logo?: string;\n  };\n  className?: string;\n}\n\n/**\n * ClientBadge component that displays a client's name and logo.\n */\nexport const ClientBadge: React.FC<ClientBadgeProps> = ({\n  client,\n  className = '',\n}) => {\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center rounded-full px-3 py-1 text-sm font-semibold bg-gray-100 text-gray-800',\n        className\n      )}\n    >\n      {client.logo && (\n        <img\n          src={client.logo}\n          alt={`${client.name} logo`}\n          className=\"w-5 h-5 rounded-full mr-2\"\n        />\n      )}\n      <span>{client.name}</span>\n    </div>\n  );\n};\n\nexport default ClientBadge;\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport interface CollaboratorAvatarProps {\n  collaborator: {\n    name: string;\n    avatarUrl?: string;\n  };\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\n/**\n * CollaboratorAvatar component that displays a collaborator's avatar.\n */\nexport const CollaboratorAvatar: React.FC<CollaboratorAvatarProps> = ({\n  collaborator,\n  size = 'md',\n  className = '',\n}) => {\n  const sizeClasses = {\n    sm: 'w-8 h-8',\n    md: 'w-10 h-10',\n    lg: 'w-12 h-12',\n  };\n\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map((n) => n[0])\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  };\n\n  return (\n    <div\n      className={cn(\n        'rounded-full flex items-center justify-center bg-gray-200 text-gray-700 font-bold',\n        sizeClasses[size],\n        className\n      )}\n      title={collaborator.name}\n    >\n      {collaborator.avatarUrl ? (\n        <img\n          src={collaborator.avatarUrl}\n          alt={collaborator.name}\n          className=\"w-full h-full rounded-full\"\n        />\n      ) : (\n        <span>{getInitials(collaborator.name)}</span>\n      )}\n    </div>\n  );\n};\n\nexport default CollaboratorAvatar;\n", "/**\n * ColorPicker Component\n *\n * A component for selecting colors with support for various formats and workspace contexts.\n */\n\nimport { forwardRef, useEffect, useRef, useState } from 'react';\n\nexport type ColorFormat = 'hex' | 'rgb' | 'hsl';\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none';\n\nexport interface ColorPickerProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** The current color value */\n  value?: string;\n  /** Callback when the color changes */\n  onChange?: (color: string) => void;\n  /** The format of the color string */\n  format?: ColorFormat;\n  /** A list of preset colors to display */\n  presets?: string[];\n  /** Allow users to select a custom color */\n  allowCustom?: boolean;\n  /** Validation state */\n  validationState?: ValidationState;\n  /** Helper text */\n  helperText?: string;\n  /** Error message */\n  errorMessage?: string;\n  /** Warning message */\n  warningMessage?: string;\n  /** Success message */\n  successMessage?: string;\n  /** Label for the color picker */\n  label?: string;\n  /** Whether the field is required */\n  required?: boolean;\n  /** Whether the color picker is disabled */\n  disabled?: boolean;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n}\n\nexport const ColorPicker = forwardRef<HTMLDivElement, ColorPickerProps>((\n  {\n    context = 'neutral',\n    value = '#000000',\n    onChange,\n    format = 'hex',\n    presets = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF'],\n    allowCustom = true,\n    validationState = 'none',\n    helperText,\n    errorMessage,\n    warningMessage,\n    successMessage,\n    label,\n    required = false,\n    disabled = false,\n    name,\n    id,\n  },\n  ref\n) => {\n  const [selectedColor, setSelectedColor] = useState(value);\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const colorPickerId = id || `colorpicker-${Math.random().toString(36).substr(2, 9)}`;\n\n  useEffect(() => {\n    setSelectedColor(value);\n  }, [value]);\n\n  const handleColorChange = (color: string) => {\n    setSelectedColor(color);\n    if (onChange) {\n      onChange(color);\n    }\n  };\n\n  const handlePresetSelect = (preset: string) => {\n    handleColorChange(preset);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-blue-400 focus-within:ring-blue-500';\n      case 'client': return 'border-green-400 focus-within:ring-green-500';\n      case 'admin': return 'border-gray-400 focus-within:ring-gray-500';\n      case 'expert': return 'border-purple-400 focus-within:ring-purple-500';\n      case 'toolCreator': return 'border-indigo-400 focus-within:ring-indigo-500';\n      case 'founder': return 'border-orange-400 focus-within:ring-orange-500';\n      default: return 'border-slate-300 focus-within:ring-slate-500';\n    }\n  };\n\n  const getValidationClasses = () => {\n    switch (validationState) {\n      case 'error': return 'border-red-500 focus-within:ring-red-500';\n      case 'warning': return 'border-yellow-500 focus-within:ring-yellow-500';\n      case 'success': return 'border-green-500 focus-within:ring-green-500';\n      default: return '';\n    }\n  };\n\n  const containerClasses = [\n    'relative inline-flex items-center p-1 border rounded-lg shadow-sm',\n    'disabled:cursor-not-allowed disabled:opacity-50 transition-colors duration-200',\n    validationState !== 'none' ? getValidationClasses() : getContextClasses(),\n  ].filter(Boolean).join(' ');\n\n  const currentMessage = (() => {\n    if (errorMessage && validationState === 'error') return { type: 'error', message: errorMessage };\n    if (warningMessage && validationState === 'warning') return { type: 'warning', message: warningMessage };\n    if (successMessage && validationState === 'success') return { type: 'success', message: successMessage };\n    if (helperText) return { type: 'helper', message: helperText };\n    return null;\n  })();\n\n  return (\n    <div ref={ref}>\n      {label && (\n        <label htmlFor={colorPickerId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <div className={containerClasses} ref={dropdownRef}>\n        <button\n          type=\"button\"\n          id={colorPickerId}\n          className=\"w-8 h-8 rounded-md border border-slate-300\"\n          style={{ backgroundColor: selectedColor }}\n          onClick={() => setIsOpen(!isOpen)}\n          disabled={disabled}\n          aria-haspopup=\"true\"\n          aria-expanded={isOpen}\n        />\n        <input\n          type=\"text\"\n          className=\"ml-2 p-1 w-32 border-none focus:ring-0\"\n          value={selectedColor}\n          onChange={(e) => handleColorChange(e.target.value)}\n          disabled={disabled}\n        />\n        {isOpen && (\n          <div className=\"absolute top-full left-0 mt-2 p-4 bg-white border rounded-lg shadow-lg z-10\">\n            <div className=\"grid grid-cols-6 gap-2 mb-4\">\n              {presets.map((preset) => (\n                <button\n                  key={preset}\n                  type=\"button\"\n                  className=\"w-8 h-8 rounded-full border\"\n                  style={{ backgroundColor: preset }}\n                  onClick={() => handlePresetSelect(preset)}\n                />\n              ))}\n            </div>\n            {allowCustom && (\n              <input\n                type=\"color\"\n                className=\"w-full h-10 p-0 border-none cursor-pointer\"\n                value={selectedColor}\n                onChange={(e) => handleColorChange(e.target.value)}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {currentMessage && (\n        <p\n          className={`mt-1 text-sm ${\n            currentMessage.type === 'error' ? 'text-red-600' :\n            currentMessage.type === 'warning' ? 'text-yellow-600' :\n            currentMessage.type === 'success' ? 'text-green-600' :\n            'text-slate-600'\n          }`}\n        >\n          {currentMessage.message}\n        </p>\n      )}\n    </div>\n  );\n});\n\nColorPicker.displayName = 'ColorPicker';\n", "import React, { useState } from 'react';\nimport { cn } from '@wheel/shared';\n\nexport interface ConsentToggleProps {\n  onConsentChange: (consent: boolean) => void;\n  className?: string;\n  label: string;\n  initialConsent?: boolean;\n}\n\n/**\n * ConsentToggle component that provides a toggle for user consent.\n */\nexport const ConsentToggle: React.FC<ConsentToggleProps> = ({\n  onConsentChange,\n  className = '',\n  label,\n  initialConsent = false,\n}) => {\n  const [consent, setConsent] = useState(initialConsent);\n\n  const handleToggle = () => {\n    const newConsent = !consent;\n    setConsent(newConsent);\n    onConsentChange(newConsent);\n  };\n\n  return (\n    <div className={cn('flex items-center', className)}>\n      <button\n        type=\"button\"\n        onClick={handleToggle}\n        className={cn(\n          'relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500',\n          consent ? 'bg-indigo-600' : 'bg-gray-200'\n        )}\n        aria-pressed={consent}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={cn(\n            'pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200',\n            consent ? 'translate-x-5' : 'translate-x-0'\n          )}\n        />\n      </button>\n      <span className=\"ml-3 text-sm font-medium text-gray-900\">{label}</span>\n    </div>\n  );\n};\n\nexport default ConsentToggle;\n", "/**\n * CurrencyInput Component\n *\n * A specialized input component for currency values with workspace context awareness.\n */\n\nimport { forwardRef } from 'react';\nimport CurrencyInput, { CurrencyInputProps as ReactCurrencyInputProps } from 'react-currency-input-field';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none';\n\nexport interface CurrencyInputProps extends ReactCurrencyInputProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** Validation state */\n  validationState?: ValidationState;\n  /** Helper text */\n  helperText?: string;\n  /** Error message */\n  errorMessage?: string;\n  /** Warning message */\n  warningMessage?: string;\n  /** Success message */\n  successMessage?: string;\n  /** Label for the input */\n  label?: string;\n  /** Whether the field is required */\n  required?: boolean;\n}\n\nexport const CustomCurrencyInput = forwardRef<HTMLInputElement, CurrencyInputProps>((\n  {\n    context = 'neutral',\n    validationState = 'none',\n    helperText,\n    errorMessage,\n    warningMessage,\n    successMessage,\n    label,\n    required = false,\n    className = '',\n    ...props\n  },\n  ref\n) => {\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-blue-400 focus:border-blue-600 focus:ring-blue-500 bg-blue-50';\n      case 'client': return 'border-green-400 focus:border-green-600 focus:ring-green-500 bg-green-50';\n      case 'admin': return 'border-gray-400 focus:border-gray-600 focus:ring-gray-500 bg-gray-50';\n      case 'expert': return 'border-purple-400 focus:border-purple-600 focus:ring-purple-500 bg-purple-50';\n      case 'toolCreator': return 'border-indigo-400 focus:border-indigo-600 focus:ring-indigo-500 bg-indigo-50';\n      case 'founder': return 'border-orange-400 focus:border-orange-600 focus:ring-orange-500 bg-orange-50';\n      default: return 'border-slate-300 focus:border-slate-500 focus:ring-slate-500 bg-white';\n    }\n  };\n\n  const getValidationClasses = () => {\n    switch (validationState) {\n      case 'error': return 'border-red-500 focus:border-red-500 focus:ring-red-500';\n      case 'warning': return 'border-yellow-500 focus:border-yellow-500 focus:ring-yellow-500';\n      case 'success': return 'border-green-500 focus:border-green-500 focus:ring-green-500';\n      default: return '';\n    }\n  };\n\n  const inputClasses = [\n    'w-full px-3 py-2 text-base rounded-lg shadow-sm placeholder:text-slate-400',\n    'focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-0',\n    'disabled:cursor-not-allowed disabled:opacity-50 transition-colors duration-200',\n    validationState !== 'none' ? getValidationClasses() : getContextClasses(),\n    className,\n  ].filter(Boolean).join(' ');\n\n  const currentMessage = (() => {\n    if (errorMessage && validationState === 'error') return { type: 'error', message: errorMessage };\n    if (warningMessage && validationState === 'warning') return { type: 'warning', message: warningMessage };\n    if (successMessage && validationState === 'success') return { type: 'success', message: successMessage };\n    if (helperText) return { type: 'helper', message: helperText };\n    return null;\n  })();\n\n  const inputId = props.id || `currency-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <div>\n      {label && (\n        <label htmlFor={inputId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <CurrencyInput\n        id={inputId}\n        className={inputClasses}\n        ref={ref}\n        {...props}\n      />\n      {currentMessage && (\n        <p\n          className={`mt-1 text-sm ${\n            currentMessage.type === 'error' ? 'text-red-600' :\n            currentMessage.type === 'warning' ? 'text-yellow-600' :\n            currentMessage.type === 'success' ? 'text-green-600' :\n            'text-slate-600'\n          }`}\n        >\n          {currentMessage.message}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCustomCurrencyInput.displayName = 'CurrencyInput';\n", "/**\n * DatePicker Component\n *\n * An enhanced date selection component with timezone support and workspace context awareness.\n */\n\nimport { format } from 'date-fns';\nimport { forwardRef, useEffect, useRef, useState } from 'react';\nimport { DayPicker } from 'react-day-picker';\nimport 'react-day-picker/dist/style.css';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none';\n\nexport interface DatePickerProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** The currently selected date */\n  value?: Date;\n  /** Callback when a date is selected */\n  onChange?: (date?: Date) => void;\n  /** The timezone to use for date calculations */\n  timezone?: string;\n  /** The format to display the date in */\n  format?: string;\n  /** The minimum selectable date */\n  minDate?: Date;\n  /** The maximum selectable date */\n  maxDate?: Date;\n  /** Validation state */\n  validationState?: ValidationState;\n  /** Helper text */\n  helperText?: string;\n  /** Error message */\n  errorMessage?: string;\n  /** Warning message */\n  warningMessage?: string;\n  /** Success message */\n  successMessage?: string;\n  /** Label for the date picker */\n  label?: string;\n  /** Whether the field is required */\n  required?: boolean;\n  /** Whether the date picker is disabled */\n  disabled?: boolean;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n}\n\nexport const DatePicker = forwardRef<HTMLDivElement, DatePickerProps>((\n  {\n    context = 'neutral',\n    value,\n    onChange,\n    timezone,\n    format: displayFormat = 'PPP',\n    minDate,\n    maxDate,\n    validationState = 'none',\n    helperText,\n    errorMessage,\n    warningMessage,\n    successMessage,\n    label,\n    required = false,\n    disabled = false,\n    placeholder = 'Select a date',\n    name,\n    id,\n  },\n  ref\n) => {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(value);\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const datePickerId = id || `datepicker-${Math.random().toString(36).substr(2, 9)}`;\n\n  useEffect(() => {\n    setSelectedDate(value);\n  }, [value]);\n\n  const handleDateSelect = (date?: Date) => {\n    setSelectedDate(date);\n    if (onChange) {\n      onChange(date);\n    }\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-blue-400 focus:border-blue-600 focus:ring-blue-500 bg-blue-50';\n      case 'client': return 'border-green-400 focus:border-green-600 focus:ring-green-500 bg-green-50';\n      case 'admin': return 'border-gray-400 focus:border-gray-600 focus:ring-gray-500 bg-gray-50';\n      case 'expert': return 'border-purple-400 focus:border-purple-600 focus:ring-purple-500 bg-purple-50';\n      case 'toolCreator': return 'border-indigo-400 focus:border-indigo-600 focus:ring-indigo-500 bg-indigo-50';\n      case 'founder': return 'border-orange-400 focus:border-orange-600 focus:ring-orange-500 bg-orange-50';\n      default: return 'border-slate-300 focus:border-slate-500 focus:ring-slate-500 bg-white';\n    }\n  };\n\n  const getValidationClasses = () => {\n    switch (validationState) {\n      case 'error': return 'border-red-500 focus:border-red-500 focus:ring-red-500';\n      case 'warning': return 'border-yellow-500 focus:border-yellow-500 focus:ring-yellow-500';\n      case 'success': return 'border-green-500 focus:border-green-500 focus:ring-green-500';\n      default: return '';\n    }\n  };\n\n  const inputClasses = [\n    'w-full px-3 py-2 text-base rounded-lg shadow-sm placeholder:text-slate-400',\n    'focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-0',\n    'disabled:cursor-not-allowed disabled:opacity-50 transition-colors duration-200',\n    validationState !== 'none' ? getValidationClasses() : getContextClasses(),\n  ].filter(Boolean).join(' ');\n\n  const currentMessage = (() => {\n    if (errorMessage && validationState === 'error') return { type: 'error', message: errorMessage };\n    if (warningMessage && validationState === 'warning') return { type: 'warning', message: warningMessage };\n    if (successMessage && validationState === 'success') return { type: 'success', message: successMessage };\n    if (helperText) return { type: 'helper', message: helperText };\n    return null;\n  })();\n\n  const formatDate = (date: Date) => {\n    // Note: date-fns format doesn't handle timezone directly in the format string.\n    // For full timezone support, a library like date-fns-tz would be needed.\n    // This implementation will format the date according to the user's local timezone.\n    return format(date, displayFormat);\n  };\n\n  return (\n    <div className=\"w-full\" ref={ref}>\n      {label && (\n        <label htmlFor={datePickerId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <div className=\"relative\" ref={dropdownRef}>\n        <input\n          type=\"text\"\n          id={datePickerId}\n          name={name}\n          className={inputClasses}\n          value={selectedDate ? formatDate(selectedDate) : ''}\n          onClick={() => setIsOpen(!isOpen)}\n          onFocus={() => setIsOpen(true)}\n          readOnly\n          placeholder={placeholder}\n          disabled={disabled}\n          aria-invalid={validationState === 'error'}\n          aria-describedby={currentMessage ? `${datePickerId}-message` : undefined}\n        />\n        {isOpen && (\n          <div className=\"absolute z-10 mt-1 bg-white border border-slate-300 rounded-md shadow-lg\">\n            <DayPicker\n              mode=\"single\"\n              selected={selectedDate}\n              onSelect={handleDateSelect}\n              fromDate={minDate}\n              toDate={maxDate}\n              disabled={disabled}\n              initialFocus\n            />\n          </div>\n        )}\n      </div>\n      {currentMessage && (\n        <p\n          id={`${datePickerId}-message`}\n          className={`mt-1 text-sm ${\n            currentMessage.type === 'error' ? 'text-red-600' :\n            currentMessage.type === 'warning' ? 'text-yellow-600' :\n            currentMessage.type === 'success' ? 'text-green-600' :\n            'text-slate-600'\n          }`}\n        >\n          {currentMessage.message}\n        </p>\n      )}\n    </div>\n  );\n});\n\nDatePicker.displayName = 'DatePicker';\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport type DocumentVariant = 'document' | 'spreadsheet' | 'presentation' | 'pdf' | 'image' | 'video' | 'other';\n\nexport interface DocumentTypeProps {\n  type: DocumentVariant;\n  className?: string;\n}\n\n/**\n * DocumentType component that displays an icon for a document type.\n */\nexport const DocumentType: React.FC<DocumentTypeProps> = ({\n  type,\n  className = '',\n}) => {\n  const getIcon = () => {\n    switch (type) {\n      case 'document':\n        return '📄';\n      case 'spreadsheet':\n        return '📊';\n      case 'presentation':\n        return '📈';\n      case 'pdf':\n        return ' L';\n      case 'image':\n        return '🖼️';\n      case 'video':\n        return '📹';\n      default:\n        return '📁';\n    }\n  };\n\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-200 text-gray-700',\n        className\n      )}\n    >\n      <span className=\"text-lg\">{getIcon()}</span>\n    </div>\n  );\n};\n\nexport default DocumentType;\n", "import * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\nimport * as React from \"react\"\n\nimport { cn } from \"@wheel/shared\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-background-primary p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-background-primary p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuGroup, DropdownMenuItem, DropdownMenuLabel, DropdownMenuPortal, DropdownMenuRadioGroup, DropdownMenuRadioItem, DropdownMenuSeparator,\n  DropdownMenuShortcut, DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger, DropdownMenuTrigger\n}\n\n", "/**\n * EmptyState Component\n *\n * A component for displaying an empty state with a message and optional actions.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode } from 'react';\n\nexport interface EmptyStateProps {\n  title: string;\n  description?: string;\n  icon?: ReactNode;\n  actions?: ReactNode;\n  className?: string;\n}\n\nexport const EmptyState = forwardRef<HTMLDivElement, EmptyStateProps>((\n  {\n    title,\n    description,\n    icon,\n    actions,\n    className,\n    ...props\n  },\n  ref\n) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col items-center justify-center text-center p-8 border-2 border-dashed rounded-lg',\n        className\n      )}\n      {...props}\n    >\n      {icon && <div className=\"mb-4 text-gray-400\">{icon}</div>}\n      <h3 className=\"text-lg font-semibold text-gray-900\">{title}</h3>\n      {description && <p className=\"mt-2 text-sm text-gray-500\">{description}</p>}\n      {actions && <div className=\"mt-6\">{actions}</div>}\n    </div>\n  );\n});\n\nEmptyState.displayName = 'EmptyState';\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport interface ExpertiseTagProps {\n  tag: string;\n  className?: string;\n}\n\n/**\n * ExpertiseTag component that displays an expertise tag.\n */\nexport const ExpertiseTag: React.FC<ExpertiseTagProps> = ({\n  tag,\n  className = '',\n}) => {\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center rounded-full px-3 py-1 text-sm font-semibold bg-gray-100 text-gray-800',\n        className\n      )}\n    >\n      {tag}\n    </div>\n  );\n};\n\nexport default ExpertiseTag;\n", "/**\n * Icon Component\n *\n * A component for displaying icons with workspace context awareness.\n */\n\nimport * as LucideIcons from 'lucide-react';\nimport { ElementType, forwardRef } from 'react';\nimport { cn } from '@wheel/shared';\n\ntype IconType = ElementType;\nexport type LucideIconName = keyof typeof LucideIcons;\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type IconSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\nexport type IconColor = 'primary' | 'secondary' | 'muted' | 'error' | 'warning' | 'success';\n\nexport interface IconProps {\n  name?: LucideIconName;\n  as?: ElementType;\n  size?: IconSize;\n  color?: IconColor;\n  context?: WorkspaceContext;\n  rotation?: 0 | 90 | 180 | 270;\n  title?: string;\n  className?: string;\n}\n\nexport const Icon = forwardRef<HTMLSpanElement, IconProps>((\n  {\n    name,\n    as,\n    size = 'md',\n    color = 'primary',\n    context = 'neutral',\n    rotation = 0,\n    title,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const LucideIcon = as || (name ? (LucideIcons[name] as IconType) : null);\n\n  if (!LucideIcon) {\n    return null;\n  }\n\n  const sizeClasses = {\n    xs: 'w-3 h-3',\n    sm: 'w-4 h-4',\n    md: 'w-5 h-5',\n    lg: 'w-6 h-6',\n    xl: 'w-8 h-8',\n  };\n\n  const getContextClasses = () => {\n    if (color !== 'primary') return '';\n    switch (context) {\n      case 'consultant': return 'text-blue-600';\n      case 'client': return 'text-green-600';\n      case 'admin': return 'text-gray-600';\n      case 'expert': return 'text-purple-600';\n      case 'toolCreator': return 'text-indigo-600';\n      case 'founder': return 'text-orange-600';\n      default: return '';\n    }\n  };\n\n  const colorClasses = {\n    primary: 'text-slate-900',\n    secondary: 'text-slate-700',\n    muted: 'text-slate-500',\n    error: 'text-red-600',\n    warning: 'text-yellow-600',\n    success: 'text-green-600',\n  };\n\n  const rotationClasses = {\n    0: 'rotate-0',\n    90: 'rotate-90',\n    180: 'rotate-180',\n    270: 'rotate-270',\n  };\n\n  const iconClasses = cn(\n    sizeClasses[size],\n    getContextClasses() || colorClasses[color],\n    rotationClasses[rotation],\n    className\n  );\n\n  const iconProps = {\n    className: iconClasses,\n    ...props,\n  };\n\n  return <LucideIcon {...iconProps} ref={ref} />;\n});\n\nIcon.displayName = 'Icon';\n", "/**\n * Image Component\n *\n * An enhanced image component with support for lazy loading, placeholders, and error fallbacks.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode, useState } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\n\nexport interface ImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  alt: string;\n  context?: WorkspaceContext;\n  aspectRatio?: string;\n  fit?: 'cover' | 'contain' | 'fill';\n  lazy?: boolean;\n  placeholder?: string | ReactNode;\n  error?: string | ReactNode;\n  onLoad?: () => void;\n  onError?: () => void;\n}\n\nexport const Image = forwardRef<HTMLImageElement, ImageProps>((\n  {\n    src,\n    alt,\n    context = 'neutral',\n    aspectRatio,\n    fit = 'cover',\n    lazy = true,\n    placeholder,\n    error,\n    className,\n    onLoad,\n    onError,\n    ...props\n  },\n  ref\n) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const handleLoad = () => {\n    setIsLoading(false);\n    if (onLoad) onLoad();\n  };\n\n  const handleError = () => {\n    setIsLoading(false);\n    setHasError(true);\n    if (onError) onError();\n  };\n\n  const fitClasses = {\n    cover: 'object-cover',\n    contain: 'object-contain',\n    fill: 'object-fill',\n  };\n\n  const imageClasses = cn(\n    'w-full h-full',\n    fitClasses[fit],\n    { 'opacity-0': isLoading || hasError },\n    className\n  );\n\n  return (\n    <div\n      className={cn('relative bg-gray-200', aspectRatio)}\n      style={{ aspectRatio: aspectRatio ? undefined : '16 / 9' }}\n    >\n      {(isLoading || hasError) && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          {hasError ? error : placeholder}\n        </div>\n      )}\n      <img\n        ref={ref}\n        src={src}\n        alt={alt}\n        loading={lazy ? 'lazy' : 'eager'}\n        className={imageClasses}\n        onLoad={handleLoad}\n        onError={handleError}\n        {...props}\n      />\n    </div>\n  );\n});\n\nImage.displayName = 'Image';\n", "/**\n * Input Component\n *\n * A versatile input component for collecting user input with workspace context awareness.\n */\n\nimport React, { ChangeEvent, InputHTMLAttributes, forwardRef } from 'react';\nimport { useValidation } from './validationcontext';\n\nexport type InputSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** Validation state of the input */\n  validationState?: ValidationState;\n  /** Helper text below the input */\n  helperText?: string;\n  /** Error message to display */\n  errorMessage?: string;\n  /** Warning message to display */\n  warningMessage?: string;\n  /** Success message to display */\n  successMessage?: string;\n  /** Label for the input */\n  label?: string;\n  /** Whether the label is required */\n  required?: boolean;\n  /** Size of the input */\n  inputSize?: InputSize;\n  /** Icon to display at the start of the input */\n  leftIcon?: React.ReactNode;\n  /** Icon to display at the end of the input */\n  rightIcon?: React.ReactNode;\n  /** Whether the input takes up the full width of its container */\n  fullWidth?: boolean;\n  /** Whether the input is in a loading state */\n  loading?: boolean;\n  /** Custom loading text */\n  loadingText?: string;\n  /** Input masking pattern */\n  mask?: string;\n  /** Whether the input has an error (deprecated - use validationState) */\n  hasError?: boolean;\n  /** The name of the input field */\n  name: string;\n  /** Description for accessibility */\n  description?: string;\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>((\n  {\n    context = 'neutral',\n    validationState = 'none',\n    helperText,\n    errorMessage,\n    warningMessage,\n    successMessage,\n    label,\n    required = false,\n    inputSize = 'md',\n    leftIcon,\n    rightIcon,\n    fullWidth = false,\n    loading = false,\n    loadingText,\n    mask,\n    hasError, // deprecated\n    description,\n    className = '',\n    id,\n    name,\n    disabled,\n    ...props\n  },\n  ref\n) => {\n  const validation = useValidation();\n\n  // Handle legacy hasError prop\n  const finalValidationState = hasError ? 'error' : validationState;\n\n  // Get validation from context or props\n  const contextError = validation ? validation.errors[name] : '';\n  const finalErrorMessage = errorMessage || contextError;\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (validation) {\n      validation.validate(name, e.target.value);\n    }\n    if (props.onChange) {\n      props.onChange(e);\n    }\n  };\n\n  // Generate a unique ID for accessibility if none provided\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Workspace context classes - Enhanced visibility\n  const getContextClasses = () => {\n    const baseClasses = 'transition-colors duration-200';\n\n    switch (context) {\n      case 'consultant':\n        return `${baseClasses} border-blue-400 focus:border-blue-600 focus:ring-blue-500 bg-blue-50 focus:bg-blue-100`;\n      case 'client':\n        return `${baseClasses} border-green-400 focus:border-green-600 focus:ring-green-500 bg-green-50 focus:bg-green-100`;\n      case 'admin':\n        return `${baseClasses} border-gray-400 focus:border-gray-600 focus:ring-gray-500 bg-gray-50 focus:bg-gray-100`;\n      case 'expert':\n        return `${baseClasses} border-purple-400 focus:border-purple-600 focus:ring-purple-500 bg-purple-50 focus:bg-purple-100`;\n      case 'toolCreator':\n        return `${baseClasses} border-indigo-400 focus:border-indigo-600 focus:ring-indigo-500 bg-indigo-50 focus:bg-indigo-100`;\n      case 'founder':\n        return `${baseClasses} border-orange-400 focus:border-orange-600 focus:ring-orange-500 bg-orange-50 focus:bg-orange-100`;\n      default:\n        return `${baseClasses} border-slate-300 focus:border-slate-500 focus:ring-slate-500 bg-white`;\n    }\n  };\n\n  // Validation state classes\n  const getValidationClasses = () => {\n    switch (finalValidationState) {\n      case 'error':\n        return 'border-red-500 focus:border-red-500 focus:ring-red-500 text-red-900 placeholder-red-300';\n      case 'warning':\n        return 'border-yellow-500 focus:border-yellow-500 focus:ring-yellow-500';\n      case 'success':\n        return 'border-green-500 focus:border-green-500 focus:ring-green-500';\n      default:\n        return '';\n    }\n  };\n\n  // Size classes\n  const getSizeClasses = () => {\n    switch (inputSize) {\n      case 'xs': return 'px-2 py-1 text-xs';\n      case 'sm': return 'px-2.5 py-1.5 text-sm';\n      case 'md': return 'px-3 py-2 text-base';\n      case 'lg': return 'px-4 py-2.5 text-lg';\n      case 'xl': return 'px-5 py-3 text-xl';\n      default: return 'px-3 py-2 text-base';\n    }\n  };\n\n  // Build input classes\n  const inputClasses = [\n    'flex w-full rounded-lg bg-white shadow-sm placeholder:text-slate-400',\n    'focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-0',\n    'disabled:cursor-not-allowed disabled:opacity-50',\n    'transition-colors duration-200',\n    leftIcon ? (inputSize === 'xs' ? 'pl-7' : inputSize === 'sm' ? 'pl-8' : 'pl-10') : '',\n    rightIcon || loading ? (inputSize === 'xs' ? 'pr-7' : inputSize === 'sm' ? 'pr-8' : 'pr-10') : '',\n    getSizeClasses(),\n    finalValidationState !== 'none' ? getValidationClasses() : getContextClasses(),\n    className\n  ].filter(Boolean).join(' ');\n\n  // Get current message to display\n  const getCurrentMessage = () => {\n    if (finalErrorMessage) return { type: 'error', message: finalErrorMessage };\n    if (warningMessage && finalValidationState === 'warning') return { type: 'warning', message: warningMessage };\n    if (successMessage && finalValidationState === 'success') return { type: 'success', message: successMessage };\n    if (helperText) return { type: 'helper', message: helperText };\n    return null;\n  };\n\n  const currentMessage = getCurrentMessage();\n\n  // Loading spinner\n  const LoadingSpinner = () => (\n    <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-current border-t-transparent\" />\n  );\n\n  return (\n    <div className={fullWidth ? 'w-full' : ''}>\n      {label && (\n        <label htmlFor={inputId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {leftIcon && (\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n            <div className={inputSize === 'xs' ? 'w-3 h-3' : inputSize === 'sm' ? 'w-4 h-4' : 'w-5 h-5'}>\n              {leftIcon}\n            </div>\n          </div>\n        )}\n\n        <input\n          ref={ref}\n          id={inputId}\n          name={name}\n          className={inputClasses}\n          disabled={disabled || loading}\n          aria-invalid={finalValidationState === 'error' ? 'true' : 'false'}\n          aria-describedby={\n            [\n              currentMessage ? `${inputId}-message` : '',\n              description ? `${inputId}-description` : ''\n            ].filter(Boolean).join(' ') || undefined\n          }\n          aria-required={required}\n          onChange={handleChange}\n          {...props}\n        />\n\n        {(rightIcon || loading) && (\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n            <div className={inputSize === 'xs' ? 'w-3 h-3' : inputSize === 'sm' ? 'w-4 h-4' : 'w-5 h-5'}>\n              {loading ? <LoadingSpinner /> : rightIcon}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {description && (\n        <p id={`${inputId}-description`} className=\"mt-1 text-sm text-slate-500\">\n          {description}\n        </p>\n      )}\n\n      {currentMessage && (\n        <p\n          id={`${inputId}-message`}\n          className={`mt-1 text-sm ${\n            currentMessage.type === 'error' ? 'text-red-600' :\n            currentMessage.type === 'warning' ? 'text-yellow-600' :\n            currentMessage.type === 'success' ? 'text-green-600' :\n            'text-slate-600'\n          }`}\n        >\n          {currentMessage.message}\n        </p>\n      )}\n\n      {loading && loadingText && (\n        <p className=\"mt-1 text-sm text-slate-500\">\n          {loadingText}\n        </p>\n      )}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n", "import React, { createContext, useContext, useState } from 'react';\n\nexport interface ValidationRule {\n  validate: (value: string) => boolean;\n  message: string;\n}\n\nexport interface ValidationContextProps {\n  rules: ValidationRule[];\n  errors: Record<string, string>;\n  validate: (name: string, value: string) => void;\n}\n\nconst ValidationContext = createContext<ValidationContextProps | undefined>(undefined);\n\nexport const ValidationProvider: React.FC<{ rules: ValidationRule[], children: React.ReactNode }> = ({ rules, children }) => {\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const validate = (name: string, value: string) => {\n    for (const rule of rules) {\n      if (!rule.validate(value)) {\n        setErrors((prev) => ({ ...prev, [name]: rule.message }));\n        return;\n      }\n    }\n    setErrors((prev) => ({ ...prev, [name]: '' }));\n  };\n\n  return (\n    <ValidationContext.Provider value={{ rules, errors, validate }}>\n      {children}\n    </ValidationContext.Provider>\n  );\n};\n\nexport const useValidation = () => {\n  const context = useContext(ValidationContext);\n  // Return null if no ValidationProvider is available\n  // This allows components to work with or without validation context\n  return context || null;\n};\n", "import * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@wheel/shared';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n", "/**\n * LoadingOverlay Component\n *\n * A component for displaying a loading overlay on top of other content.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode } from 'react';\nimport { Spinner } from './spinner';\n\nexport interface LoadingOverlayProps {\n  isLoading: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const LoadingOverlay = forwardRef<HTMLDivElement, LoadingOverlayProps>((\n  {\n    isLoading,\n    children,\n    className,\n    ...props\n  },\n  ref\n) => {\n  return (\n    <div ref={ref} className={cn('relative', className)} {...props}>\n      {isLoading && (\n        <div className=\"absolute inset-0 z-10 flex items-center justify-center bg-white bg-opacity-75\">\n          <Spinner />\n        </div>\n      )}\n      {children}\n    </div>\n  );\n});\n\nLoadingOverlay.displayName = 'LoadingOverlay';\n", "/**\n * Spinner Component\n *\n * A component for displaying a loading spinner with workspace context awareness.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type SpinnerSize = 'sm' | 'md' | 'lg';\n\nexport interface SpinnerProps {\n  size?: SpinnerSize;\n  context?: WorkspaceContext;\n  className?: string;\n}\n\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>((\n  {\n    size = 'md',\n    context = 'neutral',\n    className,\n    ...props\n  },\n  ref\n) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4 border-2',\n    md: 'w-8 h-8 border-4',\n    lg: 'w-12 h-12 border-4',\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-blue-600';\n      case 'client': return 'border-green-600';\n      case 'admin': return 'border-gray-600';\n      case 'expert': return 'border-purple-600';\n      case 'toolCreator': return 'border-indigo-600';\n      case 'founder': return 'border-orange-600';\n      default: return 'border-slate-600';\n    }\n  };\n\n  const spinnerClasses = cn(\n    'animate-spin rounded-full border-t-transparent',\n    sizeClasses[size],\n    getContextClasses(),\n    className\n  );\n\n  return (\n    <div ref={ref} className={spinnerClasses} role=\"status\" {...props}>\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n});\n\nSpinner.displayName = 'Spinner';\n", "import * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { X } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@wheel/shared\";\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black bg-opacity-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      <DialogDescription className=\"sr-only\">Modal dialog</DialogDescription>\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-slate-700 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-slate-100 data-[state=open]:text-slate-500\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = \"DialogHeader\";\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = \"DialogFooter\";\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-slate-500\", className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\n// Backward compatibility with existing Modal component\nexport interface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  title?: string;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, children, title }) => {\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent>\n        {title && (\n          <DialogHeader>\n            <DialogTitle>{title}</DialogTitle>\n          </DialogHeader>\n        )}\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport {\n  Dialog, DialogClose,\n  DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogOverlay, DialogPortal, DialogTitle, DialogTrigger, Modal\n};\n", "import React, { useState } from 'react';\nimport { Progress } from './progress';\n\ninterface OnboardingWizardProps {\n  onClose?: () => void;\n  onComplete?: (data: { role: string; stage?: string }) => void;\n}\n\ntype UserRole = 'founder' | 'company_member' | 'service_provider';\ntype CompanyStage = 'idea_stage' | 'solid_idea' | 'existing_company';\n\n/**\n * A simplified onboarding wizard for the UI\n * This is a standalone component that can be shown in a modal or dialog\n */\nexport const OnboardingWizard: React.FC<OnboardingWizardProps> = ({ onClose, onComplete }) => {\n  const [step, setStep] = useState<number>(1);\n  const [selectedRole, setSelectedRole] = useState<UserRole | null>(null);\n  const [companyStage, setCompanyStage] = useState<CompanyStage | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  // Role options\n  const roleOptions = [\n    {\n      id: 'founder' as UserRole,\n      title: 'Founder',\n      description: 'You have a business idea or already founded a company',\n      icon: 'lightbulb'\n    },\n    {\n      id: 'company_member' as UserRole,\n      title: 'Company Member',\n      description: 'You work at a company and want to join your team',\n      icon: 'users'\n    },\n    {\n      id: 'service_provider' as UserRole,\n      title: 'Service Provider',\n      description: 'You provide professional services to companies',\n      icon: 'briefcase'\n    }\n  ];\n\n  // Company stage options\n  const stageOptions = [\n    {\n      id: 'idea_stage' as CompanyStage,\n      title: 'Idea Stage',\n      description: 'You have an idea but haven\\'t formally established a company yet',\n      icon: 'lightbulb',\n      featuredModule: 'Idea Playground'\n    },\n    {\n      id: 'solid_idea' as CompanyStage,\n      title: 'Solid Idea',\n      description: 'You have a well-defined concept and are ready to establish your company',\n      icon: 'clipboard-check',\n      featuredModule: 'Company Formation'\n    },\n    {\n      id: 'existing_company' as CompanyStage,\n      title: 'Existing Company',\n      description: 'You already have an established company and want to enter its information',\n      icon: 'building',\n      featuredModule: 'Team Management'\n    }\n  ];\n\n  const saveAndContinue = async () => {\n    setLoading(true);\n\n    try {\n      // Simulate async operation\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      if (step === 1 && selectedRole) {\n        // If founder, show company stage step\n        if (selectedRole === 'founder') {\n          setStep(2);\n        } else {\n          // For other roles, complete onboarding\n          if (onComplete) {\n            onComplete({ role: selectedRole });\n          }\n        }\n      } else if (step === 2 && companyStage) {\n        // Complete onboarding with both role and stage\n        if (onComplete) {\n          onComplete({ role: selectedRole!, stage: companyStage });\n        }\n      }\n    } catch (error) {\n      console.error('Error saving onboarding data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSkip = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  // Calculate progress\n  const totalSteps = selectedRole === 'founder' ? 2 : 1;\n  const progress = (step / totalSteps) * 100;\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg overflow-hidden max-w-4xl mx-auto\">\n      {/* Header */}\n      <div className=\"bg-blue-50 p-4 border-b border-blue-100\">\n        <h2 className=\"text-xl font-semibold text-blue-800\">Quick Setup</h2>\n        <p className=\"text-blue-600\">Tell us about yourself to get the most out of Wheel99</p>\n\n        <div className=\"mt-4\">\n          <Progress value={progress} className=\"h-2\" />\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {step === 1 && (\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">What best describes your role?</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              {roleOptions.map((role) => (\n                <div\n                  key={role.id}\n                  onClick={() => setSelectedRole(role.id)}\n                  className={`border rounded-lg p-4 cursor-pointer transition-all ${\n                    selectedRole === role.id\n                      ? 'border-blue-500 bg-blue-50 shadow-sm'\n                      : 'border-gray-200 hover:border-blue-300 hover:shadow-sm'\n                  }`}\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <div className={`rounded-full p-2 mr-2 ${\n                      selectedRole === role.id ? 'bg-blue-500 text-white' : 'bg-gray-100'\n                    }`}>\n                      <i className={`fas fa-${role.icon} text-sm`}></i>\n                    </div>\n                    <h4 className=\"font-medium\">{role.title}</h4>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">{role.description}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {step === 2 && (\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">What stage is your company in?</h3>\n            <div className=\"space-y-4\">\n              {stageOptions.map((stage) => (\n                <div\n                  key={stage.id}\n                  onClick={() => setCompanyStage(stage.id)}\n                  className={`border rounded-lg p-4 cursor-pointer transition-all ${\n                    companyStage === stage.id\n                      ? 'border-blue-500 bg-blue-50 shadow-sm'\n                      : 'border-gray-200 hover:border-blue-300 hover:shadow-sm'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    <div className={`rounded-full p-2 mr-3 mt-1 ${\n                      companyStage === stage.id ? 'bg-blue-500 text-white' : 'bg-gray-100'\n                    }`}>\n                      <i className={`fas fa-${stage.icon} text-sm`}></i>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium\">{stage.title}</h4>\n                      <p className=\"text-sm text-gray-600 mt-1\">{stage.description}</p>\n\n                      {companyStage === stage.id && (\n                        <div className=\"mt-2 bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full inline-flex items-center\">\n                          <i className=\"fas fa-star mr-1\"></i>\n                          Recommended: {stage.featuredModule}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <div className=\"border-t border-gray-200 p-4 bg-gray-50 flex justify-between\">\n        <button\n          onClick={handleSkip}\n          className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n        >\n          Skip for now\n        </button>\n\n        <button\n          onClick={saveAndContinue}\n          disabled={step === 1 ? !selectedRole : !companyStage || loading}\n          className={`px-6 py-2 rounded-md ${\n            (step === 1 ? selectedRole : companyStage) && !loading\n              ? 'bg-blue-600 text-white hover:bg-blue-700'\n              : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n          }`}\n        >\n          {loading ? (\n            <div className=\"flex items-center\">\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Processing...\n            </div>\n          ) : (\n            'Continue'\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OnboardingWizard;\n", "import * as ProgressPrimitive from \"@radix-ui/react-progress\"\nimport * as React from \"react\"\n\nimport { cn } from \"@wheel/shared\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-slate-200\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-slate-700 transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n", "/**\n * PhoneInput Component\n *\n * A specialized input component for international phone numbers with workspace context awareness.\n */\n\nimport { forwardRef, useState } from 'react';\nimport PhoneInputWithCountry, {\n  Country,\n  isPossiblePhoneNumber\n} from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none';\n\nexport interface PhoneInputProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** The current phone number value */\n  value?: string;\n  /** Callback when the phone number changes */\n  onChange?: (value?: string) => void;\n  /** Default country for the input */\n  defaultCountry?: Country;\n  /** Validation state */\n  validationState?: ValidationState;\n  /** Helper text */\n  helperText?: string;\n  /** Error message */\n  errorMessage?: string;\n  /** Warning message */\n  warningMessage?: string;\n  /** Success message */\n  successMessage?: string;\n  /** Label for the input */\n  label?: string;\n  /** Whether the field is required */\n  required?: boolean;\n  /** Whether the input is disabled */\n  disabled?: boolean;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n}\n\nexport const PhoneInput = forwardRef<any, PhoneInputProps>((\n  {\n    context = 'neutral',\n    value,\n    onChange,\n    defaultCountry = 'US',\n    validationState: initialValidationState = 'none',\n    helperText,\n    errorMessage,\n    warningMessage,\n    successMessage,\n    label,\n    required = false,\n    disabled = false,\n    placeholder = 'Enter phone number',\n    name,\n    id,\n  },\n  ref\n) => {\n  const [validationState, setValidationState] = useState(initialValidationState);\n\n  const handleOnChange = (newValue?: string) => {\n    if (newValue && !isPossiblePhoneNumber(newValue)) {\n      setValidationState('error');\n    } else {\n      setValidationState('success');\n    }\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const getContextClasses = () => {\n    // This component uses a specific stylesheet, so we'll rely on that for now.\n    // Custom styling can be added here if needed.\n    return '';\n  };\n\n  const getValidationClasses = () => {\n    switch (validationState) {\n      case 'error': return 'PhoneInput--error';\n      case 'warning': return 'PhoneInput--warning';\n      case 'success': return 'PhoneInput--success';\n      default: return '';\n    }\n  };\n\n  const phoneInputId = id || `phoneinput-${Math.random().toString(36).substr(2, 9)}`;\n\n  const currentMessage = (() => {\n    if (errorMessage && validationState === 'error') return { type: 'error', message: errorMessage };\n    if (warningMessage && validationState === 'warning') return { type: 'warning', message: warningMessage };\n    if (successMessage && validationState === 'success') return { type: 'success', message: successMessage };\n    if (helperText) return { type: 'helper', message: helperText };\n    return null;\n  })();\n\n  return (\n    <div>\n      {label && (\n        <label htmlFor={phoneInputId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <PhoneInputWithCountry\n        id={phoneInputId}\n        name={name}\n        className={getValidationClasses()}\n        defaultCountry={defaultCountry}\n        placeholder={placeholder}\n        value={value}\n        onChange={handleOnChange}\n        disabled={disabled}\n        international\n        countryCallingCodeEditable={false}\n        ref={ref}\n      />\n      {currentMessage && (\n        <p\n          className={`mt-1 text-sm ${\n            currentMessage.type === 'error' ? 'text-red-600' :\n            currentMessage.type === 'warning' ? 'text-yellow-600' :\n            currentMessage.type === 'success' ? 'text-green-600' :\n            'text-slate-600'\n          }`}\n        >\n          {currentMessage.message}\n        </p>\n      )}\n    </div>\n  );\n});\n\nPhoneInput.displayName = 'PhoneInput';\n", "/**\n * ProgressIndicator Component\n *\n * A component for displaying a progress indicator.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ProgressIndicatorSize = 'sm' | 'md' | 'lg';\n\nexport interface ProgressIndicatorProps {\n  value?: number;\n  size?: ProgressIndicatorSize;\n  context?: WorkspaceContext;\n  className?: string;\n}\n\nexport const ProgressIndicator = forwardRef<HTMLDivElement, ProgressIndicatorProps>((\n  {\n    value = 0,\n    size = 'md',\n    context = 'neutral',\n    className,\n    ...props\n  },\n  ref\n) => {\n  const sizeClasses = {\n    sm: 'h-1',\n    md: 'h-2',\n    lg: 'h-3',\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'bg-blue-600';\n      case 'client': return 'bg-green-600';\n      case 'admin': return 'bg-gray-600';\n      case 'expert': return 'bg-purple-600';\n      case 'toolCreator': return 'bg-indigo-600';\n      case 'founder': return 'bg-orange-600';\n      default: return 'bg-slate-600';\n    }\n  };\n\n  const containerClasses = cn(\n    'w-full bg-gray-200 rounded-full',\n    sizeClasses[size],\n    className\n  );\n\n  const progressClasses = cn(\n    'h-full rounded-full',\n    getContextClasses()\n  );\n\n  return (\n    <div ref={ref} className={containerClasses} {...props}>\n      <div\n        className={progressClasses}\n        style={{ width: `${value}%` }}\n      />\n    </div>\n  );\n});\n\nProgressIndicator.displayName = 'ProgressIndicator';\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport type ProjectPhaseVariant =\n  | 'discovery'\n  | 'design'\n  | 'development'\n  | 'testing'\n  | 'deployment'\n  | 'maintenance';\n\nexport interface ProjectPhaseProps {\n  phase: ProjectPhaseVariant;\n  className?: string;\n}\n\n/**\n * ProjectPhase component that displays the current phase of a project.\n */\nexport const ProjectPhase: React.FC<ProjectPhaseProps> = ({\n  phase,\n  className = '',\n}) => {\n  const phaseStyles: Record<ProjectPhaseVariant, string> = {\n    discovery: 'bg-blue-100 text-blue-800',\n    design: 'bg-purple-100 text-purple-800',\n    development: 'bg-green-100 text-green-800',\n    testing: 'bg-yellow-100 text-yellow-800',\n    deployment: 'bg-indigo-100 text-indigo-800',\n    maintenance: 'bg-gray-100 text-gray-800',\n  };\n\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center rounded-full px-3 py-1 text-sm font-semibold',\n        phaseStyles[phase],\n        className\n      )}\n    >\n      {phase.charAt(0).toUpperCase() + phase.slice(1)}\n    </div>\n  );\n};\n\nexport default ProjectPhase;\n", "/**\n * RichTextEditor Component\n *\n * A foundational rich text editor with basic formatting options.\n */\n\nimport { forwardRef, useMemo } from 'react';\nimport { createEditor, Descendant } from 'slate';\nimport { withHistory } from 'slate-history';\nimport { Editable, Slate, withReact } from 'slate-react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\n\nexport interface RichTextEditorProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** The initial value of the editor */\n  initialValue?: Descendant[];\n  /** Callback when the value changes */\n  onChange?: (value: Descendant[]) => void;\n  /** Label for the editor */\n  label?: string;\n  /** Whether the editor is disabled */\n  disabled?: boolean;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n}\n\nconst initialValue: Descendant[] = [\n  {\n    type: 'paragraph',\n    children: [{ text: 'This is editable rich text, much better than a <textarea>!' }],\n  },\n];\n\nexport const RichTextEditor = forwardRef<HTMLDivElement, RichTextEditorProps>((\n  {\n    context = 'neutral',\n    initialValue: value = initialValue,\n    onChange,\n    label,\n    disabled = false,\n    name,\n    id,\n  },\n  ref\n) => {\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-blue-400 focus-within:ring-blue-500';\n      case 'client': return 'border-green-400 focus-within:ring-green-500';\n      case 'admin': return 'border-gray-400 focus-within:ring-gray-500';\n      case 'expert': return 'border-purple-400 focus-within:ring-purple-500';\n      case 'toolCreator': return 'border-indigo-400 focus-within:ring-indigo-500';\n      case 'founder': return 'border-orange-400 focus-within:ring-orange-500';\n      default: return 'border-slate-300 focus-within:ring-slate-500';\n    }\n  };\n\n  const containerClasses = [\n    'p-2 border rounded-lg shadow-sm',\n    'disabled:cursor-not-allowed disabled:opacity-50',\n    getContextClasses(),\n  ].filter(Boolean).join(' ');\n\n  const editorId = id || `richtexteditor-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <div ref={ref}>\n      {label && (\n        <label htmlFor={editorId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n        </label>\n      )}\n      <div className={containerClasses}>\n        <Slate editor={editor} initialValue={value} onChange={onChange}>\n          <Editable\n            id={editorId}\n            readOnly={disabled}\n            className=\"min-h-[150px] p-2 focus:outline-none\"\n            name={name}\n          />\n        </Slate>\n      </div>\n    </div>\n  );\n});\n\nRichTextEditor.displayName = 'RichTextEditor';\n", "/**\n * Separator Component\n *\n * A component for visually separating content.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n\nexport interface SeparatorProps {\n  orientation?: 'horizontal' | 'vertical';\n  context?: WorkspaceContext;\n  spacing?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  variant?: 'solid' | 'dashed' | 'dotted';\n  text?: string;\n  icon?: ReactNode;\n  decorative?: boolean;\n  className?: string;\n}\n\nexport const Separator = forwardRef<HTMLDivElement, SeparatorProps>((\n  {\n    orientation = 'horizontal',\n    context = 'neutral',\n    spacing = 'md',\n    variant = 'solid',\n    text,\n    icon,\n    decorative = true,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const spacingClasses = {\n    none: 'my-0',\n    sm: 'my-2',\n    md: 'my-4',\n    lg: 'my-6',\n    xl: 'my-8',\n  };\n\n  const verticalSpacingClasses = {\n    none: 'mx-0',\n    sm: 'mx-2',\n    md: 'mx-4',\n    lg: 'mx-6',\n    xl: 'mx-8',\n  };\n\n  const variantClasses = {\n    solid: 'border-solid',\n    dashed: 'border-dashed',\n    dotted: 'border-dotted',\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant':\n        return 'text-blue-600 border-blue-300';\n      case 'client':\n        return 'text-green-600 border-green-300';\n      case 'admin':\n        return 'text-gray-600 border-gray-300';\n      case 'expert':\n        return 'text-purple-600 border-purple-300';\n      case 'tool-creator':\n        return 'text-orange-600 border-orange-300';\n      case 'founder':\n        return 'text-amber-600 border-amber-300';\n      default:\n        return 'text-gray-500 border-gray-200';\n    }\n  };\n\n  const getContextSpacing = () => {\n    const baseSpacing = orientation === 'horizontal' ? spacingClasses[spacing] : verticalSpacingClasses[spacing];\n    switch (context) {\n      case 'consultant':\n        return spacing === 'md' ? (orientation === 'horizontal' ? 'my-5' : 'mx-5') : baseSpacing;\n      case 'client':\n        return spacing === 'md' ? (orientation === 'horizontal' ? 'my-6' : 'mx-6') : baseSpacing;\n      case 'admin':\n        return spacing === 'md' ? (orientation === 'horizontal' ? 'my-8' : 'mx-8') : baseSpacing;\n      case 'expert':\n        return spacing === 'md' ? (orientation === 'horizontal' ? 'my-4' : 'mx-4') : baseSpacing;\n      case 'tool-creator':\n        return spacing === 'md' ? (orientation === 'horizontal' ? 'my-3' : 'mx-3') : baseSpacing;\n      case 'founder':\n        return spacing === 'md' ? (orientation === 'horizontal' ? 'my-6' : 'mx-6') : baseSpacing;\n      default:\n        return baseSpacing;\n    }\n  };\n\n  const separatorClasses = cn(\n    'transition-colors duration-200',\n    variantClasses[variant],\n    orientation === 'horizontal' ? 'w-full border-t' : 'h-full border-l',\n    getContextSpacing(),\n    getContextClasses(),\n    className\n  );\n\n  if (text || icon) {\n    return (\n      <div ref={ref} className={cn('flex items-center', orientation === 'horizontal' ? 'my-4' : 'mx-4')} {...props}>\n        <div className={cn('flex-grow border-t', variantClasses[variant], getContextClasses())} />\n        <span className={cn('mx-4 flex items-center text-sm', getContextClasses())}>\n          {icon && <span className=\"mr-2\">{icon}</span>}\n          {text}\n        </span>\n        <div className={cn('flex-grow border-t', variantClasses[variant], getContextClasses())} />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={separatorClasses}\n      role={decorative ? 'none' : 'separator'}\n      {...props}\n    />\n  );\n});\n\nSeparator.displayName = 'Separator';\n", "/**\n * SkeletonLoader Component\n *\n * A component for displaying a skeleton loading state.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef } from 'react';\n\nexport interface SkeletonLoaderProps {\n  className?: string;\n  count?: number;\n  circle?: boolean;\n}\n\nexport const SkeletonLoader = forwardRef<HTMLDivElement, SkeletonLoaderProps>((\n  {\n    className,\n    count = 1,\n    circle = false,\n    ...props\n  },\n  ref\n) => {\n  const skeletons = Array.from({ length: count }, (_, i) => (\n    <div\n      key={i}\n      className={cn(\n        'animate-pulse bg-gray-300',\n        circle ? 'rounded-full' : 'rounded-md',\n        className\n      )}\n      {...props}\n    />\n  ));\n\n  return (\n    <div ref={ref} className=\"space-y-2\">\n      {skeletons}\n    </div>\n  );\n});\n\nSkeletonLoader.displayName = 'SkeletonLoader';\n", "/**\n * Slider Component\n *\n * A range input component for numeric input with workspace context support.\n */\n\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport { forwardRef, useState } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\n\nexport interface SliderProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** The current value of the slider */\n  value?: number;\n  /** Callback when the value changes */\n  onChange?: (value: number) => void;\n  /** The minimum value of the slider */\n  min?: number;\n  /** The maximum value of the slider */\n  max?: number;\n  /** The step value of the slider */\n  step?: number;\n  /** Label for the slider */\n  label?: string;\n  /** Whether the slider is disabled */\n  disabled?: boolean;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n  /** Show tooltip with current value */\n  withTooltip?: boolean;\n}\n\nexport const Slider = forwardRef<HTMLInputElement, SliderProps>((\n  {\n    context = 'neutral',\n    value = 50,\n    onChange,\n    min = 0,\n    max = 100,\n    step = 1,\n    label,\n    disabled = false,\n    name,\n    id,\n    withTooltip = false,\n  },\n  ref\n) => {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.target.value);\n    setCurrentValue(newValue);\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'accent-blue-600';\n      case 'client': return 'accent-green-600';\n      case 'admin': return 'accent-gray-600';\n      case 'expert': return 'accent-purple-600';\n      case 'toolCreator': return 'accent-indigo-600';\n      case 'founder': return 'accent-orange-600';\n      default: return 'accent-slate-600';\n    }\n  };\n\n  const sliderClasses = [\n    'w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700',\n    'disabled:cursor-not-allowed disabled:opacity-50',\n    getContextClasses(),\n  ].filter(Boolean).join(' ');\n\n  const sliderId = id || `slider-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <div>\n      {label && (\n        <label htmlFor={sliderId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n        </label>\n      )}\n      <Tooltip\n        placement=\"top\"\n        overlay={<span>{currentValue}</span>}\n        visible={withTooltip}\n      >\n        <input\n          id={sliderId}\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={currentValue}\n          onChange={handleOnChange}\n          className={sliderClasses}\n          disabled={disabled}\n          ref={ref}\n          name={name}\n        />\n      </Tooltip>\n      {!withTooltip && (\n        <div className=\"flex justify-between text-sm text-slate-500 mt-1\">\n          <span>{min}</span>\n          <span>{currentValue}</span>\n          <span>{max}</span>\n        </div>\n      )}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';\n", "/**\n * StatusDot Component\n *\n * A component for displaying a user's or system's status with a colored dot.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type Status = 'online' | 'offline' | 'busy' | 'away' | 'inactive';\nexport type StatusDotSize = 'sm' | 'md' | 'lg';\n\nexport interface StatusDotProps {\n  status?: Status;\n  size?: StatusDotSize;\n  context?: WorkspaceContext;\n  pulse?: boolean;\n  label?: string;\n  className?: string;\n}\n\nexport const StatusDot = forwardRef<HTMLSpanElement, StatusDotProps>((\n  {\n    status = 'offline',\n    size = 'md',\n    context = 'neutral',\n    pulse = false,\n    label,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const getStatusClasses = () => {\n    switch (status) {\n      case 'online': return 'bg-green-500';\n      case 'offline': return 'bg-gray-400';\n      case 'busy': return 'bg-red-500';\n      case 'away': return 'bg-yellow-500';\n      case 'inactive': return 'bg-slate-300';\n      default: return 'bg-gray-400';\n    }\n  };\n\n  const sizeClasses = {\n    sm: 'w-2 h-2',\n    md: 'w-3 h-3',\n    lg: 'w-4 h-4',\n  };\n\n  const dotClasses = cn(\n    'rounded-full',\n    sizeClasses[size],\n    getStatusClasses(),\n    { 'animate-pulse': pulse },\n    className\n  );\n\n  return (\n    <span className=\"inline-flex items-center\" ref={ref} {...props}>\n      <span className={dotClasses} />\n      {label && <span className=\"ml-2 text-sm text-slate-700\">{label}</span>}\n    </span>\n  );\n});\n\nStatusDot.displayName = 'StatusDot';\n", "import * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport * as React from \"react\";\n\nimport { cn } from \"@wheel/shared\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-700 focus-visible:ring-offset-2 focus-visible:ring-offset-var(--text-inverted) disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary-500 data-[state=unchecked]:bg-slate-200\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-var(--text-inverted) shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n", "import * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport * as React from \"react\";\n\nimport { cn } from \"@wheel/shared\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-slate-100 p-1 text-slate-600\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-700 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-slate-900 data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-700 focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n\n", "import { cn } from \"@wheel/shared\";\nimport * as React from \"react\";\n\n// Local implementation of useAutosizeTextArea hook\nconst useAutosizeTextArea = (\n  textAreaRef: HTMLTextAreaElement | null,\n  value: string\n) => {\n  React.useEffect(() => {\n    if (textAreaRef) {\n      textAreaRef.style.height = \"0px\";\n      const scrollHeight = textAreaRef.scrollHeight;\n      textAreaRef.style.height = scrollHeight + \"px\";\n    }\n  }, [textAreaRef, value]);\n};\n\nexport type TextareaSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral'\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none'\n\nexport interface EnhancedTextareaProps extends Omit<React.ComponentProps<\"textarea\">, 'size'> {\n  context?: WorkspaceContext\n  validationState?: ValidationState\n  helperText?: string\n  errorMessage?: string\n  warningMessage?: string\n  successMessage?: string\n  label?: string\n  required?: boolean\n  textareaSize?: TextareaSize\n  fullWidth?: boolean\n  hasError?: boolean\n  name: string\n  description?: string\n  showCharacterCount?: boolean\n  maxLength?: number\n  autoResize?: boolean\n}\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\"> & {\n    context?: WorkspaceContext\n    validationState?: ValidationState\n    textareaSize?: TextareaSize\n    autoResize?: boolean\n  }\n>(({ className, context = 'neutral', validationState = 'none', textareaSize = 'md', autoResize = true, ...props }, ref) => {\n  const textAreaRef = React.useRef<HTMLTextAreaElement>(null)\n\n  useAutosizeTextArea(autoResize ? textAreaRef.current : null, props.value as string)\n  React.useImperativeHandle(ref, () => textAreaRef.current as HTMLTextAreaElement)\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-consultant-400 focus:border-consultant-600 focus:ring-consultant-500 bg-consultant-50'\n      case 'client': return 'border-client-400 focus:border-client-600 focus:ring-client-500 bg-client-50'\n      case 'admin': return 'border-admin-400 focus:border-admin-600 focus:ring-admin-500 bg-admin-50'\n      case 'expert': return 'border-expert-400 focus:border-expert-600 focus:ring-expert-500 bg-expert-50'\n      case 'toolCreator': return 'border-toolCreator-400 focus:border-toolCreator-600 focus:ring-toolCreator-500 bg-toolCreator-50'\n      case 'founder': return 'border-founder-400 focus:border-founder-600 focus:ring-founder-500 bg-founder-50'\n      default: return 'border-slate-300 focus:border-slate-500 focus:ring-slate-500 bg-white'\n    }\n  }\n\n  const getValidationClasses = () => {\n    switch (validationState) {\n      case 'error': return 'border-red-500 focus:border-red-500 focus:ring-red-500'\n      case 'warning': return 'border-yellow-500 focus:border-yellow-500 focus:ring-yellow-500'\n      case 'success': return 'border-green-500 focus:border-green-500 focus:ring-green-500'\n      default: return ''\n    }\n  }\n\n  const getSizeClasses = () => {\n    switch (textareaSize) {\n      case 'xs': return 'min-h-[40px] px-2 py-1 text-xs'\n      case 'sm': return 'min-h-[50px] px-2.5 py-1.5 text-sm'\n      case 'md': return 'min-h-[60px] px-3 py-2 text-base'\n      case 'lg': return 'min-h-[80px] px-4 py-2.5 text-lg'\n      case 'xl': return 'min-h-[100px] px-5 py-3 text-xl'\n      default: return 'min-h-[60px] px-3 py-2 text-base'\n    }\n  }\n\n  return (\n    <textarea\n      className={cn(\n        \"flex w-full rounded-lg border shadow-sm placeholder:text-slate-400 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-0 disabled:cursor-not-allowed disabled:opacity-50 resize-none transition-colors duration-200\",\n        getSizeClasses(),\n        validationState !== 'none' ? getValidationClasses() : getContextClasses(),\n        className\n      )}\n      ref={textAreaRef}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nconst EnhancedTextarea = React.forwardRef<HTMLTextAreaElement, EnhancedTextareaProps>(({\n  context = 'neutral',\n  validationState = 'none',\n  helperText,\n  errorMessage,\n  warningMessage,\n  successMessage,\n  label,\n  required,\n  textareaSize = 'md',\n  fullWidth = true,\n  hasError,\n  name,\n  description,\n  showCharacterCount,\n  maxLength,\n  autoResize = true,\n  className,\n  value,\n  ...props\n}, ref) => {\n  const finalValidationState = hasError ? 'error' : validationState\n  const currentLength = typeof value === 'string' ? value.length : 0\n\n  const getMessage = () => {\n    switch (finalValidationState) {\n      case 'error': return errorMessage || helperText\n      case 'warning': return warningMessage || helperText\n      case 'success': return successMessage || helperText\n      default: return helperText\n    }\n  }\n\n  const getMessageColor = () => {\n    switch (finalValidationState) {\n      case 'error': return 'text-red-600'\n      case 'warning': return 'text-yellow-600'\n      case 'success': return 'text-green-600'\n      default: return 'text-slate-600'\n    }\n  }\n\n  const message = getMessage()\n  const showCount = showCharacterCount || maxLength\n\n  return (\n    <div className={cn('space-y-2', className)}>\n      {label && (\n        <label htmlFor={name} className={cn('block text-sm font-medium', finalValidationState === 'error' ? 'text-red-700' : 'text-slate-700')}>\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n\n      <Textarea\n        ref={ref}\n        context={context}\n        validationState={finalValidationState}\n        textareaSize={textareaSize}\n        autoResize={autoResize}\n        id={name}\n        value={value}\n        maxLength={maxLength}\n        aria-describedby={description ? `${name}-description` : undefined}\n        aria-invalid={finalValidationState === 'error'}\n        className={fullWidth ? 'w-full' : ''}\n        {...props}\n      />\n\n      {(message || description || showCount) && (\n        <div className=\"space-y-1\">\n          {description && <p id={`${name}-description`} className=\"text-xs text-slate-500\">{description}</p>}\n          <div className=\"flex justify-between items-center\">\n            {message && <p className={cn('text-xs', getMessageColor())}>{message}</p>}\n            {showCount && (\n              <p className={cn('text-xs', maxLength && currentLength > maxLength ? 'text-red-600' : 'text-slate-500')}>\n                {currentLength}{maxLength && `/${maxLength}`}\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\nEnhancedTextarea.displayName = 'EnhancedTextarea'\n\nexport { EnhancedTextarea, Textarea };\n\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport interface TimeIndicatorProps {\n  time: Date;\n  className?: string;\n}\n\n/**\n * TimeIndicator component that displays a formatted time.\n */\nexport const TimeIndicator: React.FC<TimeIndicatorProps> = ({\n  time,\n  className = '',\n}) => {\n  const formattedTime = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n  return (\n    <div\n      className={cn(\n        'inline-flex items-center text-sm font-semibold text-gray-600',\n        className\n      )}\n    >\n      {formattedTime}\n    </div>\n  );\n};\n\nexport default TimeIndicator;\n", "/**\n * TimePicker Component\n *\n * A specialized time input component with timezone support and workspace context awareness.\n */\n\nimport { forwardRef, useEffect, useRef, useState } from 'react';\n\nexport type TimeFormat = '12h' | '24h';\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ValidationState = 'error' | 'warning' | 'success' | 'none';\n\nexport interface TimePickerProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** Time format (12h or 24h) */\n  format?: TimeFormat;\n  /** Timezone for display */\n  timezone?: string;\n  /** Current time value (HH:MM format) */\n  value?: string;\n  /** Callback when time changes */\n  onChange?: (value: string) => void;\n  /** Validation state */\n  validationState?: ValidationState;\n  /** Helper text */\n  helperText?: string;\n  /** Error message */\n  errorMessage?: string;\n  /** Warning message */\n  warningMessage?: string;\n  /** Success message */\n  successMessage?: string;\n  /** Label for the input */\n  label?: string;\n  /** Whether the field is required */\n  required?: boolean;\n  /** Whether the input is disabled */\n  disabled?: boolean;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n  /** Description for accessibility */\n  description?: string;\n}\n\nexport const TimePicker = forwardRef<HTMLDivElement, TimePickerProps>((\n  {\n    context = 'neutral',\n    format = '12h',\n    timezone,\n    value = '',\n    onChange,\n    validationState = 'none',\n    helperText,\n    errorMessage,\n    warningMessage,\n    successMessage,\n    label,\n    required = false,\n    disabled = false,\n    placeholder = 'Select time...',\n    name,\n    id,\n    description,\n  },\n  ref\n) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const timePickerId = id || `timepicker-${Math.random().toString(36).substr(2, 9)}`;\n\n  useEffect(() => {\n    if (value) {\n      const [hours, minutes] = value.split(':').map(Number);\n      setInputValue(formatDisplayTime(hours, minutes, format));\n    } else {\n      setInputValue('');\n    }\n  }, [value, format]);\n\n  const formatDisplayTime = (hours: number, minutes: number, timeFormat: TimeFormat): string => {\n    if (timeFormat === '12h') {\n      const period = hours >= 12 ? 'PM' : 'AM';\n      const displayHour = hours === 0 ? 12 : hours > 12 ? hours - 12 : hours;\n      return `${String(displayHour).padStart(2, '0')}:${String(minutes).padStart(2, '0')} ${period}`;\n    }\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'border-blue-400 focus:border-blue-600 focus:ring-blue-500 bg-blue-50';\n      case 'client': return 'border-green-400 focus:border-green-600 focus:ring-green-500 bg-green-50';\n      case 'admin': return 'border-gray-400 focus:border-gray-600 focus:ring-gray-500 bg-gray-50';\n      case 'expert': return 'border-purple-400 focus:border-purple-600 focus:ring-purple-500 bg-purple-50';\n      case 'toolCreator': return 'border-indigo-400 focus:border-indigo-600 focus:ring-indigo-500 bg-indigo-50';\n      case 'founder': return 'border-orange-400 focus:border-orange-600 focus:ring-orange-500 bg-orange-50';\n      default: return 'border-slate-300 focus:border-slate-500 focus:ring-slate-500 bg-white';\n    }\n  };\n\n  const getValidationClasses = () => {\n    switch (validationState) {\n      case 'error': return 'border-red-500 focus:border-red-500 focus:ring-red-500';\n      case 'warning': return 'border-yellow-500 focus:border-yellow-500 focus:ring-yellow-500';\n      case 'success': return 'border-green-500 focus:border-green-500 focus:ring-green-500';\n      default: return '';\n    }\n  };\n\n  const inputClasses = [\n    'w-full px-3 py-2 text-base rounded-lg shadow-sm placeholder:text-slate-400',\n    'focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-offset-0',\n    'disabled:cursor-not-allowed disabled:opacity-50 transition-colors duration-200',\n    validationState !== 'none' ? getValidationClasses() : getContextClasses(),\n  ].filter(Boolean).join(' ');\n\n  const generateTimeOptions = () => {\n    const options = [];\n    for (let h = 0; h < 24; h++) {\n      for (let m = 0; m < 60; m += 15) {\n        options.push({\n          display: formatDisplayTime(h, m, format),\n          value: `${String(h).padStart(2, '0')}:${String(m).padStart(2, '0')}`,\n        });\n      }\n    }\n    return options;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  const handleTimeSelect = (timeValue: string, displayValue: string) => {\n    setInputValue(displayValue);\n    if (onChange) onChange(timeValue);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const currentMessage = (() => {\n    if (errorMessage && validationState === 'error') return { type: 'error', message: errorMessage };\n    if (warningMessage && validationState === 'warning') return { type: 'warning', message: warningMessage };\n    if (successMessage && validationState === 'success') return { type: 'success', message: successMessage };\n    if (helperText) return { type: 'helper', message: helperText };\n    return null;\n  })();\n\n  return (\n    <div className=\"w-full\" ref={ref}>\n      {label && (\n        <label htmlFor={timePickerId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <div className=\"relative\" ref={dropdownRef}>\n        <input\n          type=\"text\"\n          id={timePickerId}\n          name={name}\n          className={inputClasses}\n          value={inputValue}\n          onClick={() => setIsOpen(!isOpen)}\n          onFocus={() => setIsOpen(true)}\n          readOnly\n          placeholder={placeholder}\n          disabled={disabled}\n          aria-invalid={validationState === 'error'}\n          aria-describedby={currentMessage ? `${timePickerId}-message` : undefined}\n        />\n        {isOpen && (\n          <ul className=\"absolute z-10 w-full mt-1 bg-white border border-slate-300 rounded-md shadow-lg max-h-60 overflow-auto\">\n            {timeOptions.map((option) => (\n              <li\n                key={option.value}\n                className=\"px-3 py-2 cursor-pointer hover:bg-slate-100\"\n                onClick={() => handleTimeSelect(option.value, option.display)}\n              >\n                {option.display}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      {currentMessage && (\n        <p\n          id={`${timePickerId}-message`}\n          className={`mt-1 text-sm ${\n            currentMessage.type === 'error' ? 'text-red-600' :\n            currentMessage.type === 'warning' ? 'text-yellow-600' :\n            currentMessage.type === 'success' ? 'text-green-600' :\n            'text-slate-600'\n          }`}\n        >\n          {currentMessage.message}\n        </p>\n      )}\n      {description && <p className=\"mt-1 text-sm text-slate-500\">{description}</p>}\n    </div>\n  );\n});\n\nTimePicker.displayName = 'TimePicker';\n", "import React, { useState } from 'react';\nimport { cn } from '@wheel/shared';\nimport { TimePicker } from './timepicker';\n\nexport interface TimeRangeInputProps {\n  value?: {\n    start: string;\n    end: string;\n  };\n  onChange?: (value: { start: string; end: string }) => void;\n  disabled?: boolean;\n  className?: string;\n}\n\n/**\n * TimeRangeInput component for selecting a time range.\n */\nexport const TimeRangeInput: React.FC<TimeRangeInputProps> = ({\n  value = { start: '09:00:00', end: '17:00:00' },\n  onChange,\n  disabled = false,\n  className = '',\n}) => {\n  const [range, setRange] = useState(value);\n\n  const handleChange = (part: 'start' | 'end', time: string) => {\n    const newRange = { ...range, [part]: time };\n    setRange(newRange);\n    if (onChange) {\n      onChange(newRange);\n    }\n  };\n\n  return (\n    <div className={cn('flex items-center space-x-4', className)}>\n      <TimePicker\n        value={range.start}\n        onChange={(time) => handleChange('start', time)}\n        disabled={disabled}\n      />\n      <span>to</span>\n      <TimePicker\n        value={range.end}\n        onChange={(time) => handleChange('end', time)}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default TimeRangeInput;\n", "/**\n * Toast Component\n *\n * A component for displaying toast notifications with workspace context awareness.\n */\n\nimport { cn } from '@wheel/shared';\nimport { Toaster, toast as showToast } from 'react-hot-toast';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\nexport type ToastVariant = 'success' | 'warning' | 'error' | 'info';\n\nexport interface ToastAction {\n  label: string;\n  onClick: () => void;\n}\n\nexport interface ToastProps {\n  variant?: ToastVariant;\n  context?: WorkspaceContext;\n  title?: string;\n  description?: string;\n  duration?: number;\n  persistent?: boolean;\n  actions?: ToastAction[];\n}\n\nconst getVariantClasses = (variant: ToastVariant, context: WorkspaceContext) => {\n  if (context !== 'neutral') {\n    switch (context) {\n      case 'consultant': return 'bg-blue-100 border-blue-500 text-blue-800';\n      case 'client': return 'bg-green-100 border-green-500 text-green-800';\n      case 'admin': return 'bg-gray-100 border-gray-500 text-gray-800';\n      case 'expert': return 'bg-purple-100 border-purple-500 text-purple-800';\n      case 'toolCreator': return 'bg-indigo-100 border-indigo-500 text-indigo-800';\n      case 'founder': return 'bg-orange-100 border-orange-500 text-orange-800';\n    }\n  }\n  switch (variant) {\n    case 'success': return 'bg-green-100 border-green-500 text-green-800';\n    case 'warning': return 'bg-yellow-100 border-yellow-500 text-yellow-800';\n    case 'error': return 'bg-red-100 border-red-500 text-red-800';\n    case 'info': return 'bg-sky-100 border-sky-500 text-sky-800';\n    default: return 'bg-gray-100 border-gray-500 text-gray-800';\n  }\n};\n\nexport const Toast = ({ variant = 'info', context = 'neutral', title, description, actions }: ToastProps) => (\n  <div className={cn('p-4 border-l-4', getVariantClasses(variant, context))}>\n    {title && <p className=\"font-bold\">{title}</p>}\n    {description && <p>{description}</p>}\n    {actions && (\n      <div className=\"mt-2 space-x-2\">\n        {actions.map((action, i) => (\n          <button key={i} onClick={action.onClick} className=\"font-bold text-sm\">\n            {action.label}\n          </button>\n        ))}\n      </div>\n    )}\n  </div>\n);\n\nexport const useToast = () => {\n  const show = (props: ToastProps) => {\n    showToast.custom(\n      (t) => (\n        <div\n          className={cn(\n            'max-w-md w-full bg-white shadow-lg rounded-lg pointer-events-auto flex ring-1 ring-black ring-opacity-5',\n            t.visible ? 'animate-enter' : 'animate-leave'\n          )}\n        >\n          <Toast {...props} />\n        </div>\n      ),\n      {\n        duration: props.persistent ? Infinity : props.duration || 4000,\n      }\n    );\n  };\n\n  return { show };\n};\n\nexport const ToastProvider = () => <Toaster position=\"bottom-right\" />;\n", "/**\n * VerticalSlider Component\n *\n * A vertical range input component for numeric input with workspace context support.\n */\n\nimport { forwardRef, useState } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'toolCreator' | 'founder' | 'neutral';\n\nexport interface VerticalSliderProps {\n  /** Workspace context for styling */\n  context?: WorkspaceContext;\n  /** The current value of the slider */\n  value?: number;\n  /** Callback when the value changes */\n  onChange?: (value: number) => void;\n  /** The minimum value of the slider */\n  min?: number;\n  /** The maximum value of the slider */\n  max?: number;\n  /** The step value of the slider */\n  step?: number;\n  /** Label for the slider */\n  label?: string;\n  /** Whether the slider is disabled */\n  disabled?: boolean;\n  /** Name attribute */\n  name?: string;\n  /** ID attribute */\n  id?: string;\n}\n\nexport const VerticalSlider = forwardRef<HTMLInputElement, VerticalSliderProps>((\n  {\n    context = 'neutral',\n    value = 50,\n    onChange,\n    min = 0,\n    max = 100,\n    step = 1,\n    label,\n    disabled = false,\n    name,\n    id,\n  },\n  ref\n) => {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.target.value);\n    setCurrentValue(newValue);\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant': return 'accent-blue-600';\n      case 'client': return 'accent-green-600';\n      case 'admin': return 'accent-gray-600';\n      case 'expert': return 'accent-purple-600';\n      case 'toolCreator': return 'accent-indigo-600';\n      case 'founder': return 'accent-orange-600';\n      default: return 'accent-slate-600';\n    }\n  };\n\n  const sliderClasses = [\n    'h-36 w-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700',\n    'disabled:cursor-not-allowed disabled:opacity-50',\n    '[writing-mode:vertical-lr]',\n    getContextClasses(),\n  ].filter(Boolean).join(' ');\n\n  const sliderId = id || `vertical-slider-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      {label && (\n        <label htmlFor={sliderId} className=\"block text-sm font-medium text-slate-700 mb-2\">\n          {label}\n        </label>\n      )}\n      <div className=\"flex items-center\">\n        <input\n          id={sliderId}\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={currentValue}\n          onChange={handleOnChange}\n          className={sliderClasses}\n          disabled={disabled}\n          ref={ref}\n          name={name}\n        />\n        <div className=\"flex flex-col justify-between text-sm text-slate-500 ml-2 h-36\">\n          <span>{max}</span>\n          <span>{currentValue}</span>\n          <span>{min}</span>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nVerticalSlider.displayName = 'VerticalSlider';\n", "import React from 'react';\nimport { cn } from '@wheel/shared';\n\nexport type WorkspaceIconSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface WorkspaceIconProps {\n  size?: WorkspaceIconSize;\n  className?: string;\n  // In a real application, you would pass in the workspace object\n  // and derive the icon from that.\n  // For now, we will just use a placeholder.\n  workspace?: {\n    name: string;\n    logo?: string;\n  };\n}\n\n/**\n * WorkspaceIcon component that displays an icon for a workspace.\n */\nexport const WorkspaceIcon: React.FC<WorkspaceIconProps> = ({\n  size = 'md',\n  className = '',\n  workspace,\n}) => {\n  const getDimensions = () => {\n    switch (size) {\n      case 'xs':\n        return 24;\n      case 'sm':\n        return 32;\n      case 'md':\n        return 40;\n      case 'lg':\n        return 48;\n      case 'xl':\n        return 56;\n      default:\n        return 40;\n    }\n  };\n\n  const dimensions = getDimensions();\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map((n) => n[0])\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  };\n\n  return (\n    <div\n      className={cn(\n        'rounded-full flex items-center justify-center bg-gray-200 text-gray-700 font-bold',\n        className\n      )}\n      style={{\n        width: dimensions,\n        height: dimensions,\n        fontSize: dimensions / 2.5,\n      }}\n    >\n      {workspace?.logo ? (\n        <img\n          src={workspace.logo}\n          alt={`${workspace.name} logo`}\n          className=\"w-full h-full rounded-full\"\n        />\n      ) : (\n        <span>{workspace ? getInitials(workspace.name) : 'W'}</span>\n      )}\n    </div>\n  );\n};\n\nexport default WorkspaceIcon;\n", "/**\n * Container Component\n *\n * A layout component for constraining the width of content and centering it.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\nexport type ContainerSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\n\nexport interface ResponsiveConfig {\n  sm?: Partial<Pick<ContainerProps, 'size' | 'padding' | 'margin'>>;\n  md?: Partial<Pick<ContainerProps, 'size' | 'padding' | 'margin'>>;\n  lg?: Partial<Pick<ContainerProps, 'size' | 'padding' | 'margin'>>;\n  xl?: Partial<Pick<ContainerProps, 'size' | 'padding' | 'margin'>>;\n}\n\nexport interface ContainerProps {\n  size?: ContainerSize;\n  context?: WorkspaceContext;\n  responsive?: boolean | ResponsiveConfig;\n  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  margin?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  fluid?: boolean;\n  centerContent?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const Container = forwardRef<HTMLDivElement, ContainerProps>((\n  {\n    size = 'md',\n    context = 'neutral',\n    responsive = true,\n    padding = 'md',\n    margin = 'md',\n    fluid = false,\n    centerContent = true,\n    children,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const sizeClasses = {\n    xs: 'max-w-xs',\n    sm: 'max-w-sm',\n    md: 'max-w-md',\n    lg: 'max-w-lg',\n    xl: 'max-w-xl',\n    '2xl': 'max-w-2xl',\n    full: 'max-w-full',\n  };\n\n  const paddingClasses = {\n    none: 'p-0',\n    sm: 'p-2',\n    md: 'p-4',\n    lg: 'p-6',\n    xl: 'p-8',\n  };\n\n  const marginClasses = {\n    none: 'm-0',\n    sm: 'my-2',\n    md: 'my-4',\n    lg: 'my-6',\n    xl: 'my-8',\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant':\n        return 'bg-blue-50 border-blue-100 shadow-blue-100/50';\n      case 'client':\n        return 'bg-green-50 border-green-100 shadow-green-100/50';\n      case 'admin':\n        return 'bg-gray-50 border-gray-100 shadow-gray-100/50';\n      case 'expert':\n        return 'bg-purple-50 border-purple-100 shadow-purple-100/50';\n      case 'tool-creator':\n        return 'bg-orange-50 border-orange-100 shadow-orange-100/50';\n      case 'founder':\n        return 'bg-amber-50 border-amber-100 shadow-amber-100/50';\n      default:\n        return '';\n    }\n  };\n\n  const getContextPadding = () => {\n    const basePadding = paddingClasses[padding];\n    switch (context) {\n      case 'consultant':\n        return padding === 'md' ? 'p-5' : basePadding;\n      case 'client':\n        return padding === 'md' ? 'p-6' : basePadding;\n      case 'admin':\n        return padding === 'md' ? 'p-8' : basePadding;\n      case 'expert':\n        return padding === 'md' ? 'p-4' : basePadding;\n      case 'tool-creator':\n        return padding === 'md' ? 'p-4' : basePadding;\n      case 'founder':\n        return padding === 'md' ? 'p-6' : basePadding;\n      default:\n        return basePadding;\n    }\n  };\n\n  const responsiveClasses = {\n    xs: 'sm:max-w-sm md:max-w-md lg:max-w-lg',\n    sm: 'sm:max-w-md md:max-w-lg lg:max-w-xl',\n    md: 'sm:max-w-lg md:max-w-xl lg:max-w-2xl',\n    lg: 'sm:max-w-xl md:max-w-2xl lg:max-w-3xl',\n    xl: 'sm:max-w-2xl md:max-w-3xl lg:max-w-4xl',\n    '2xl': 'sm:max-w-3xl md:max-w-4xl lg:max-w-5xl',\n    full: 'max-w-full',\n  };\n\n  const getResponsiveClasses = () => {\n    if (typeof responsive === 'object') {\n      // Advanced responsive configuration\n      const classes = [];\n      if (responsive.sm?.size) classes.push(`sm:${sizeClasses[responsive.sm.size]}`);\n      if (responsive.md?.size) classes.push(`md:${sizeClasses[responsive.md.size]}`);\n      if (responsive.lg?.size) classes.push(`lg:${sizeClasses[responsive.lg.size]}`);\n      if (responsive.xl?.size) classes.push(`xl:${sizeClasses[responsive.xl.size]}`);\n\n      if (responsive.sm?.padding) classes.push(`sm:${paddingClasses[responsive.sm.padding]}`);\n      if (responsive.md?.padding) classes.push(`md:${paddingClasses[responsive.md.padding]}`);\n      if (responsive.lg?.padding) classes.push(`lg:${paddingClasses[responsive.lg.padding]}`);\n      if (responsive.xl?.padding) classes.push(`xl:${paddingClasses[responsive.xl.padding]}`);\n\n      return classes.join(' ');\n    }\n\n    return responsive === true ? responsiveClasses[size] : '';\n  };\n\n  const containerClasses = cn(\n    'w-full transition-all duration-200',\n    fluid ? 'max-w-full' : sizeClasses[size],\n    centerContent ? 'mx-auto' : '',\n    typeof responsive === 'object' ? paddingClasses[padding] : getContextPadding(),\n    marginClasses[margin],\n    getContextClasses(),\n    getResponsiveClasses(),\n    className\n  );\n\n  return (\n    <div ref={ref} className={containerClasses} {...props}>\n      {children}\n    </div>\n  );\n});\n\nContainer.displayName = 'Container';\n", "/**\n * Flex Component\n *\n * A layout component for creating flexbox-based layouts.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'neutral';\n\nexport interface FlexProps {\n  direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  justify?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';\n  align?: 'start' | 'end' | 'center' | 'stretch' | 'baseline';\n  gap?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  context?: WorkspaceContext;\n  responsive?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const Flex = forwardRef<HTMLDivElement, FlexProps>((\n  {\n    direction = 'row',\n    wrap = 'nowrap',\n    justify = 'start',\n    align = 'stretch',\n    gap = 'md',\n    context = 'neutral',\n    responsive = true,\n    children,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const directionClasses = {\n    row: 'flex-row',\n    column: 'flex-col',\n    'row-reverse': 'flex-row-reverse',\n    'column-reverse': 'flex-col-reverse',\n  };\n\n  const wrapClasses = {\n    nowrap: 'flex-nowrap',\n    wrap: 'flex-wrap',\n    'wrap-reverse': 'flex-wrap-reverse',\n  };\n\n  const justifyClasses = {\n    start: 'justify-start',\n    end: 'justify-end',\n    center: 'justify-center',\n    between: 'justify-between',\n    around: 'justify-around',\n    evenly: 'justify-evenly',\n  };\n\n  const alignClasses = {\n    start: 'items-start',\n    end: 'items-end',\n    center: 'items-center',\n    stretch: 'items-stretch',\n    baseline: 'items-baseline',\n  };\n\n  const gapClasses = {\n    none: 'gap-0',\n    sm: 'gap-2',\n    md: 'gap-4',\n    lg: 'gap-6',\n    xl: 'gap-8',\n  };\n\n  const getContextGapClasses = () => {\n    switch (context) {\n      case 'consultant': return 'gap-4';\n      case 'client': return 'gap-6';\n      case 'admin': return 'gap-8';\n      default: return gapClasses[gap];\n    }\n  };\n\n  const getResponsiveClasses = () => {\n    if (!responsive) return '';\n    return `sm:${directionClasses[direction]} md:${directionClasses[direction]}`;\n  };\n\n  const flexClasses = cn(\n    'flex',\n    directionClasses[direction],\n    wrapClasses[wrap],\n    justifyClasses[justify],\n    alignClasses[align],\n    getContextGapClasses(),\n    getResponsiveClasses(),\n    className\n  );\n\n  return (\n    <div ref={ref} className={flexClasses} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFlex.displayName = 'Flex';\n", "/**\n * Grid Component\n *\n * A layout component for creating grid-based layouts.\n */\n\nimport { cn } from '@wheel/shared';\nimport { forwardRef, ReactNode } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n\nexport interface GridProps {\n  columns?: number | string;\n  rows?: number | string;\n  gap?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  context?: WorkspaceContext;\n  responsive?: boolean;\n  autoFit?: boolean;\n  autoFill?: boolean;\n  templateAreas?: string;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const Grid = forwardRef<HTMLDivElement, GridProps>((\n  {\n    columns = 3,\n    rows,\n    gap = 'md',\n    context = 'neutral',\n    responsive = true,\n    autoFit = false,\n    autoFill = false,\n    templateAreas,\n    children,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const gapClasses = {\n    none: 'gap-0',\n    sm: 'gap-2',\n    md: 'gap-4',\n    lg: 'gap-6',\n    xl: 'gap-8',\n  };\n\n  const getContextGapClasses = () => {\n    switch (context) {\n      case 'consultant':\n        return gap === 'md' ? 'gap-4' : gapClasses[gap];\n      case 'client':\n        return gap === 'md' ? 'gap-6' : gapClasses[gap];\n      case 'admin':\n        return gap === 'md' ? 'gap-8' : gapClasses[gap];\n      case 'expert':\n        return gap === 'md' ? 'gap-3' : gapClasses[gap];\n      case 'tool-creator':\n        return gap === 'md' ? 'gap-2' : gapClasses[gap];\n      case 'founder':\n        return gap === 'md' ? 'gap-5' : gapClasses[gap];\n      default:\n        return gapClasses[gap];\n    }\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant':\n        return 'bg-blue-50/30 border border-blue-100 rounded-lg p-2';\n      case 'client':\n        return 'bg-green-50/30 border border-green-100 rounded-lg p-2';\n      case 'admin':\n        return 'bg-gray-50/30 border border-gray-100 rounded-lg p-2';\n      case 'expert':\n        return 'bg-purple-50/30 border border-purple-100 rounded-lg p-2';\n      case 'tool-creator':\n        return 'bg-orange-50/30 border border-orange-100 rounded-lg p-2';\n      case 'founder':\n        return 'bg-amber-50/30 border border-amber-100 rounded-lg p-2';\n      default:\n        return '';\n    }\n  };\n\n  const getResponsiveClasses = () => {\n    if (!responsive) return '';\n    if (autoFit) return `grid-cols-[repeat(auto-fit,minmax(0,1fr))]`;\n    if (autoFill) return `grid-cols-[repeat(auto-fill,minmax(0,1fr))]`;\n    return '';\n  };\n\n  const style = {\n    gridTemplateColumns: responsive ? undefined : (typeof columns === 'number' ? `repeat(${columns}, minmax(0, 1fr))` : columns),\n    gridTemplateRows: typeof rows === 'number' ? `repeat(${rows}, minmax(0, 1fr))` : rows,\n    gridTemplateAreas: templateAreas,\n  };\n\n  const gridClasses = cn(\n    'grid transition-all duration-200',\n    getContextGapClasses(),\n    getResponsiveClasses(),\n    getContextClasses(),\n    className\n  );\n\n  return (\n    <div ref={ref} className={gridClasses} style={style} {...props}>\n      {children}\n    </div>\n  );\n});\n\nGrid.displayName = 'Grid';\n", "/**\n * Panel Component\n *\n * A collapsible and resizable panel for displaying content.\n */\n\nimport { cn } from '@wheel/shared';\nimport { ChevronDown } from 'lucide-react';\nimport { Resizable } from 're-resizable';\nimport { forwardRef, ReactNode, useState } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n\nexport interface PanelProps {\n  variant?: 'elevated' | 'outlined' | 'filled';\n  context?: WorkspaceContext;\n  collapsible?: boolean;\n  defaultCollapsed?: boolean;\n  header?: ReactNode;\n  actions?: ReactNode;\n  resizable?: boolean;\n  onCollapse?: (collapsed: boolean) => void;\n  onResize?: (size: number) => void;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const Panel = forwardRef<HTMLDivElement, PanelProps>((\n  {\n    variant = 'outlined',\n    context = 'neutral',\n    collapsible = false,\n    defaultCollapsed = false,\n    header,\n    actions,\n    resizable = false,\n    onCollapse,\n    onResize,\n    children,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const handleToggle = () => {\n    if (collapsible) {\n      const newCollapsedState = !isCollapsed;\n      setIsCollapsed(newCollapsedState);\n      if (onCollapse) {\n        onCollapse(newCollapsedState);\n      }\n    }\n  };\n\n  const variantClasses = {\n    elevated: 'shadow-lg',\n    outlined: 'border',\n    filled: 'bg-gray-50',\n  };\n\n  const getContextClasses = () => {\n    switch (context) {\n      case 'consultant':\n        return {\n          panel: 'bg-blue-50 border-blue-200',\n          header: 'border-blue-200 bg-blue-100/50',\n          content: 'bg-blue-25',\n          button: 'text-blue-600 hover:text-blue-800 hover:bg-blue-100'\n        };\n      case 'client':\n        return {\n          panel: 'bg-green-50 border-green-200',\n          header: 'border-green-200 bg-green-100/50',\n          content: 'bg-green-25',\n          button: 'text-green-600 hover:text-green-800 hover:bg-green-100'\n        };\n      case 'admin':\n        return {\n          panel: 'bg-gray-50 border-gray-200',\n          header: 'border-gray-200 bg-gray-100/50',\n          content: 'bg-gray-25',\n          button: 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\n        };\n      case 'expert':\n        return {\n          panel: 'bg-purple-50 border-purple-200',\n          header: 'border-purple-200 bg-purple-100/50',\n          content: 'bg-purple-25',\n          button: 'text-purple-600 hover:text-purple-800 hover:bg-purple-100'\n        };\n      case 'tool-creator':\n        return {\n          panel: 'bg-orange-50 border-orange-200',\n          header: 'border-orange-200 bg-orange-100/50',\n          content: 'bg-orange-25',\n          button: 'text-orange-600 hover:text-orange-800 hover:bg-orange-100'\n        };\n      case 'founder':\n        return {\n          panel: 'bg-amber-50 border-amber-200',\n          header: 'border-amber-200 bg-amber-100/50',\n          content: 'bg-amber-25',\n          button: 'text-amber-600 hover:text-amber-800 hover:bg-amber-100'\n        };\n      default:\n        return {\n          panel: 'bg-white border-gray-200',\n          header: 'border-gray-200 bg-gray-50',\n          content: 'bg-white',\n          button: 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\n        };\n    }\n  };\n\n  const contextClasses = getContextClasses();\n\n  const panelClasses = cn(\n    'rounded-lg transition-all duration-200',\n    variantClasses[variant],\n    contextClasses.panel,\n    className\n  );\n\n  if (resizable) {\n    return (\n      <Resizable\n        defaultSize={{\n          width: '100%',\n          height: 'auto',\n        }}\n        onResizeStop={(e, direction, ref, d) => {\n          if (onResize) {\n            onResize(ref.offsetWidth);\n          }\n        }}\n      >\n        <div ref={ref} className={panelClasses} {...props}>\n          <div className={cn('flex items-center justify-between p-4 border-b', contextClasses.header)}>\n            <div className=\"flex items-center\">\n              {collapsible && (\n                <button onClick={handleToggle} className={cn('mr-2 p-1 rounded transition-colors', contextClasses.button)}>\n                  <ChevronDown className={cn('transition-transform', { 'rotate-180': !isCollapsed })} />\n                </button>\n              )}\n              {header}\n            </div>\n            {actions}\n          </div>\n          {!isCollapsed && (\n            <div className={cn('p-4', contextClasses.content)}>\n              {children}\n            </div>\n          )}\n        </div>\n      </Resizable>\n    );\n  }\n\n  return (\n    <div ref={ref} className={panelClasses} {...props}>\n      <div className={cn('flex items-center justify-between p-4 border-b', contextClasses.header)}>\n        <div className=\"flex items-center\">\n          {collapsible && (\n            <button onClick={handleToggle} className={cn('mr-2 p-1 rounded transition-colors', contextClasses.button)}>\n              <ChevronDown className={cn('transition-transform', { 'rotate-180': !isCollapsed })} />\n            </button>\n          )}\n          {header}\n        </div>\n        {actions}\n      </div>\n      {!isCollapsed && (\n        <div className={cn('p-4', contextClasses.content)}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n});\n\nPanel.displayName = 'Panel';\n", "/**\n * Stack Component\n *\n * A layout component for stacking elements vertically or horizontally.\n */\n\nimport { cn } from '@wheel/shared';\nimport React, { forwardRef, ReactNode } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'neutral';\n\nexport interface StackProps {\n  direction?: 'vertical' | 'horizontal';\n  spacing?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  context?: WorkspaceContext;\n  align?: 'start' | 'end' | 'center' | 'stretch';\n  separator?: ReactNode;\n  responsive?: boolean;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const Stack = forwardRef<HTMLDivElement, StackProps>((\n  {\n    direction = 'vertical',\n    spacing = 'md',\n    context = 'neutral',\n    align = 'stretch',\n    separator,\n    responsive = true,\n    children,\n    className,\n    ...props\n  },\n  ref\n) => {\n  const spacingClasses = {\n    none: 'space-y-0',\n    sm: 'space-y-2',\n    md: 'space-y-4',\n    lg: 'space-y-6',\n    xl: 'space-y-8',\n  };\n\n  const horizontalSpacingClasses = {\n    none: 'space-x-0',\n    sm: 'space-x-2',\n    md: 'space-x-4',\n    lg: 'space-x-6',\n    xl: 'space-x-8',\n  };\n\n  const alignClasses = {\n    start: 'items-start',\n    end: 'items-end',\n    center: 'items-center',\n    stretch: 'items-stretch',\n  };\n\n  const getContextSpacingClasses = () => {\n    switch (context) {\n      case 'consultant': return direction === 'vertical' ? 'space-y-4' : 'space-x-4';\n      case 'client': return direction === 'vertical' ? 'space-y-6' : 'space-x-6';\n      case 'admin': return direction === 'vertical' ? 'space-y-8' : 'space-x-8';\n      default: return direction === 'vertical' ? spacingClasses[spacing] : horizontalSpacingClasses[spacing];\n    }\n  };\n\n  const getResponsiveClasses = () => {\n    if (!responsive) return '';\n    return `sm:${direction === 'vertical' ? 'flex-col' : 'flex-row'}`;\n  };\n\n  const stackClasses = cn(\n    'flex',\n    direction === 'vertical' ? 'flex-col' : 'flex-row',\n    getContextSpacingClasses(),\n    alignClasses[align],\n    getResponsiveClasses(),\n    className\n  );\n\n  const childrenWithSeparators = separator\n    ? React.Children.toArray(children).flatMap((child, index) =>\n        index < React.Children.count(children) - 1 ? [child, separator] : [child]\n      )\n    : children;\n\n  return (\n    <div ref={ref} className={stackClasses} {...props}>\n      {childrenWithSeparators}\n    </div>\n  );\n});\n\nStack.displayName = 'Stack';\n"],
  "mappings": "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",
  "names": ["value", "import_react", "import_jsx_runtime", "getVariantClasses", "import_jsx_runtime", "React", "import_jsx_runtime", "Checkbox", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "format", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "React", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "React", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "React", "import_jsx_runtime", "Root", "import_react", "React", "import_jsx_runtime", "Root", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "React", "import_jsx_runtime", "Root", "React", "import_jsx_runtime", "Root2", "Trigger", "Content", "React", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "format", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "ref", "import_react", "import_jsx_runtime", "React"]
}
