{
  "version": 3,
  "sources": ["../../../../../../packages/layouts/src/components/TopNavigation.tsx", "../../../../../../packages/layouts/src/components/BreadcrumbNav.tsx", "../../../../../../packages/layouts/src/components/TabNavigation.tsx", "../../../../../../packages/layouts/src/components/WorkspaceNav.tsx", "../../../../../../packages/layouts/src/components/ClientNav.tsx", "../../../../../../packages/layouts/src/components/ConsultantNav.tsx", "../../../../../../packages/layouts/src/components/SideNavigation.tsx", "../../../../../../packages/layouts/src/components/MobileNav.tsx", "../../../../../../packages/layouts/src/components/data-display/ActivityFeed.tsx", "../../../../../../packages/layouts/src/components/data-display/utils.ts", "../../../../../../packages/layouts/src/components/data-display/CardGrid.tsx", "../../../../../../packages/layouts/src/components/data-display/DataGrid.tsx", "../../../../../../packages/layouts/src/components/data-display/DataTable.tsx", "../../../../../../packages/layouts/src/components/data-display/Timeline.tsx", "../../../../../../packages/layouts/src/components/forms/FormBuilder.tsx", "../../../../../../packages/layouts/src/components/forms/utils.ts", "../../../../../../packages/layouts/src/components/forms/FormTemplate.tsx", "../../../../../../packages/layouts/src/components/forms/FormWizard.tsx", "../../../../../../packages/layouts/src/components/communication/chat/ChatInterface.tsx", "../../../../../../packages/layouts/src/lib/utils.ts", "../../../../../../packages/layouts/src/components/communication/comment/CommentThread.tsx", "../../../../../../packages/layouts/src/components/communication/comment/types.ts", "../../../../../../packages/layouts/src/components/communication/notification/NotificationCenter.tsx"],
  "sourcesContent": ["import { cn } from '@wheel/shared';\nimport { Avatar, Badge, Button, Logo } from '@wheel/ui';\nimport {\n  Bell,\n  ChevronDown,\n  HelpCircle,\n  LogOut,\n  Menu,\n  Search,\n  Settings,\n  User\n} from 'lucide-react';\nimport React, { useState } from 'react';\n\n// Types\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  role: string;\n}\n\nexport interface Workspace {\n  id: string;\n  name: string;\n  type: 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder';\n  avatar?: string;\n  permissions: string[];\n}\n\nexport interface Notification {\n  id: string;\n  title: string;\n  message: string;\n  type: 'info' | 'warning' | 'error' | 'success';\n  timestamp: Date;\n  read: boolean;\n  actionUrl?: string;\n}\n\nexport interface NavigationAction {\n  id: string;\n  label: string;\n  icon?: React.ElementType;\n  onClick?: () => void;\n  href?: string;\n  permission?: string;\n  badge?: number;\n  disabled?: boolean;\n}\n\nexport interface TopNavigationProps {\n  /** Workspace context for theming */\n  context?: 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n  /** Available workspaces for switching */\n  workspaces?: Workspace[];\n  /** Currently active workspace */\n  currentWorkspace?: Workspace;\n  /** Workspace change handler */\n  onWorkspaceChange?: (workspace: Workspace) => void;\n  /** Current user information */\n  user?: User;\n  /** Notifications array */\n  notifications?: Notification[];\n  /** Notification click handler */\n  onNotificationClick?: (notification: Notification) => void;\n  /** Primary navigation actions */\n  primaryActions?: NavigationAction[];\n  /** Secondary navigation actions */\n  secondaryActions?: NavigationAction[];\n  /** Enable responsive behavior */\n  responsive?: boolean;\n  /** Mobile menu toggle handler */\n  onMobileMenuClick?: () => void;\n  /** Search functionality */\n  onSearch?: (query: string) => void;\n  /** Show search bar */\n  showSearch?: boolean;\n  /** Sign out handler */\n  onSignOut?: () => void;\n  /** Custom className */\n  className?: string;\n}\n\n/**\n * TopNavigation - Enhanced primary navigation with workspace context awareness\n *\n * Features:\n * - Workspace switcher integration\n * - Context-aware theming\n * - Notification center\n * - User profile management\n * - Responsive design\n * - Accessibility compliant\n */\nexport const TopNavigation: React.FC<TopNavigationProps> = ({\n  context = 'neutral',\n  workspaces = [],\n  currentWorkspace,\n  onWorkspaceChange,\n  user,\n  notifications = [],\n  onNotificationClick,\n  primaryActions = [],\n  secondaryActions = [],\n  responsive = true,\n  onMobileMenuClick,\n  onSearch,\n  showSearch = true,\n  onSignOut,\n  className,\n}) => {\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Context-aware styling\n  const contextStyles = {\n    consultant: 'bg-blue-50 border-blue-200',\n    client: 'bg-green-50 border-green-200',\n    admin: 'bg-gray-50 border-gray-200',\n    expert: 'bg-purple-50 border-purple-200',\n    'tool-creator': 'bg-orange-50 border-orange-200',\n    founder: 'bg-amber-50 border-amber-200',\n    neutral: 'bg-white border-gray-200',\n  };\n\n  const unreadNotifications = notifications.filter(n => !n.read).length;\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (onSearch && searchQuery.trim()) {\n      onSearch(searchQuery.trim());\n    }\n  };\n\n  const handleNotificationClick = (notification: Notification) => {\n    if (onNotificationClick) {\n      onNotificationClick(notification);\n    }\n    setIsNotificationOpen(false);\n  };\n\n  return (\n    <header\n      className={cn(\n        'border-b shadow-sm transition-colors duration-200',\n        contextStyles[context],\n        className\n      )}\n      role=\"banner\"\n    >\n      <div className=\"px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          {/* Left Section: Mobile Menu + Logo + Workspace Switcher */}\n          <div className=\"flex items-center gap-4\">\n            {/* Mobile Menu Button */}\n            {responsive && onMobileMenuClick && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onMobileMenuClick}\n                className=\"lg:hidden\"\n                aria-label=\"Open mobile menu\"\n              >\n                <Menu className=\"w-5 h-5\" />\n              </Button>\n            )}\n\n            {/* Logo */}\n            <Logo\n              variant=\"full\"\n              size=\"sm\"\n              className=\"transition-transform hover:scale-105\"\n            />\n\n            {/* Workspace Switcher Placeholder */}\n            {workspaces.length > 0 && currentWorkspace && onWorkspaceChange && (\n              <div className=\"hidden md:block\">\n                <div className=\"px-3 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg\">\n                  {currentWorkspace.name}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Center Section: Search */}\n          {showSearch && onSearch && (\n            <div className=\"hidden lg:flex flex-1 max-w-md mx-8\">\n              <form onSubmit={handleSearch} className=\"relative w-full\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                  aria-label=\"Search\"\n                />\n              </form>\n            </div>\n          )}\n\n          {/* Right Section: Actions + Notifications + Profile */}\n          <div className=\"flex items-center gap-2\">\n            {/* Primary Actions */}\n            {primaryActions.map((action) => (\n              <Button\n                key={action.id}\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={action.onClick}\n                disabled={action.disabled}\n                className=\"hidden md:flex\"\n                aria-label={action.label}\n              >\n                {action.icon && <action.icon className=\"w-4 h-4\" />}\n                <span className=\"ml-2\">{action.label}</span>\n                {action.badge && action.badge > 0 && (\n                  <Badge variant=\"secondary\" className=\"ml-2\">\n                    {action.badge}\n                  </Badge>\n                )}\n              </Button>\n            ))}\n\n            {/* Notifications */}\n            <div className=\"relative\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsNotificationOpen(!isNotificationOpen)}\n                className=\"relative\"\n                aria-label={`Notifications ${unreadNotifications > 0 ? `(${unreadNotifications} unread)` : ''}`}\n              >\n                <Bell className=\"w-5 h-5\" />\n                {unreadNotifications > 0 && (\n                  <Badge\n                    variant=\"error\"\n                    className=\"absolute -top-1 -right-1 w-5 h-5 text-xs flex items-center justify-center p-0\"\n                  >\n                    {unreadNotifications > 9 ? '9+' : unreadNotifications}\n                  </Badge>\n                )}\n              </Button>\n\n              {/* Notifications Dropdown */}\n              {isNotificationOpen && (\n                <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50 max-h-96 overflow-y-auto\">\n                  <div className=\"p-4 border-b border-gray-200\">\n                    <h3 className=\"font-semibold text-gray-900\">Notifications</h3>\n                  </div>\n                  {notifications.length === 0 ? (\n                    <div className=\"p-4 text-center text-gray-500\">\n                      No notifications\n                    </div>\n                  ) : (\n                    <div className=\"py-2\">\n                      {notifications.slice(0, 10).map((notification) => (\n                        <button\n                          key={notification.id}\n                          onClick={() => handleNotificationClick(notification)}\n                          className={cn(\n                            'w-full px-4 py-3 text-left hover:bg-gray-50 border-b border-gray-100 last:border-b-0',\n                            !notification.read && 'bg-blue-50'\n                          )}\n                        >\n                          <div className=\"flex items-start gap-3\">\n                            <div className={cn(\n                              'w-2 h-2 rounded-full mt-2 flex-shrink-0',\n                              !notification.read ? 'bg-blue-500' : 'bg-gray-300'\n                            )} />\n                            <div className=\"flex-1 min-w-0\">\n                              <p className=\"font-medium text-gray-900 text-sm\">\n                                {notification.title}\n                              </p>\n                              <p className=\"text-gray-600 text-sm truncate\">\n                                {notification.message}\n                              </p>\n                              <p className=\"text-gray-400 text-xs mt-1\">\n                                {notification.timestamp.toLocaleDateString()}\n                              </p>\n                            </div>\n                          </div>\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Settings */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"hidden md:flex\"\n              aria-label=\"Settings\"\n            >\n              <Settings className=\"w-5 h-5\" />\n            </Button>\n\n            {/* User Profile */}\n            {user && (\n              <div className=\"relative\">\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n                  className=\"flex items-center gap-2 px-2\"\n                  aria-label=\"User menu\"\n                  aria-expanded={isProfileMenuOpen}\n                >\n                  <Avatar\n                    src={user.avatar}\n                    alt={user.name}\n                    fallback={user.name.charAt(0)}\n                    size=\"sm\"\n                  />\n                  <div className=\"text-left hidden lg:block\">\n                    <p className=\"text-sm font-medium text-gray-900\">{user.name}</p>\n                    <p className=\"text-xs text-gray-500\">{user.role}</p>\n                  </div>\n                  <ChevronDown className=\"w-4 h-4 text-gray-400\" />\n                </Button>\n\n                {/* Profile Dropdown */}\n                {isProfileMenuOpen && (\n                  <div className=\"absolute right-0 mt-2 w-56 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-4 border-b border-gray-200\">\n                      <p className=\"font-medium text-gray-900\">{user.name}</p>\n                      <p className=\"text-sm text-gray-500\">{user.email}</p>\n                    </div>\n                    <div className=\"py-2\">\n                      <button className=\"flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\">\n                        <User className=\"w-4 h-4\" />\n                        <span>Profile</span>\n                      </button>\n                      <button className=\"flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\">\n                        <Settings className=\"w-4 h-4\" />\n                        <span>Settings</span>\n                      </button>\n                      <button className=\"flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 w-full text-left\">\n                        <HelpCircle className=\"w-4 h-4\" />\n                        <span>Help</span>\n                      </button>\n                      <hr className=\"my-1\" />\n                      {onSignOut && (\n                        <button\n                          onClick={onSignOut}\n                          className=\"flex items-center gap-3 px-4 py-2 text-sm text-red-600 hover:bg-red-50 w-full text-left\"\n                        >\n                          <LogOut className=\"w-4 h-4\" />\n                          <span>Sign Out</span>\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Mobile Workspace Switcher */}\n        {workspaces.length > 0 && currentWorkspace && onWorkspaceChange && (\n          <div className=\"md:hidden mt-3\">\n            <div className=\"px-3 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-lg\">\n              {currentWorkspace.name}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Click outside handlers */}\n      {(isProfileMenuOpen || isNotificationOpen) && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => {\n            setIsProfileMenuOpen(false);\n            setIsNotificationOpen(false);\n          }}\n          aria-hidden=\"true\"\n        />\n      )}\n    </header>\n  );\n};\n\nexport default TopNavigation;\n", "import { cn } from '@wheel/shared';\nimport { ChevronRight, Home } from 'lucide-react';\nimport React from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n\nexport interface BreadcrumbItem {\n  id: string;\n  label: string;\n  path?: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  workspaceContext?: WorkspaceContext;\n}\n\nexport interface BreadcrumbNavProps {\n  context?: WorkspaceContext;\n  items: BreadcrumbItem[];\n  maxItems?: number;\n  separator?: React.ReactNode;\n  onItemClick?: (item: BreadcrumbItem) => void;\n  responsive?: boolean;\n  generateFromPath?: boolean;\n  workspaceScoped?: boolean;\n  className?: string;\n  showHome?: boolean;\n}\n\nconst contextStyles = {\n  consultant: 'text-blue-600 hover:text-blue-700 border-blue-200',\n  client: 'text-green-600 hover:text-green-700 border-green-200',\n  admin: 'text-red-600 hover:text-red-700 border-red-200',\n  expert: 'text-purple-600 hover:text-purple-700 border-purple-200',\n  'tool-creator': 'text-orange-600 hover:text-orange-700 border-orange-200',\n  founder: 'text-amber-600 hover:text-amber-700 border-amber-200',\n  neutral: 'text-gray-600 hover:text-gray-700 border-gray-200',\n};\n\nexport const BreadcrumbNav: React.FC<BreadcrumbNavProps> = ({\n  context = 'neutral',\n  items,\n  maxItems = 5,\n  separator,\n  onItemClick,\n  responsive = true,\n  generateFromPath = false,\n  workspaceScoped = false,\n  className,\n  showHome = true,\n  ...props\n}) => {\n  // Process items based on maxItems limit\n  const processedItems = React.useMemo(() => {\n    if (items.length <= maxItems) {\n      return items;\n    }\n\n    // Show first item, ellipsis, and last few items\n    const firstItem = items[0];\n    const lastItems = items.slice(-(maxItems - 2));\n\n    return [\n      firstItem,\n      { id: 'ellipsis', label: '...', disabled: true },\n      ...lastItems,\n    ];\n  }, [items, maxItems]);\n\n  const handleItemClick = (item: BreadcrumbItem) => {\n    if (item.disabled || item.id === 'ellipsis') return;\n    onItemClick?.(item);\n  };\n\n  const renderSeparator = () => {\n    if (separator) return separator;\n    return <ChevronRight className=\"h-4 w-4 text-gray-400\" />;\n  };\n\n  const getItemStyles = (item: BreadcrumbItem, isLast: boolean) => {\n    const baseStyles = 'inline-flex items-center gap-1 text-sm transition-colors';\n\n    if (item.disabled || item.id === 'ellipsis') {\n      return cn(baseStyles, 'text-gray-400 cursor-default');\n    }\n\n    if (isLast) {\n      return cn(baseStyles, 'text-gray-900 font-medium cursor-default');\n    }\n\n    const contextStyle = contextStyles[item.workspaceContext || context];\n    return cn(\n      baseStyles,\n      'hover:underline cursor-pointer',\n      contextStyle\n    );\n  };\n\n  return (\n    <nav\n      className={cn(\n        'flex items-center space-x-1 text-sm',\n        responsive && 'flex-wrap',\n        className\n      )}\n      aria-label=\"Breadcrumb\"\n      {...props}\n    >\n      <ol className=\"flex items-center space-x-1\">\n        {showHome && (\n          <>\n            <li>\n              <button\n                onClick={() => onItemClick?.({ id: 'home', label: 'Home', path: '/' })}\n                className={cn(\n                  'inline-flex items-center text-sm transition-colors hover:underline',\n                  contextStyles[context]\n                )}\n                aria-label=\"Home\"\n              >\n                <Home className=\"h-4 w-4\" />\n              </button>\n            </li>\n            {processedItems.length > 0 && (\n              <li className=\"flex items-center\">\n                {renderSeparator()}\n              </li>\n            )}\n          </>\n        )}\n\n        {processedItems.map((item, index) => {\n          const isLast = index === processedItems.length - 1;\n\n          return (\n            <React.Fragment key={item.id}>\n              <li>\n                {item.path && !item.disabled && !isLast ? (\n                  <button\n                    onClick={() => handleItemClick(item)}\n                    className={getItemStyles(item, isLast)}\n                    aria-current={isLast ? 'page' : undefined}\n                  >\n                    {item.icon && (\n                      <span className=\"h-4 w-4\" aria-hidden=\"true\">\n                        {item.icon}\n                      </span>\n                    )}\n                    <span className={responsive ? 'truncate max-w-[120px] sm:max-w-none' : ''}>\n                      {item.label}\n                    </span>\n                  </button>\n                ) : (\n                  <span\n                    className={getItemStyles(item, isLast)}\n                    aria-current={isLast ? 'page' : undefined}\n                  >\n                    {item.icon && (\n                      <span className=\"h-4 w-4\" aria-hidden=\"true\">\n                        {item.icon}\n                      </span>\n                    )}\n                    <span className={responsive ? 'truncate max-w-[120px] sm:max-w-none' : ''}>\n                      {item.label}\n                    </span>\n                  </span>\n                )}\n              </li>\n\n              {!isLast && (\n                <li className=\"flex items-center\" aria-hidden=\"true\">\n                  {renderSeparator()}\n                </li>\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default BreadcrumbNav;\n", "import { cn } from '@wheel/shared';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport React, { useEffect, useRef, useState } from 'react';\n\nexport type WorkspaceContext = 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n\nexport interface TabItem {\n  id: string;\n  label: string;\n  icon?: React.ReactNode;\n  badge?: number;\n  disabled?: boolean;\n  lazy?: boolean;\n  permission?: string;\n  workspaceContext?: WorkspaceContext;\n  content?: React.ReactNode;\n  closable?: boolean;\n}\n\nexport interface TabNavigationProps {\n  context?: WorkspaceContext;\n  tabs: TabItem[];\n  activeTab?: string;\n  onTabChange?: (tab: TabItem) => void;\n  onTabClose?: (tab: TabItem) => void;\n  variant?: 'line' | 'card' | 'pill';\n  size?: 'sm' | 'md' | 'lg';\n  scrollable?: boolean;\n  responsive?: boolean;\n  lazy?: boolean;\n  permissions?: string[];\n  className?: string;\n  tabListClassName?: string;\n  tabPanelClassName?: string;\n  showContent?: boolean;\n}\n\nconst contextStyles = {\n  consultant: {\n    active: 'border-blue-500 text-blue-600',\n    inactive: 'text-gray-500 hover:text-blue-600 hover:border-blue-300',\n    background: 'bg-blue-50',\n  },\n  client: {\n    active: 'border-green-500 text-green-600',\n    inactive: 'text-gray-500 hover:text-green-600 hover:border-green-300',\n    background: 'bg-green-50',\n  },\n  admin: {\n    active: 'border-red-500 text-red-600',\n    inactive: 'text-gray-500 hover:text-red-600 hover:border-red-300',\n    background: 'bg-red-50',\n  },\n  expert: {\n    active: 'border-purple-500 text-purple-600',\n    inactive: 'text-gray-500 hover:text-purple-600 hover:border-purple-300',\n    background: 'bg-purple-50',\n  },\n  'tool-creator': {\n    active: 'border-orange-500 text-orange-600',\n    inactive: 'text-gray-500 hover:text-orange-600 hover:border-orange-300',\n    background: 'bg-orange-50',\n  },\n  founder: {\n    active: 'border-amber-500 text-amber-600',\n    inactive: 'text-gray-500 hover:text-amber-600 hover:border-amber-300',\n    background: 'bg-amber-50',\n  },\n  neutral: {\n    active: 'border-gray-500 text-gray-900',\n    inactive: 'text-gray-500 hover:text-gray-700 hover:border-gray-300',\n    background: 'bg-gray-50',\n  },\n};\n\nconst variantStyles = {\n  line: {\n    tabList: 'border-b border-gray-200',\n    tab: 'border-b-2 border-transparent px-4 py-2',\n    activeTab: 'border-b-2',\n  },\n  card: {\n    tabList: 'bg-gray-100 p-1 rounded-lg',\n    tab: 'px-3 py-1.5 rounded-md',\n    activeTab: 'bg-white shadow-sm',\n  },\n  pill: {\n    tabList: 'space-x-1',\n    tab: 'px-3 py-1.5 rounded-full',\n    activeTab: 'shadow-sm',\n  },\n};\n\nconst sizeStyles = {\n  sm: 'text-xs',\n  md: 'text-sm',\n  lg: 'text-base',\n};\n\nexport const TabNavigation: React.FC<TabNavigationProps> = ({\n  context = 'neutral',\n  tabs,\n  activeTab,\n  onTabChange,\n  onTabClose,\n  variant = 'line',\n  size = 'md',\n  scrollable = true,\n  responsive = true,\n  lazy = false,\n  permissions = [],\n  className,\n  tabListClassName,\n  tabPanelClassName,\n  showContent = true,\n  ...props\n}) => {\n  const [internalActiveTab, setInternalActiveTab] = useState(activeTab || tabs[0]?.id);\n  const [showScrollButtons, setShowScrollButtons] = useState(false);\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n  const tabListRef = useRef<HTMLDivElement>(null);\n  const [loadedTabs, setLoadedTabs] = useState<Set<string>>(new Set([internalActiveTab]));\n\n  const currentActiveTab = activeTab || internalActiveTab;\n\n  // Filter tabs based on permissions\n  const filteredTabs = React.useMemo(() => {\n    return tabs.filter(tab => {\n      if (!tab.permission) return true;\n      return permissions.includes(tab.permission);\n    });\n  }, [tabs, permissions]);\n\n  // Check scroll state\n  const checkScrollState = React.useCallback(() => {\n    if (!tabListRef.current || !scrollable) return;\n\n    const { scrollLeft, scrollWidth, clientWidth } = tabListRef.current;\n    setCanScrollLeft(scrollLeft > 0);\n    setCanScrollRight(scrollLeft < scrollWidth - clientWidth - 1);\n    setShowScrollButtons(scrollWidth > clientWidth);\n  }, [scrollable]);\n\n  useEffect(() => {\n    checkScrollState();\n    const handleResize = () => checkScrollState();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [checkScrollState, filteredTabs]);\n\n  useEffect(() => {\n    if (lazy && currentActiveTab && !loadedTabs.has(currentActiveTab)) {\n      setLoadedTabs(prev => new Set([...prev, currentActiveTab]));\n    }\n  }, [currentActiveTab, lazy, loadedTabs]);\n\n  const handleTabClick = (tab: TabItem) => {\n    if (tab.disabled) return;\n\n    const newActiveTab = tab.id;\n    setInternalActiveTab(newActiveTab);\n    onTabChange?.(tab);\n\n    if (lazy && !loadedTabs.has(newActiveTab)) {\n      setLoadedTabs(prev => new Set([...prev, newActiveTab]));\n    }\n  };\n\n  const handleTabClose = (tab: TabItem, event: React.MouseEvent) => {\n    event.stopPropagation();\n    onTabClose?.(tab);\n  };\n\n  const scrollTabs = (direction: 'left' | 'right') => {\n    if (!tabListRef.current) return;\n\n    const scrollAmount = 200;\n    const newScrollLeft = direction === 'left'\n      ? tabListRef.current.scrollLeft - scrollAmount\n      : tabListRef.current.scrollLeft + scrollAmount;\n\n    tabListRef.current.scrollTo({\n      left: newScrollLeft,\n      behavior: 'smooth',\n    });\n\n    setTimeout(checkScrollState, 300);\n  };\n\n  const getTabStyles = (tab: TabItem, isActive: boolean) => {\n    const baseStyles = cn(\n      'inline-flex items-center gap-2 font-medium transition-all duration-200 cursor-pointer',\n      'focus:outline-none focus:ring-2 focus:ring-offset-2',\n      sizeStyles[size],\n      variantStyles[variant].tab\n    );\n\n    if (tab.disabled) {\n      return cn(baseStyles, 'opacity-50 cursor-not-allowed text-gray-400');\n    }\n\n    const contextStyle = contextStyles[tab.workspaceContext || context];\n\n    if (isActive) {\n      return cn(\n        baseStyles,\n        variantStyles[variant].activeTab,\n        contextStyle.active,\n        variant === 'card' || variant === 'pill' ? contextStyle.background : ''\n      );\n    }\n\n    return cn(baseStyles, contextStyle.inactive);\n  };\n\n  const renderBadge = (badge: number) => {\n    if (!badge) return null;\n\n    return (\n      <span className={cn(\n        'inline-flex items-center justify-center px-1.5 py-0.5 rounded-full text-xs font-medium',\n        'bg-red-100 text-red-800 min-w-[1.25rem] h-5'\n      )}>\n        {badge > 99 ? '99+' : badge}\n      </span>\n    );\n  };\n\n  const activeTabData = filteredTabs.find(tab => tab.id === currentActiveTab);\n\n  return (\n    <div className={cn('w-full', className)} {...props}>\n      {/* Tab List */}\n      <div className=\"relative\">\n        {/* Scroll Left Button */}\n        {showScrollButtons && canScrollLeft && (\n          <button\n            onClick={() => scrollTabs('left')}\n            className={cn(\n              'absolute left-0 top-0 z-10 h-full px-2 bg-white shadow-md',\n              'flex items-center justify-center hover:bg-gray-50',\n              'border-r border-gray-200'\n            )}\n            aria-label=\"Scroll tabs left\"\n          >\n            <ChevronLeft className=\"h-4 w-4\" />\n          </button>\n        )}\n\n        {/* Tab List Container */}\n        <div\n          ref={tabListRef}\n          className={cn(\n            'flex overflow-x-auto scrollbar-hide',\n            variantStyles[variant].tabList,\n            scrollable && showScrollButtons && canScrollLeft && 'pl-10',\n            scrollable && showScrollButtons && canScrollRight && 'pr-10',\n            tabListClassName\n          )}\n          role=\"tablist\"\n          onScroll={checkScrollState}\n        >\n          {filteredTabs.map((tab) => {\n            const isActive = tab.id === currentActiveTab;\n\n            return (\n              <button\n                key={tab.id}\n                role=\"tab\"\n                aria-selected={isActive}\n                aria-controls={`tabpanel-${tab.id}`}\n                tabIndex={isActive ? 0 : -1}\n                className={getTabStyles(tab, isActive)}\n                onClick={() => handleTabClick(tab)}\n                disabled={tab.disabled}\n              >\n                {tab.icon && (\n                  <span className=\"h-4 w-4 flex-shrink-0\" aria-hidden=\"true\">\n                    {tab.icon}\n                  </span>\n                )}\n\n                <span className={responsive ? 'truncate max-w-[120px] sm:max-w-none' : ''}>\n                  {tab.label}\n                </span>\n\n                {tab.badge && renderBadge(tab.badge)}\n\n                {tab.closable && (\n                  <button\n                    onClick={(e) => handleTabClose(tab, e)}\n                    className={cn(\n                      'ml-1 p-0.5 rounded hover:bg-gray-200 transition-colors',\n                      'focus:outline-none focus:ring-1 focus:ring-gray-400'\n                    )}\n                    aria-label={`Close ${tab.label} tab`}\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </button>\n                )}\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Scroll Right Button */}\n        {showScrollButtons && canScrollRight && (\n          <button\n            onClick={() => scrollTabs('right')}\n            className={cn(\n              'absolute right-0 top-0 z-10 h-full px-2 bg-white shadow-md',\n              'flex items-center justify-center hover:bg-gray-50',\n              'border-l border-gray-200'\n            )}\n            aria-label=\"Scroll tabs right\"\n          >\n            <ChevronRight className=\"h-4 w-4\" />\n          </button>\n        )}\n      </div>\n\n      {/* Tab Panels */}\n      {showContent && activeTabData && (\n        <div\n          role=\"tabpanel\"\n          id={`tabpanel-${activeTabData.id}`}\n          aria-labelledby={`tab-${activeTabData.id}`}\n          className={cn('mt-4', tabPanelClassName)}\n        >\n          {lazy ? (\n            loadedTabs.has(activeTabData.id) && activeTabData.content\n          ) : (\n            activeTabData.content\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabNavigation;\n", "import { cn } from '@wheel/shared';\nimport React, { useCallback, useState } from 'react';\n\n// Types\nexport interface Workspace {\n  id: string;\n  name: string;\n  type: 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder';\n  permissions: string[];\n  features: FeatureToggle[];\n  branding?: WorkspaceBranding;\n  navigation: NavigationItem[];\n}\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  role: string;\n  permissions: string[];\n}\n\nexport interface FeatureToggle {\n  id: string;\n  name: string;\n  enabled: boolean;\n  permission?: string;\n  workspaceContext?: 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n}\n\nexport interface WorkspaceBranding {\n  primaryColor: string;\n  secondaryColor: string;\n  logo?: string;\n  theme: 'light' | 'dark' | 'gradient';\n}\n\nexport interface NavigationItem {\n  id: string;\n  label: string;\n  icon?: string;\n  path?: string;\n  children?: NavigationItem[];\n  permission?: string;\n  badge?: number;\n  active?: boolean;\n  disabled?: boolean;\n  workspaceContext?: 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n}\n\nexport interface WorkspaceNavProps {\n  workspace: Workspace;\n  context: 'consultant' | 'client' | 'admin' | 'expert' | 'tool-creator' | 'founder' | 'neutral';\n  user: User;\n  permissions: string[];\n  features: FeatureToggle[];\n  onNavigate?: (path: string) => void;\n  onWorkspaceChange?: (workspace: Workspace) => void;\n  responsive?: boolean;\n  collapsed?: boolean;\n  className?: string;\n}\n\n/**\n * WorkspaceNav Component\n *\n * A sophisticated navigation component that adapts to different workspace contexts,\n * providing context-aware navigation items, permission-based filtering, and\n * workspace-specific features.\n */\nexport const WorkspaceNav: React.FC<WorkspaceNavProps> = ({\n  workspace,\n  context = 'neutral',\n  user,\n  permissions = [],\n  features = [],\n  onNavigate,\n  onWorkspaceChange,\n  responsive = true,\n  collapsed = false,\n  className,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n\n  // Filter navigation items based on permissions and workspace context\n  const filterNavigationItems = useCallback((items: NavigationItem[]): NavigationItem[] => {\n    return items.filter(item => {\n      // Check permission requirement\n      if (item.permission && !permissions.includes(item.permission)) {\n        return false;\n      }\n\n      // Check workspace context requirement\n      if (item.workspaceContext && item.workspaceContext !== context && item.workspaceContext !== 'neutral') {\n        return false;\n      }\n\n      // Check if item is disabled\n      if (item.disabled) {\n        return false;\n      }\n\n      return true;\n    }).map(item => ({\n      ...item,\n      children: item.children ? filterNavigationItems(item.children) : undefined,\n    }));\n  }, [permissions, context]);\n\n  // Get workspace-specific theme classes\n  const getWorkspaceTheme = useCallback(() => {\n    const baseClasses = 'transition-colors duration-200';\n\n    switch (context) {\n      case 'consultant':\n        return `${baseClasses} bg-blue-50 border-blue-200 text-blue-900`;\n      case 'client':\n        return `${baseClasses} bg-green-50 border-green-200 text-green-900`;\n      case 'admin':\n        return `${baseClasses} bg-gray-50 border-gray-200 text-gray-900`;\n      case 'expert':\n        return `${baseClasses} bg-purple-50 border-purple-200 text-purple-900`;\n      case 'tool-creator':\n        return `${baseClasses} bg-orange-50 border-orange-200 text-orange-900`;\n      case 'founder':\n        return `${baseClasses} bg-amber-50 border-amber-200 text-amber-900`;\n      default:\n        return `${baseClasses} bg-white border-gray-200 text-gray-900`;\n    }\n  }, [context]);\n\n  // Toggle expanded state for navigation items with children\n  const toggleExpanded = useCallback((itemId: string) => {\n    setExpandedItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Handle navigation item click\n  const handleItemClick = useCallback((item: NavigationItem) => {\n    if (item.children && item.children.length > 0) {\n      toggleExpanded(item.id);\n    } else if (item.path && onNavigate) {\n      onNavigate(item.path);\n    }\n  }, [onNavigate, toggleExpanded]);\n\n  // Render navigation item\n  const renderNavigationItem = useCallback((item: NavigationItem, level: number = 0) => {\n    const hasChildren = item.children && item.children.length > 0;\n    const isExpanded = expandedItems.has(item.id);\n    const filteredChildren = hasChildren ? filterNavigationItems(item.children!) : [];\n\n    return (\n      <div key={item.id} className=\"w-full\">\n        <button\n          onClick={() => handleItemClick(item)}\n          className={cn(\n            'w-full flex items-center justify-between px-3 py-2 text-sm font-medium rounded-md transition-colors duration-200',\n            'hover:bg-opacity-80 focus:outline-none focus:ring-2 focus:ring-offset-2',\n            level > 0 && 'ml-4 text-xs',\n            item.active && 'bg-opacity-100 font-semibold',\n            !item.active && 'hover:bg-gray-100',\n            collapsed && level === 0 && 'justify-center px-2'\n          )}\n          style={{ paddingLeft: collapsed ? undefined : `${0.75 + level * 1}rem` }}\n          aria-expanded={hasChildren ? isExpanded : undefined}\n          aria-label={item.label}\n        >\n          <div className=\"flex items-center space-x-2\">\n            {item.icon && (\n              <span className=\"flex-shrink-0 w-4 h-4\" aria-hidden=\"true\">\n                {/* Icon would be rendered here */}\n                <div className=\"w-4 h-4 bg-current opacity-60 rounded-sm\" />\n              </span>\n            )}\n            {!collapsed && (\n              <span className=\"truncate\">{item.label}</span>\n            )}\n          </div>\n\n          {!collapsed && (\n            <div className=\"flex items-center space-x-1\">\n              {item.badge && item.badge > 0 && (\n                <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full\">\n                  {item.badge > 99 ? '99+' : item.badge}\n                </span>\n              )}\n              {hasChildren && (\n                <span className={cn(\n                  'flex-shrink-0 w-4 h-4 transition-transform duration-200',\n                  isExpanded && 'transform rotate-90'\n                )}>\n                  <div className=\"w-0 h-0 border-l-4 border-l-current border-y-2 border-y-transparent\" />\n                </span>\n              )}\n            </div>\n          )}\n        </button>\n\n        {/* Render children if expanded */}\n        {hasChildren && isExpanded && !collapsed && (\n          <div className=\"mt-1 space-y-1\">\n            {filteredChildren.map(child => renderNavigationItem(child, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  }, [expandedItems, filterNavigationItems, handleItemClick, collapsed]);\n\n  // Get filtered navigation items\n  const filteredNavigation = filterNavigationItems(workspace.navigation);\n\n  // Get enabled features for current context\n  const enabledFeatures = features.filter(feature =>\n    feature.enabled &&\n    (!feature.permission || permissions.includes(feature.permission)) &&\n    (!feature.workspaceContext || feature.workspaceContext === context || feature.workspaceContext === 'neutral')\n  );\n\n  return (\n    <nav\n      className={cn(\n        'flex flex-col h-full border-r',\n        getWorkspaceTheme(),\n        responsive && 'lg:w-64',\n        collapsed ? 'w-16' : 'w-64',\n        className\n      )}\n      aria-label={`${workspace.name} navigation`}\n    >\n      {/* Workspace Header */}\n      <div className={cn(\n        'flex items-center justify-between p-4 border-b border-current border-opacity-20',\n        collapsed && 'justify-center px-2'\n      )}>\n        {!collapsed && (\n          <div className=\"flex items-center space-x-3\">\n            {workspace.branding?.logo && (\n              <img\n                src={workspace.branding.logo}\n                alt={`${workspace.name} logo`}\n                className=\"w-8 h-8 rounded\"\n              />\n            )}\n            <div className=\"flex flex-col\">\n              <h2 className=\"text-sm font-semibold truncate\">{workspace.name}</h2>\n              <p className=\"text-xs opacity-75 capitalize\">{workspace.type}</p>\n            </div>\n          </div>\n        )}\n\n        {workspace.branding?.logo && collapsed && (\n          <img\n            src={workspace.branding.logo}\n            alt={`${workspace.name} logo`}\n            className=\"w-8 h-8 rounded\"\n          />\n        )}\n      </div>\n\n      {/* Navigation Items */}\n      <div className=\"flex-1 overflow-y-auto p-2 space-y-1\">\n        {filteredNavigation.map(item => renderNavigationItem(item))}\n      </div>\n\n      {/* Feature Toggles Section */}\n      {enabledFeatures.length > 0 && !collapsed && (\n        <div className=\"border-t border-current border-opacity-20 p-2\">\n          <h3 className=\"text-xs font-semibold uppercase tracking-wide opacity-75 mb-2\">\n            Features\n          </h3>\n          <div className=\"space-y-1\">\n            {enabledFeatures.map(feature => (\n              <div\n                key={feature.id}\n                className=\"flex items-center justify-between px-3 py-1 text-xs\"\n              >\n                <span className=\"truncate\">{feature.name}</span>\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* User Info */}\n      {!collapsed && (\n        <div className=\"border-t border-current border-opacity-20 p-4\">\n          <div className=\"flex items-center space-x-3\">\n            {user.avatar ? (\n              <img\n                src={user.avatar}\n                alt={user.name}\n                className=\"w-8 h-8 rounded-full\"\n              />\n            ) : (\n              <div className=\"w-8 h-8 bg-current bg-opacity-20 rounded-full flex items-center justify-center\">\n                <span className=\"text-xs font-semibold\">\n                  {user.name.charAt(0).toUpperCase()}\n                </span>\n              </div>\n            )}\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium truncate\">{user.name}</p>\n              <p className=\"text-xs opacity-75 truncate\">{user.role}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default WorkspaceNav;\n", "import { cn } from '@wheel/shared';\nimport React, { useCallback, useState } from 'react';\n\n// Types\nexport interface Client {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  company: string;\n  status: 'active' | 'pending' | 'inactive';\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  description?: string;\n  status: 'active' | 'completed' | 'on-hold' | 'cancelled';\n  progress: number;\n  dueDate?: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n}\n\nexport interface Notification {\n  id: string;\n  title: string;\n  message: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  read: boolean;\n  timestamp: string;\n}\n\nexport interface ClientNavProps {\n  client: Client;\n  projects: Project[];\n  currentProject?: Project;\n  onProjectChange?: (project: Project) => void;\n  onNavigate?: (path: string) => void;\n  permissions: string[];\n  responsive?: boolean;\n  notifications?: Notification[];\n  className?: string;\n}\n\n/**\n * ClientNav Component\n *\n * A simplified navigation component designed specifically for client workspaces.\n * Focuses on project communication, document access, and essential client features\n * with limited permission requirements.\n */\nexport const ClientNav: React.FC<ClientNavProps> = ({\n  client,\n  projects,\n  currentProject,\n  onProjectChange,\n  onNavigate,\n  permissions = [],\n  responsive = true,\n  notifications = [],\n  className,\n}) => {\n  const [activeSection, setActiveSection] = useState<string>('overview');\n\n  // Get unread notifications count\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  // Get active project or first project\n  const activeProject = currentProject || projects[0];\n\n  // Handle navigation\n  const handleNavigate = useCallback((path: string, section: string) => {\n    setActiveSection(section);\n    if (onNavigate) {\n      onNavigate(path);\n    }\n  }, [onNavigate]);\n\n  // Handle project change\n  const handleProjectChange = useCallback((project: Project) => {\n    if (onProjectChange) {\n      onProjectChange(project);\n    }\n  }, [onProjectChange]);\n\n  // Get project status color\n  const getProjectStatusColor = useCallback((status: Project['status']) => {\n    switch (status) {\n      case 'active':\n        return 'text-green-600 bg-green-100';\n      case 'completed':\n        return 'text-blue-600 bg-blue-100';\n      case 'on-hold':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'cancelled':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }, []);\n\n  // Get priority color\n  const getPriorityColor = useCallback((priority: Project['priority']) => {\n    switch (priority) {\n      case 'urgent':\n        return 'text-red-600';\n      case 'high':\n        return 'text-orange-600';\n      case 'medium':\n        return 'text-yellow-600';\n      case 'low':\n        return 'text-green-600';\n      default:\n        return 'text-gray-600';\n    }\n  }, []);\n\n  // Navigation items for client workspace\n  const navigationItems = [\n    {\n      id: 'overview',\n      label: 'Project Overview',\n      icon: 'home',\n      path: '/overview',\n      description: 'View project status and updates',\n    },\n    {\n      id: 'documents',\n      label: 'Documents',\n      icon: 'file',\n      path: '/documents',\n      description: 'Access project files and deliverables',\n      badge: activeProject ? Math.floor(Math.random() * 10) + 1 : 0,\n    },\n    {\n      id: 'communications',\n      label: 'Messages',\n      icon: 'message',\n      path: '/messages',\n      description: 'Communicate with your consultant',\n      badge: unreadCount,\n    },\n    {\n      id: 'timeline',\n      label: 'Timeline',\n      icon: 'calendar',\n      path: '/timeline',\n      description: 'View project milestones and deadlines',\n    },\n    {\n      id: 'billing',\n      label: 'Billing',\n      icon: 'credit-card',\n      path: '/billing',\n      description: 'View invoices and payment history',\n      permission: 'billing',\n    },\n    {\n      id: 'feedback',\n      label: 'Feedback',\n      icon: 'star',\n      path: '/feedback',\n      description: 'Provide feedback and reviews',\n    },\n  ];\n\n  // Filter navigation items based on permissions\n  const filteredNavigation = navigationItems.filter(item =>\n    !item.permission || permissions.includes(item.permission)\n  );\n\n  return (\n    <nav\n      className={cn(\n        'flex flex-col h-full bg-green-50 border-r border-green-200 text-green-900',\n        responsive && 'lg:w-80',\n        'w-80',\n        className\n      )}\n      aria-label=\"Client navigation\"\n    >\n      {/* Client Header */}\n      <div className=\"p-6 border-b border-green-200\">\n        <div className=\"flex items-center space-x-4\">\n          {client.avatar ? (\n            <img\n              src={client.avatar}\n              alt={client.name}\n              className=\"w-12 h-12 rounded-full border-2 border-green-300\"\n            />\n          ) : (\n            <div className=\"w-12 h-12 bg-green-200 rounded-full flex items-center justify-center border-2 border-green-300\">\n              <span className=\"text-lg font-semibold text-green-700\">\n                {client.name.charAt(0).toUpperCase()}\n              </span>\n            </div>\n          )}\n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-lg font-semibold text-green-900 truncate\">\n              {client.name}\n            </h2>\n            <p className=\"text-sm text-green-700 truncate\">{client.company}</p>\n            <div className=\"flex items-center mt-1\">\n              <div className={cn(\n                'w-2 h-2 rounded-full mr-2',\n                client.status === 'active' ? 'bg-green-500' :\n                client.status === 'pending' ? 'bg-yellow-500' : 'bg-gray-400'\n              )} />\n              <span className=\"text-xs text-green-600 capitalize\">{client.status}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Project Selector */}\n      {projects.length > 0 && (\n        <div className=\"p-4 border-b border-green-200\">\n          <label className=\"block text-sm font-medium text-green-800 mb-2\">\n            Current Project\n          </label>\n          <select\n            value={activeProject?.id || ''}\n            onChange={(e) => {\n              const project = projects.find(p => p.id === e.target.value);\n              if (project) {\n                handleProjectChange(project);\n              }\n            }}\n            className=\"w-full px-3 py-2 text-sm border border-green-300 rounded-md bg-white text-green-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n          >\n            {projects.map(project => (\n              <option key={project.id} value={project.id}>\n                {project.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Project Status */}\n          {activeProject && (\n            <div className=\"mt-3 p-3 bg-white rounded-md border border-green-200\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className={cn(\n                  'inline-flex items-center px-2 py-1 rounded-full text-xs font-medium',\n                  getProjectStatusColor(activeProject.status)\n                )}>\n                  {activeProject.status.replace('-', ' ')}\n                </span>\n                <span className={cn(\n                  'text-xs font-medium',\n                  getPriorityColor(activeProject.priority)\n                )}>\n                  {activeProject.priority} priority\n                </span>\n              </div>\n\n              {/* Progress Bar */}\n              <div className=\"mb-2\">\n                <div className=\"flex justify-between text-xs text-green-700 mb-1\">\n                  <span>Progress</span>\n                  <span>{activeProject.progress}%</span>\n                </div>\n                <div className=\"w-full bg-green-200 rounded-full h-2\">\n                  <div\n                    className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n                    style={{ width: `${activeProject.progress}%` }}\n                  />\n                </div>\n              </div>\n\n              {activeProject.dueDate && (\n                <p className=\"text-xs text-green-600\">\n                  Due: {new Date(activeProject.dueDate).toLocaleDateString()}\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Navigation Items */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\n        {filteredNavigation.map(item => (\n          <button\n            key={item.id}\n            onClick={() => handleNavigate(item.path, item.id)}\n            className={cn(\n              'w-full flex items-center justify-between p-3 text-left rounded-lg transition-colors duration-200',\n              'hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2',\n              activeSection === item.id\n                ? 'bg-green-200 text-green-900 font-medium'\n                : 'text-green-800 hover:text-green-900'\n            )}\n            aria-label={item.label}\n          >\n            <div className=\"flex items-start space-x-3\">\n              <div className=\"flex-shrink-0 w-5 h-5 mt-0.5\">\n                {/* Icon placeholder */}\n                <div className=\"w-5 h-5 bg-current opacity-60 rounded-sm\" />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium truncate\">{item.label}</p>\n                <p className=\"text-xs opacity-75 truncate\">{item.description}</p>\n              </div>\n            </div>\n\n            {item.badge && item.badge > 0 && (\n              <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full ml-2\">\n                {item.badge > 99 ? '99+' : item.badge}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"border-t border-green-200 p-4\">\n        <h3 className=\"text-sm font-medium text-green-800 mb-3\">Quick Actions</h3>\n        <div className=\"space-y-2\">\n          <button\n            onClick={() => handleNavigate('/support', 'support')}\n            className=\"w-full flex items-center space-x-2 px-3 py-2 text-sm text-green-700 hover:text-green-900 hover:bg-green-100 rounded-md transition-colors duration-200\"\n          >\n            <div className=\"w-4 h-4 bg-current opacity-60 rounded-sm\" />\n            <span>Contact Support</span>\n          </button>\n\n          <button\n            onClick={() => handleNavigate('/help', 'help')}\n            className=\"w-full flex items-center space-x-2 px-3 py-2 text-sm text-green-700 hover:text-green-900 hover:bg-green-100 rounded-md transition-colors duration-200\"\n          >\n            <div className=\"w-4 h-4 bg-current opacity-60 rounded-sm\" />\n            <span>Help Center</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Notifications Summary */}\n      {notifications.length > 0 && (\n        <div className=\"border-t border-green-200 p-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm font-medium text-green-800\">Recent Updates</h3>\n            {unreadCount > 0 && (\n              <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full\">\n                {unreadCount}\n              </span>\n            )}\n          </div>\n          <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n            {notifications.slice(0, 3).map(notification => (\n              <div\n                key={notification.id}\n                className={cn(\n                  'p-2 rounded-md text-xs',\n                  notification.read ? 'bg-green-100 text-green-700' : 'bg-white text-green-800 border border-green-200'\n                )}\n              >\n                <p className=\"font-medium truncate\">{notification.title}</p>\n                <p className=\"opacity-75 truncate\">{notification.message}</p>\n              </div>\n            ))}\n          </div>\n          {notifications.length > 3 && (\n            <button\n              onClick={() => handleNavigate('/notifications', 'notifications')}\n              className=\"w-full mt-2 text-xs text-green-600 hover:text-green-800 text-center\"\n            >\n              View all notifications\n            </button>\n          )}\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default ClientNav;\n", "import { cn } from '@wheel/shared';\nimport React, { useCallback, useState } from 'react';\n\n// Types\nexport interface NavigationItem {\n  id: string;\n  label: string;\n  icon: string;\n  path: string;\n  description: string;\n  badge?: number;\n  permission?: string;\n}\n\nexport interface NavigationSection {\n  id: string;\n  title: string;\n  expandable?: boolean;\n  items: NavigationItem[];\n}\n\nexport interface Consultant {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  title: string;\n  specialties: string[];\n  status: 'active' | 'busy' | 'away' | 'offline';\n}\n\nexport interface Client {\n  id: string;\n  name: string;\n  company: string;\n  avatar?: string;\n  status: 'active' | 'pending' | 'inactive';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  lastActivity: string;\n}\n\nexport interface Workspace {\n  id: string;\n  name: string;\n  type: string;\n  clientId: string;\n  status: 'active' | 'paused' | 'completed';\n  revenue: number;\n  hoursLogged: number;\n}\n\nexport interface AnalyticsData {\n  totalRevenue: number;\n  activeClients: number;\n  completedProjects: number;\n  hoursThisMonth: number;\n  revenueGrowth: number;\n  clientSatisfaction: number;\n}\n\nexport interface ConsultantNavProps {\n  consultant: Consultant;\n  clients: Client[];\n  activeWorkspaces: Workspace[];\n  onClientSelect?: (client: Client) => void;\n  onWorkspaceSelect?: (workspace: Workspace) => void;\n  onNavigate?: (path: string) => void;\n  permissions: string[];\n  responsive?: boolean;\n  analytics?: AnalyticsData;\n  className?: string;\n}\n\n/**\n * ConsultantNav Component\n *\n * A comprehensive navigation component designed specifically for consultant workspaces.\n * Features advanced functionality including client management, billing integration,\n * analytics, and time tracking with sophisticated permission-based access control.\n */\nexport const ConsultantNav: React.FC<ConsultantNavProps> = ({\n  consultant,\n  clients,\n  activeWorkspaces,\n  onClientSelect,\n  onWorkspaceSelect,\n  onNavigate,\n  permissions = [],\n  responsive = true,\n  analytics,\n  className,\n}) => {\n  const [activeSection, setActiveSection] = useState<string>('dashboard');\n  const [expandedSections, setExpandedSections] = useState<Set<string>>(new Set(['clients']));\n\n  // Handle navigation\n  const handleNavigate = useCallback((path: string, section: string) => {\n    setActiveSection(section);\n    if (onNavigate) {\n      onNavigate(path);\n    }\n  }, [onNavigate]);\n\n  // Toggle section expansion\n  const toggleSection = useCallback((sectionId: string) => {\n    setExpandedSections(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sectionId)) {\n        newSet.delete(sectionId);\n      } else {\n        newSet.add(sectionId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Get consultant status color\n  const getStatusColor = useCallback((status: Consultant['status']) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-500';\n      case 'busy':\n        return 'bg-red-500';\n      case 'away':\n        return 'bg-yellow-500';\n      case 'offline':\n        return 'bg-gray-400';\n      default:\n        return 'bg-gray-400';\n    }\n  }, []);\n\n  // Get client priority color\n  const getClientPriorityColor = useCallback((priority: Client['priority']) => {\n    switch (priority) {\n      case 'urgent':\n        return 'text-red-600 bg-red-100';\n      case 'high':\n        return 'text-orange-600 bg-orange-100';\n      case 'medium':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'low':\n        return 'text-green-600 bg-green-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }, []);\n\n  // Navigation items for consultant workspace\n  const navigationSections: NavigationSection[] = [\n    {\n      id: 'main',\n      title: 'Main',\n      items: [\n        {\n          id: 'dashboard',\n          label: 'Dashboard',\n          icon: 'dashboard',\n          path: '/dashboard',\n          description: 'Overview and key metrics',\n        },\n        {\n          id: 'calendar',\n          label: 'Calendar',\n          icon: 'calendar',\n          path: '/calendar',\n          description: 'Schedule and appointments',\n          badge: 3, // Upcoming appointments\n        },\n        {\n          id: 'tasks',\n          label: 'Tasks',\n          icon: 'check-square',\n          path: '/tasks',\n          description: 'Action items and to-dos',\n          badge: 8, // Pending tasks\n        },\n      ],\n    },\n    {\n      id: 'clients',\n      title: 'Client Management',\n      expandable: true,\n      items: [\n        {\n          id: 'clients-overview',\n          label: 'All Clients',\n          icon: 'users',\n          path: '/clients',\n          description: 'Manage client relationships',\n          badge: clients.length,\n        },\n        {\n          id: 'active-projects',\n          label: 'Active Projects',\n          icon: 'folder',\n          path: '/projects/active',\n          description: 'Current project work',\n          badge: activeWorkspaces.length,\n        },\n        {\n          id: 'proposals',\n          label: 'Proposals',\n          icon: 'file-text',\n          path: '/proposals',\n          description: 'Pending and sent proposals',\n          permission: 'proposals',\n        },\n        {\n          id: 'contracts',\n          label: 'Contracts',\n          icon: 'file-signature',\n          path: '/contracts',\n          description: 'Client agreements',\n          permission: 'contracts',\n        },\n      ],\n    },\n    {\n      id: 'business',\n      title: 'Business Operations',\n      expandable: true,\n      items: [\n        {\n          id: 'billing',\n          label: 'Billing & Invoices',\n          icon: 'credit-card',\n          path: '/billing',\n          description: 'Financial management',\n          permission: 'billing',\n          badge: 2, // Pending invoices\n        },\n        {\n          id: 'time-tracking',\n          label: 'Time Tracking',\n          icon: 'clock',\n          path: '/time',\n          description: 'Log and manage time',\n          permission: 'time-tracking',\n        },\n        {\n          id: 'analytics',\n          label: 'Analytics',\n          icon: 'chart',\n          path: '/analytics',\n          description: 'Performance insights',\n          permission: 'analytics',\n        },\n        {\n          id: 'reports',\n          label: 'Reports',\n          icon: 'bar-chart',\n          path: '/reports',\n          description: 'Business reports',\n          permission: 'reports',\n        },\n      ],\n    },\n    {\n      id: 'tools',\n      title: 'Tools & Resources',\n      expandable: true,\n      items: [\n        {\n          id: 'knowledge-base',\n          label: 'Knowledge Base',\n          icon: 'book',\n          path: '/knowledge',\n          description: 'Resources and documentation',\n        },\n        {\n          id: 'templates',\n          label: 'Templates',\n          icon: 'layout',\n          path: '/templates',\n          description: 'Reusable templates',\n        },\n        {\n          id: 'integrations',\n          label: 'Integrations',\n          icon: 'link',\n          path: '/integrations',\n          description: 'Connected services',\n          permission: 'integrations',\n        },\n      ],\n    },\n  ];\n\n  // Filter navigation items based on permissions\n  const filteredSections = navigationSections.map(section => ({\n    ...section,\n    items: section.items.filter(item =>\n      !item.permission || permissions.includes(item.permission)\n    ),\n  })).filter(section => section.items.length > 0);\n\n  return (\n    <nav\n      className={cn(\n        'flex flex-col h-full bg-blue-50 border-r border-blue-200 text-blue-900',\n        responsive && 'lg:w-80',\n        'w-80',\n        className\n      )}\n      aria-label=\"Consultant navigation\"\n    >\n      {/* Consultant Header */}\n      <div className=\"p-6 border-b border-blue-200\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"relative\">\n            {consultant.avatar ? (\n              <img\n                src={consultant.avatar}\n                alt={consultant.name}\n                className=\"w-12 h-12 rounded-full border-2 border-blue-300\"\n              />\n            ) : (\n              <div className=\"w-12 h-12 bg-blue-200 rounded-full flex items-center justify-center border-2 border-blue-300\">\n                <span className=\"text-lg font-semibold text-blue-700\">\n                  {consultant.name.charAt(0).toUpperCase()}\n                </span>\n              </div>\n            )}\n            <div className={cn(\n              'absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-white',\n              getStatusColor(consultant.status)\n            )} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-lg font-semibold text-blue-900 truncate\">\n              {consultant.name}\n            </h2>\n            <p className=\"text-sm text-blue-700 truncate\">{consultant.title}</p>\n            <div className=\"flex flex-wrap gap-1 mt-1\">\n              {consultant.specialties.slice(0, 2).map(specialty => (\n                <span\n                  key={specialty}\n                  className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\"\n                >\n                  {specialty}\n                </span>\n              ))}\n              {consultant.specialties.length > 2 && (\n                <span className=\"text-xs text-blue-600\">\n                  +{consultant.specialties.length - 2} more\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      {analytics && (\n        <div className=\"p-4 border-b border-blue-200\">\n          <h3 className=\"text-sm font-medium text-blue-800 mb-3\">Quick Stats</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div className=\"bg-white p-3 rounded-md border border-blue-200\">\n              <p className=\"text-xs text-blue-600\">Active Clients</p>\n              <p className=\"text-lg font-semibold text-blue-900\">{analytics.activeClients}</p>\n            </div>\n            <div className=\"bg-white p-3 rounded-md border border-blue-200\">\n              <p className=\"text-xs text-blue-600\">This Month</p>\n              <p className=\"text-lg font-semibold text-blue-900\">{analytics.hoursThisMonth}h</p>\n            </div>\n            <div className=\"bg-white p-3 rounded-md border border-blue-200\">\n              <p className=\"text-xs text-blue-600\">Revenue</p>\n              <p className=\"text-lg font-semibold text-blue-900\">\n                ${analytics.totalRevenue.toLocaleString()}\n              </p>\n            </div>\n            <div className=\"bg-white p-3 rounded-md border border-blue-200\">\n              <p className=\"text-xs text-blue-600\">Satisfaction</p>\n              <p className=\"text-lg font-semibold text-blue-900\">{analytics.clientSatisfaction}%</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Navigation Sections */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-6\">\n        {filteredSections.map(section => (\n          <div key={section.id}>\n            {section.expandable ? (\n              <button\n                onClick={() => toggleSection(section.id)}\n                className=\"w-full flex items-center justify-between mb-3 text-sm font-medium text-blue-800 hover:text-blue-900\"\n              >\n                <span>{section.title}</span>\n                <span className={cn(\n                  'w-4 h-4 transition-transform duration-200',\n                  expandedSections.has(section.id) && 'transform rotate-90'\n                )}>\n                  <div className=\"w-0 h-0 border-l-4 border-l-current border-y-2 border-y-transparent\" />\n                </span>\n              </button>\n            ) : (\n              <h3 className=\"text-sm font-medium text-blue-800 mb-3\">{section.title}</h3>\n            )}\n\n            {(!section.expandable || expandedSections.has(section.id)) && (\n              <div className=\"space-y-1\">\n                {section.items.map(item => (\n                  <button\n                    key={item.id}\n                    onClick={() => handleNavigate(item.path, item.id)}\n                    className={cn(\n                      'w-full flex items-center justify-between p-3 text-left rounded-lg transition-colors duration-200',\n                      'hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n                      activeSection === item.id\n                        ? 'bg-blue-200 text-blue-900 font-medium'\n                        : 'text-blue-800 hover:text-blue-900'\n                    )}\n                    aria-label={item.label}\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      <div className=\"flex-shrink-0 w-5 h-5 mt-0.5\">\n                        {/* Icon placeholder */}\n                        <div className=\"w-5 h-5 bg-current opacity-60 rounded-sm\" />\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium truncate\">{item.label}</p>\n                        <p className=\"text-xs opacity-75 truncate\">{item.description}</p>\n                      </div>\n                    </div>\n\n                    {item.badge && item.badge > 0 && (\n                      <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full ml-2\">\n                        {item.badge > 99 ? '99+' : item.badge}\n                      </span>\n                    )}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Recent Clients */}\n      {clients.length > 0 && (\n        <div className=\"border-t border-blue-200 p-4\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-sm font-medium text-blue-800\">Recent Clients</h3>\n            <button\n              onClick={() => handleNavigate('/clients', 'clients-overview')}\n              className=\"text-xs text-blue-600 hover:text-blue-800\"\n            >\n              View all\n            </button>\n          </div>\n          <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n            {clients.slice(0, 4).map(client => (\n              <button\n                key={client.id}\n                onClick={() => onClientSelect && onClientSelect(client)}\n                className=\"w-full flex items-center space-x-3 p-2 text-left rounded-md hover:bg-blue-100 transition-colors duration-200\"\n              >\n                {client.avatar ? (\n                  <img\n                    src={client.avatar}\n                    alt={client.name}\n                    className=\"w-8 h-8 rounded-full\"\n                  />\n                ) : (\n                  <div className=\"w-8 h-8 bg-blue-200 rounded-full flex items-center justify-center\">\n                    <span className=\"text-xs font-semibold text-blue-700\">\n                      {client.name.charAt(0).toUpperCase()}\n                    </span>\n                  </div>\n                )}\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-blue-900 truncate\">{client.name}</p>\n                  <p className=\"text-xs text-blue-600 truncate\">{client.company}</p>\n                </div>\n                <span className={cn(\n                  'inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium',\n                  getClientPriorityColor(client.priority)\n                )}>\n                  {client.priority}\n                </span>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Active Workspaces */}\n      {activeWorkspaces.length > 0 && (\n        <div className=\"border-t border-blue-200 p-4\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"text-sm font-medium text-blue-800\">Active Workspaces</h3>\n            <span className=\"text-xs text-blue-600\">{activeWorkspaces.length} active</span>\n          </div>\n          <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n            {activeWorkspaces.slice(0, 3).map(workspace => (\n              <button\n                key={workspace.id}\n                onClick={() => onWorkspaceSelect && onWorkspaceSelect(workspace)}\n                className=\"w-full flex items-center justify-between p-2 text-left rounded-md hover:bg-blue-100 transition-colors duration-200\"\n              >\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-blue-900 truncate\">{workspace.name}</p>\n                  <p className=\"text-xs text-blue-600\">{workspace.hoursLogged}h logged</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-xs font-medium text-blue-900\">\n                    ${workspace.revenue.toLocaleString()}\n                  </p>\n                  <div className={cn(\n                    'w-2 h-2 rounded-full',\n                    workspace.status === 'active' ? 'bg-green-500' :\n                    workspace.status === 'paused' ? 'bg-yellow-500' : 'bg-gray-400'\n                  )} />\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default ConsultantNav;\n", "import { cn } from '@wheel/shared';\nimport { Icon } from '@wheel/ui';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nexport interface NavigationItem {\n  id: string;\n  label: string;\n  icon?: string;\n  path?: string;\n  children?: NavigationItem[];\n  permission?: string;\n  badge?: number;\n  active?: boolean;\n  disabled?: boolean;\n  workspaceContext?: 'consultant' | 'client' | 'admin' | 'neutral';\n}\n\nexport interface SideNavigationProps {\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  items: NavigationItem[];\n  currentPath?: string;\n  onItemClick?: (item: NavigationItem) => void;\n  collapsible?: boolean;\n  defaultCollapsed?: boolean;\n  onCollapseChange?: (collapsed: boolean) => void;\n  permissions?: string[];\n  responsive?: boolean;\n  className?: string;\n}\n\nconst SideNavigation: React.FC<SideNavigationProps> = ({\n  context = 'neutral',\n  items,\n  currentPath,\n  onItemClick,\n  collapsible = true,\n  defaultCollapsed = false,\n  onCollapseChange,\n  permissions = [],\n  responsive = true,\n  className,\n}) => {\n  const [collapsed, setCollapsed] = useState(defaultCollapsed);\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n\n  // Handle collapse state changes\n  const handleCollapseToggle = useCallback(() => {\n    const newCollapsed = !collapsed;\n    setCollapsed(newCollapsed);\n    onCollapseChange?.(newCollapsed);\n  }, [collapsed, onCollapseChange]);\n\n  // Handle item expansion\n  const handleItemExpand = useCallback((itemId: string) => {\n    setExpandedItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Filter items based on permissions and workspace context\n  const filterItems = useCallback((items: NavigationItem[]): NavigationItem[] => {\n    return items.filter(item => {\n      // Check permission\n      if (item.permission && !permissions.includes(item.permission)) {\n        return false;\n      }\n\n      // Check workspace context\n      if (item.workspaceContext && item.workspaceContext !== context) {\n        return false;\n      }\n\n      return true;\n    }).map(item => ({\n      ...item,\n      children: item.children ? filterItems(item.children) : undefined,\n    }));\n  }, [permissions, context]);\n\n  const filteredItems = filterItems(items);\n\n  // Handle item click\n  const handleItemClick = useCallback((item: NavigationItem, event: React.MouseEvent) => {\n    event.preventDefault();\n\n    if (item.disabled) return;\n\n    // If item has children, toggle expansion\n    if (item.children && item.children.length > 0) {\n      handleItemExpand(item.id);\n      return;\n    }\n\n    onItemClick?.(item);\n  }, [onItemClick, handleItemExpand]);\n\n  // Check if item is active\n  const isItemActive = useCallback((item: NavigationItem): boolean => {\n    if (item.active) return true;\n    if (currentPath && item.path) {\n      return currentPath === item.path || currentPath.startsWith(item.path + '/');\n    }\n    return false;\n  }, [currentPath]);\n\n  // Render navigation item\n  const renderNavigationItem = useCallback((item: NavigationItem, level: number = 0) => {\n    const isActive = isItemActive(item);\n    const isExpanded = expandedItems.has(item.id);\n    const hasChildren = item.children && item.children.length > 0;\n\n    return (\n      <div key={item.id} className=\"navigation-item\">\n        <button\n          onClick={(e) => handleItemClick(item, e)}\n          disabled={item.disabled}\n          className={cn(\n            'w-full flex items-center gap-3 px-3 py-2 text-left transition-colors duration-200',\n            'hover:bg-gray-100 dark:hover:bg-gray-800',\n            'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-inset',\n            {\n              'bg-blue-50 text-blue-700 border-r-2 border-blue-700 dark:bg-blue-900/20 dark:text-blue-300': isActive,\n              'text-gray-700 dark:text-gray-300': !isActive && !item.disabled,\n              'text-gray-400 dark:text-gray-600 cursor-not-allowed': item.disabled,\n              'pl-6': level > 0,\n              'pl-9': level > 1,\n            },\n            // Workspace context styling\n            {\n              'border-l-4 border-l-blue-500': context === 'consultant' && isActive,\n              'border-l-4 border-l-green-500': context === 'client' && isActive,\n              'border-l-4 border-l-purple-500': context === 'admin' && isActive,\n            }\n          )}\n          aria-expanded={hasChildren ? isExpanded : undefined}\n          aria-current={isActive ? 'page' : undefined}\n        >\n          {/* Icon */}\n          {item.icon && !collapsed && (\n            <Icon\n              name={item.icon as any}\n              size=\"sm\"\n              className={cn(\n                'flex-shrink-0',\n                {\n                  'text-blue-700 dark:text-blue-300': isActive,\n                  'text-gray-500 dark:text-gray-400': !isActive,\n                }\n              )}\n            />\n          )}\n\n          {/* Collapsed state - show only icon */}\n          {collapsed && item.icon && (\n            <Icon\n              name={item.icon as any}\n              size=\"sm\"\n              className={cn(\n                'flex-shrink-0 mx-auto',\n                {\n                  'text-blue-700 dark:text-blue-300': isActive,\n                  'text-gray-500 dark:text-gray-400': !isActive,\n                }\n              )}\n            />\n          )}\n\n          {/* Label */}\n          {!collapsed && (\n            <>\n              <span className=\"flex-1 truncate\">{item.label}</span>\n\n              {/* Badge */}\n              {item.badge && item.badge > 0 && (\n                <span className={cn(\n                  'inline-flex items-center justify-center px-2 py-1 text-xs font-medium rounded-full',\n                  {\n                    'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200': isActive,\n                    'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200': !isActive,\n                  }\n                )}>\n                  {item.badge > 99 ? '99+' : item.badge}\n                </span>\n              )}\n\n              {/* Expand/Collapse indicator */}\n              {hasChildren && (\n                <Icon\n                  name={isExpanded ? 'ChevronDown' : 'ChevronRight'}\n                  size=\"sm\"\n                  className=\"flex-shrink-0 text-gray-400\"\n                />\n              )}\n            </>\n          )}\n        </button>\n\n        {/* Children */}\n        {hasChildren && isExpanded && !collapsed && (\n          <div className=\"ml-3 border-l border-gray-200 dark:border-gray-700\">\n            {item.children!.map(child => renderNavigationItem(child, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  }, [collapsed, expandedItems, handleItemClick, isItemActive, context]);\n\n  // Responsive behavior\n  useEffect(() => {\n    if (!responsive) return;\n\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setCollapsed(true);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Check initial size\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [responsive]);\n\n  return (\n    <nav\n      className={cn(\n        'flex flex-col bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700',\n        'transition-all duration-300 ease-in-out',\n        {\n          'w-64': !collapsed,\n          'w-16': collapsed,\n        },\n        // Workspace context styling\n        {\n          'border-r-blue-200 dark:border-r-blue-800': context === 'consultant',\n          'border-r-green-200 dark:border-r-green-800': context === 'client',\n          'border-r-purple-200 dark:border-r-purple-800': context === 'admin',\n        },\n        className\n      )}\n      role=\"navigation\"\n      aria-label=\"Side navigation\"\n    >\n      {/* Header with collapse toggle */}\n      {collapsible && (\n        <div className=\"flex items-center justify-between p-3 border-b border-gray-200 dark:border-gray-700\">\n          {!collapsed && (\n            <h2 className=\"text-sm font-semibold text-gray-900 dark:text-gray-100 truncate\">\n              Navigation\n            </h2>\n          )}\n          <button\n            onClick={handleCollapseToggle}\n            className={cn(\n              'p-1 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800',\n              'focus:outline-none focus:ring-2 focus:ring-blue-500',\n              {\n                'mx-auto': collapsed,\n              }\n            )}\n            aria-label={collapsed ? 'Expand navigation' : 'Collapse navigation'}\n          >\n            <Icon\n              name={collapsed ? 'ChevronRight' : 'ChevronLeft'}\n              size=\"sm\"\n              className=\"text-gray-500 dark:text-gray-400\"\n            />\n          </button>\n        </div>\n      )}\n\n      {/* Navigation items */}\n      <div className=\"flex-1 overflow-y-auto py-2\">\n        {filteredItems.map(item => renderNavigationItem(item))}\n      </div>\n\n      {/* Footer */}\n      <div className=\"border-t border-gray-200 dark:border-gray-700 p-3\">\n        {!collapsed ? (\n          <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n            {context.charAt(0).toUpperCase() + context.slice(1)} Workspace\n          </div>\n        ) : (\n          <div className=\"w-2 h-2 rounded-full bg-gray-400 mx-auto\" />\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default SideNavigation;\n", "import { cn } from '@wheel/shared';\nimport { Icon } from '@wheel/ui';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nexport interface NavigationItem {\n  id: string;\n  label: string;\n  icon?: string;\n  path?: string;\n  children?: NavigationItem[];\n  permission?: string;\n  badge?: number;\n  active?: boolean;\n  disabled?: boolean;\n  workspaceContext?: 'consultant' | 'client' | 'admin' | 'neutral';\n}\n\nexport interface Workspace {\n  id: string;\n  name: string;\n  type: 'consultant' | 'client' | 'admin';\n  permissions: string[];\n  branding?: {\n    primaryColor?: string;\n    logo?: string;\n  };\n}\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  role: string;\n}\n\nexport interface MobileNavProps {\n  context?: 'consultant' | 'client' | 'admin' | 'neutral';\n  items: NavigationItem[];\n  currentPath?: string;\n  onItemClick?: (item: NavigationItem) => void;\n  workspaces?: Workspace[];\n  currentWorkspace?: Workspace;\n  onWorkspaceChange?: (workspace: Workspace) => void;\n  user?: User;\n  bottomSheet?: boolean;\n  swipeGestures?: boolean;\n  isOpen?: boolean;\n  onToggle?: (open: boolean) => void;\n  className?: string;\n}\n\nconst MobileNav: React.FC<MobileNavProps> = ({\n  context = 'neutral',\n  items,\n  currentPath,\n  onItemClick,\n  workspaces = [],\n  currentWorkspace,\n  onWorkspaceChange,\n  user,\n  bottomSheet = false,\n  swipeGestures = true,\n  isOpen = false,\n  onToggle,\n  className,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n  const [showWorkspaceSwitcher, setShowWorkspaceSwitcher] = useState(false);\n  const [touchStart, setTouchStart] = useState<number | null>(null);\n  const [touchEnd, setTouchEnd] = useState<number | null>(null);\n\n  // Handle item expansion\n  const handleItemExpand = useCallback((itemId: string) => {\n    setExpandedItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Handle item click\n  const handleItemClick = useCallback((item: NavigationItem, event: React.MouseEvent) => {\n    event.preventDefault();\n\n    if (item.disabled) return;\n\n    // If item has children, toggle expansion\n    if (item.children && item.children.length > 0) {\n      handleItemExpand(item.id);\n      return;\n    }\n\n    onItemClick?.(item);\n    onToggle?.(false); // Close mobile nav after navigation\n  }, [onItemClick, handleItemExpand, onToggle]);\n\n  // Check if item is active\n  const isItemActive = useCallback((item: NavigationItem): boolean => {\n    if (item.active) return true;\n    if (currentPath && item.path) {\n      return currentPath === item.path || currentPath.startsWith(item.path + '/');\n    }\n    return false;\n  }, [currentPath]);\n\n  // Handle workspace change\n  const handleWorkspaceChange = useCallback((workspace: Workspace) => {\n    onWorkspaceChange?.(workspace);\n    setShowWorkspaceSwitcher(false);\n  }, [onWorkspaceChange]);\n\n  // Swipe gesture handling\n  const minSwipeDistance = 50;\n\n  const onTouchStart = useCallback((e: React.TouchEvent) => {\n    if (!swipeGestures) return;\n    setTouchEnd(null);\n    setTouchStart(e.targetTouches[0].clientX);\n  }, [swipeGestures]);\n\n  const onTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!swipeGestures) return;\n    setTouchEnd(e.targetTouches[0].clientX);\n  }, [swipeGestures]);\n\n  const onTouchEnd = useCallback(() => {\n    if (!swipeGestures || !touchStart || !touchEnd) return;\n\n    const distance = touchStart - touchEnd;\n    const isLeftSwipe = distance > minSwipeDistance;\n    const isRightSwipe = distance < -minSwipeDistance;\n\n    if (isLeftSwipe && isOpen) {\n      onToggle?.(false);\n    } else if (isRightSwipe && !isOpen) {\n      onToggle?.(true);\n    }\n  }, [swipeGestures, touchStart, touchEnd, isOpen, onToggle, minSwipeDistance]);\n\n  // Handle backdrop click\n  const handleBackdropClick = useCallback(() => {\n    onToggle?.(false);\n  }, [onToggle]);\n\n  // Prevent body scroll when mobile nav is open\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, [isOpen]);\n\n  // Render navigation item\n  const renderNavigationItem = useCallback((item: NavigationItem, level: number = 0) => {\n    const isActive = isItemActive(item);\n    const isExpanded = expandedItems.has(item.id);\n    const hasChildren = item.children && item.children.length > 0;\n\n    return (\n      <div key={item.id} className=\"navigation-item\">\n        <button\n          onClick={(e) => handleItemClick(item, e)}\n          disabled={item.disabled}\n          className={cn(\n            'w-full flex items-center gap-4 px-4 py-3 text-left transition-colors duration-200',\n            'hover:bg-gray-100 dark:hover:bg-gray-800',\n            'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-inset',\n            'text-base font-medium',\n            {\n              'bg-blue-50 text-blue-700 border-r-4 border-blue-700 dark:bg-blue-900/20 dark:text-blue-300': isActive,\n              'text-gray-700 dark:text-gray-300': !isActive && !item.disabled,\n              'text-gray-400 dark:text-gray-600 cursor-not-allowed': item.disabled,\n              'pl-8': level > 0,\n              'pl-12': level > 1,\n            },\n            // Workspace context styling\n            {\n              'border-r-blue-500': context === 'consultant' && isActive,\n              'border-r-green-500': context === 'client' && isActive,\n              'border-r-purple-500': context === 'admin' && isActive,\n            }\n          )}\n          aria-expanded={hasChildren ? isExpanded : undefined}\n          aria-current={isActive ? 'page' : undefined}\n        >\n          {/* Icon */}\n          {item.icon && (\n            <Icon\n              name={item.icon as any}\n              size=\"md\"\n              className={cn(\n                'flex-shrink-0',\n                {\n                  'text-blue-700 dark:text-blue-300': isActive,\n                  'text-gray-500 dark:text-gray-400': !isActive,\n                }\n              )}\n            />\n          )}\n\n          {/* Label */}\n          <span className=\"flex-1 truncate\">{item.label}</span>\n\n          {/* Badge */}\n          {item.badge && item.badge > 0 && (\n            <span className={cn(\n              'inline-flex items-center justify-center px-2 py-1 text-xs font-medium rounded-full',\n              {\n                'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200': isActive,\n                'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200': !isActive,\n              }\n            )}>\n              {item.badge > 99 ? '99+' : item.badge}\n            </span>\n          )}\n\n          {/* Expand/Collapse indicator */}\n          {hasChildren && (\n            <Icon\n              name={isExpanded ? 'ChevronDown' : 'ChevronRight'}\n              size=\"sm\"\n              className=\"flex-shrink-0 text-gray-400\"\n            />\n          )}\n        </button>\n\n        {/* Children */}\n        {hasChildren && isExpanded && (\n          <div className=\"border-l-2 border-gray-200 dark:border-gray-700 ml-6\">\n            {item.children!.map(child => renderNavigationItem(child, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  }, [expandedItems, handleItemClick, isItemActive, context]);\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\n        onClick={handleBackdropClick}\n        aria-hidden=\"true\"\n      />\n\n      {/* Mobile Navigation */}\n      <div\n        className={cn(\n          'fixed inset-y-0 left-0 z-50 w-80 max-w-sm bg-white dark:bg-gray-900',\n          'transform transition-transform duration-300 ease-in-out',\n          'flex flex-col shadow-xl',\n          {\n            'bottom-0 top-auto rounded-t-xl': bottomSheet,\n          },\n          // Workspace context styling\n          {\n            'border-r-2 border-r-blue-200 dark:border-r-blue-800': context === 'consultant',\n            'border-r-2 border-r-green-200 dark:border-r-green-800': context === 'client',\n            'border-r-2 border-r-purple-200 dark:border-r-purple-800': context === 'admin',\n          },\n          className\n        )}\n        onTouchStart={onTouchStart}\n        onTouchMove={onTouchMove}\n        onTouchEnd={onTouchEnd}\n        role=\"navigation\"\n        aria-label=\"Mobile navigation\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center gap-3\">\n            {/* Workspace indicator */}\n            <div className={cn(\n              'w-3 h-3 rounded-full',\n              {\n                'bg-blue-500': context === 'consultant',\n                'bg-green-500': context === 'client',\n                'bg-purple-500': context === 'admin',\n                'bg-gray-500': context === 'neutral',\n              }\n            )} />\n\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n              {currentWorkspace?.name || 'Navigation'}\n            </h2>\n          </div>\n\n          <button\n            onClick={() => onToggle?.(false)}\n            className=\"p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            aria-label=\"Close navigation\"\n          >\n            <Icon name=\"X\" size=\"sm\" className=\"text-gray-500 dark:text-gray-400\" />\n          </button>\n        </div>\n\n        {/* User info and workspace switcher */}\n        {(user || workspaces.length > 0) && (\n          <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n            {/* User info */}\n            {user && (\n              <div className=\"flex items-center gap-3 mb-3\">\n                <div className=\"w-8 h-8 rounded-full bg-gray-300 dark:bg-gray-600 flex items-center justify-center\">\n                  {user.avatar ? (\n                    <img src={user.avatar} alt={user.name} className=\"w-8 h-8 rounded-full\" />\n                  ) : (\n                    <Icon name=\"User\" size=\"sm\" className=\"text-gray-600 dark:text-gray-300\" />\n                  )}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">\n                    {user.name}\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                    {user.role}\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {/* Workspace switcher */}\n            {workspaces.length > 0 && (\n              <button\n                onClick={() => setShowWorkspaceSwitcher(!showWorkspaceSwitcher)}\n                className=\"w-full flex items-center justify-between p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                  Switch Workspace\n                </span>\n                <Icon\n                  name={showWorkspaceSwitcher ? 'ChevronUp' : 'ChevronDown'}\n                  size=\"sm\"\n                  className=\"text-gray-400\"\n                />\n              </button>\n            )}\n\n            {/* Workspace list */}\n            {showWorkspaceSwitcher && workspaces.length > 0 && (\n              <div className=\"mt-2 space-y-1\">\n                {workspaces.map(workspace => (\n                  <button\n                    key={workspace.id}\n                    onClick={() => handleWorkspaceChange(workspace)}\n                    className={cn(\n                      'w-full flex items-center gap-3 p-2 rounded-md text-left transition-colors',\n                      'hover:bg-gray-100 dark:hover:bg-gray-800',\n                      'focus:outline-none focus:ring-2 focus:ring-blue-500',\n                      {\n                        'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300':\n                          currentWorkspace?.id === workspace.id,\n                        'text-gray-700 dark:text-gray-300': currentWorkspace?.id !== workspace.id,\n                      }\n                    )}\n                  >\n                    <div className={cn(\n                      'w-2 h-2 rounded-full',\n                      {\n                        'bg-blue-500': workspace.type === 'consultant',\n                        'bg-green-500': workspace.type === 'client',\n                        'bg-purple-500': workspace.type === 'admin',\n                      }\n                    )} />\n                    <span className=\"text-sm font-medium truncate\">{workspace.name}</span>\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Navigation items */}\n        <div className=\"flex-1 overflow-y-auto py-2\">\n          {items.map(item => renderNavigationItem(item))}\n        </div>\n\n        {/* Footer */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n            {context.charAt(0).toUpperCase() + context.slice(1)} Workspace\n          </div>\n          {swipeGestures && (\n            <div className=\"text-xs text-gray-400 dark:text-gray-500 text-center mt-1\">\n              Swipe left to close\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MobileNav;\n", "import { Avatar, Button, EmptyState, Spinner } from '@wheel/ui';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Activity, ActivityFeedProps, ActivityFilter } from './types';\nimport { getWorkspaceTheme } from './utils';\n\nexport const ActivityFeed: React.FC<ActivityFeedProps> = ({\n  activities,\n  loading = false,\n  context = 'neutral',\n  permissions = [],\n  grouped = false,\n  onActivityClick,\n  onUserClick,\n  realTimeUpdates = false,\n  onNewActivity,\n  userFilters = [],\n  typeFilters = [],\n  onFilterChange,\n  infiniteScroll = false,\n  onLoadMore,\n  hasMore = false,\n  maxHeight,\n  showAvatars = true,\n  showTimestamps = true,\n  className = '',\n  style,\n}) => {\n  // State management\n  const [activeFilters, setActiveFilters] = useState<ActivityFilter>({});\n\n  // Get workspace theme\n  const theme = getWorkspaceTheme(context);\n\n  // Filter activities based on active filters\n  const filteredActivities = useMemo(() => {\n    let filtered = activities;\n\n    // Apply user filters\n    if (activeFilters.users && activeFilters.users.length > 0) {\n      filtered = filtered.filter(activity =>\n        activeFilters.users!.includes(activity.user.id)\n      );\n    }\n\n    // Apply type filters\n    if (activeFilters.types && activeFilters.types.length > 0) {\n      filtered = filtered.filter(activity =>\n        activeFilters.types!.includes(activity.type)\n      );\n    }\n\n    // Apply date range filter\n    if (activeFilters.dateRange) {\n      filtered = filtered.filter(activity => {\n        const activityDate = new Date(activity.timestamp);\n        return activityDate >= activeFilters.dateRange!.start &&\n               activityDate <= activeFilters.dateRange!.end;\n      });\n    }\n\n    // Apply unread filter\n    if (activeFilters.unreadOnly) {\n      filtered = filtered.filter(activity => !activity.read);\n    }\n\n    return filtered;\n  }, [activities, activeFilters]);\n\n  // Group activities if needed\n  const groupedActivities = useMemo(() => {\n    if (!grouped) {\n      return { 'All Activities': filteredActivities };\n    }\n\n    const groups: Record<string, Activity[]> = {};\n\n    filteredActivities.forEach(activity => {\n      const date = new Date(activity.timestamp);\n      const today = new Date();\n      const yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - 1);\n\n      let groupKey: string;\n      if (date.toDateString() === today.toDateString()) {\n        groupKey = 'Today';\n      } else if (date.toDateString() === yesterday.toDateString()) {\n        groupKey = 'Yesterday';\n      } else {\n        groupKey = date.toLocaleDateString();\n      }\n\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(activity);\n    });\n\n    // Sort groups by most recent\n    Object.keys(groups).forEach(key => {\n      groups[key].sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n    });\n\n    return groups;\n  }, [filteredActivities, grouped]);\n\n  // Event handlers\n  const handleFilterChange = useCallback((newFilters: ActivityFilter) => {\n    setActiveFilters(newFilters);\n    onFilterChange?.(newFilters);\n  }, [onFilterChange]);\n\n  const handleActivityClick = useCallback((activity: Activity) => {\n    onActivityClick?.(activity);\n  }, [onActivityClick]);\n\n  const handleUserClick = useCallback((user: Activity['user']) => {\n    onUserClick?.(user);\n  }, [onUserClick]);\n\n  // Real-time updates\n  React.useEffect(() => {\n    if (realTimeUpdates && onNewActivity) {\n      // This would typically connect to a WebSocket or polling mechanism\n      const handleNewActivity = (activity: Activity) => {\n        onNewActivity(activity);\n      };\n\n      // Return cleanup function\n      return () => {\n        // Cleanup WebSocket connection or polling\n      };\n    }\n  }, [realTimeUpdates, onNewActivity]);\n\n  // Render functions\n  const renderActivityIcon = (activity: Activity) => {\n    // Default icon based on type\n    const typeIcons: Record<string, string> = {\n      create: '➕',\n      update: '✏️',\n      delete: '🗑️',\n      comment: '💬',\n      like: '👍',\n      share: '🔗',\n      view: '👁️',\n      download: '⬇️',\n      upload: '⬆️',\n      login: '🔑',\n      logout: '🚪',\n      error: '❌',\n      warning: '⚠️',\n      success: '✅',\n      info: 'ℹ️',\n    };\n\n    const typeColors: Record<string, string> = {\n      create: 'bg-green-500',\n      update: 'bg-blue-500',\n      delete: 'bg-red-500',\n      comment: 'bg-purple-500',\n      like: 'bg-pink-500',\n      share: 'bg-indigo-500',\n      view: 'bg-gray-500',\n      download: 'bg-teal-500',\n      upload: 'bg-orange-500',\n      login: 'bg-emerald-500',\n      logout: 'bg-slate-500',\n      error: 'bg-red-500',\n      warning: 'bg-yellow-500',\n      success: 'bg-green-500',\n      info: 'bg-blue-500',\n    };\n\n    return (\n      <div\n        className={`\n          w-8 h-8 rounded-full flex items-center justify-center text-white text-sm\n          ${typeColors[activity.type] || theme.primary}\n        `}\n      >\n        {typeIcons[activity.type] || '•'}\n      </div>\n    );\n  };\n\n  const formatTimestamp = (timestamp: Date) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n\n    return date.toLocaleDateString();\n  };\n\n  const renderActivity = (activity: Activity) => {\n    const canView = !activity.workspaceContext ||\n      activity.workspaceContext === context ||\n      permissions.includes('view_all_activities');\n\n    if (!canView) return null;\n\n    return (\n      <div\n        key={activity.id}\n        className={`\n          flex gap-3 p-3 rounded-lg transition-colors\n          ${onActivityClick ? 'cursor-pointer hover:bg-gray-50' : ''}\n          ${!activity.read ? 'bg-blue-50 border-l-4 border-blue-500' : ''}\n        `}\n        onClick={() => handleActivityClick(activity)}\n      >\n        {/* Activity icon */}\n        <div className=\"flex-shrink-0\">\n          {renderActivityIcon(activity)}\n        </div>\n\n        {/* Activity content */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between gap-2\">\n            <div className=\"flex-1 min-w-0\">\n              {/* Activity title */}\n              <p className=\"text-gray-900 text-sm font-medium\">\n                {activity.title}\n              </p>\n\n              {/* Activity description */}\n              {activity.description && (\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  {activity.description}\n                </p>\n              )}\n\n              {/* Activity metadata */}\n              <div className=\"flex items-center gap-3 mt-2 text-xs text-gray-500\">\n                {showTimestamps && (\n                  <span>{formatTimestamp(activity.timestamp)}</span>\n                )}\n\n                {showAvatars && activity.user && (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer hover:text-gray-700\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleUserClick(activity.user);\n                    }}\n                  >\n                    {activity.user.avatar && (\n                      <Avatar\n                        src={activity.user.avatar}\n                        alt={activity.user.name}\n                        size=\"xs\"\n                      />\n                    )}\n                    <span>{activity.user.name}</span>\n                    {activity.user.role && (\n                      <span className=\"text-gray-400\">({activity.user.role})</span>\n                    )}\n                  </div>\n                )}\n\n                <span className=\"capitalize\">\n                  {activity.type.replace(/_/g, ' ')}\n                </span>\n\n                {activity.target && (\n                  <span>\n                    → {activity.target.name}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Unread indicator */}\n            {!activity.read && (\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full flex-shrink-0 mt-1\" />\n            )}\n          </div>\n\n          {/* Activity metadata display */}\n          {activity.metadata && Object.keys(activity.metadata).length > 0 && (\n            <div className=\"mt-2 pt-2 border-t border-gray-100\">\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                {Object.entries(activity.metadata).slice(0, 4).map(([key, value]) => (\n                  <div key={key}>\n                    <span className=\"font-medium text-gray-600\">\n                      {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}:\n                    </span>\n                    <span className=\"ml-1 text-gray-900\">\n                      {typeof value === 'object' ? JSON.stringify(value) : String(value)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderGroup = (groupKey: string, groupActivities: Activity[]) => {\n    return (\n      <div key={groupKey} className=\"mb-4\">\n        {grouped && (\n          <div className=\"flex items-center justify-between mb-3 px-3\">\n            <h3 className=\"font-semibold text-gray-900 text-sm\">\n              {groupKey}\n            </h3>\n            <span className=\"text-xs text-gray-500\">\n              {groupActivities.length} activit{groupActivities.length !== 1 ? 'ies' : 'y'}\n            </span>\n          </div>\n        )}\n\n        <div className=\"space-y-1\">\n          {groupActivities.map(activity => renderActivity(activity))}\n        </div>\n      </div>\n    );\n  };\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <Spinner size=\"lg\" />\n        <span className=\"ml-2 text-gray-600\">Loading activities...</span>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (filteredActivities.length === 0) {\n    return (\n      <EmptyState\n        title=\"No activities found\"\n        description={\n          Object.keys(activeFilters).length > 0\n            ? \"No activities match your current filters.\"\n            : \"There are no activities to display.\"\n        }\n        actions={\n          Object.keys(activeFilters).length > 0 ? (\n            <Button onClick={() => handleFilterChange({})}>\n              Clear filters\n            </Button>\n          ) : undefined\n        }\n      />\n    );\n  }\n\n  return (\n    <div className={`${className}`} style={style}>\n      {/* Filters */}\n      {(userFilters.length > 0 || typeFilters.length > 0) && (\n        <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium text-gray-900 mb-2 text-sm\">Filters</h4>\n\n          <div className=\"space-y-2\">\n            {/* User filters */}\n            {userFilters.length > 0 && (\n              <div>\n                <span className=\"text-xs text-gray-600 mb-1 block\">Users:</span>\n                <div className=\"flex flex-wrap gap-1\">\n                  {userFilters.map((user) => (\n                    <Button\n                      key={user.id}\n                      variant={\n                        activeFilters.users?.includes(user.id) ? 'primary' : 'outline'\n                      }\n                      size=\"sm\"\n                      onClick={() => {\n                        const currentUsers = activeFilters.users || [];\n                        const isActive = currentUsers.includes(user.id);\n\n                        const newUsers = isActive\n                          ? currentUsers.filter(id => id !== user.id)\n                          : [...currentUsers, user.id];\n\n                        handleFilterChange({\n                          ...activeFilters,\n                          users: newUsers.length > 0 ? newUsers : undefined\n                        });\n                      }}\n                    >\n                      {user.name}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Type filters */}\n            {typeFilters.length > 0 && (\n              <div>\n                <span className=\"text-xs text-gray-600 mb-1 block\">Types:</span>\n                <div className=\"flex flex-wrap gap-1\">\n                  {typeFilters.map((type) => (\n                    <Button\n                      key={type}\n                      variant={\n                        activeFilters.types?.includes(type) ? 'primary' : 'outline'\n                      }\n                      size=\"sm\"\n                      onClick={() => {\n                        const currentTypes = activeFilters.types || [];\n                        const isActive = currentTypes.includes(type);\n\n                        const newTypes = isActive\n                          ? currentTypes.filter(t => t !== type)\n                          : [...currentTypes, type];\n\n                        handleFilterChange({\n                          ...activeFilters,\n                          types: newTypes.length > 0 ? newTypes : undefined\n                        });\n                      }}\n                    >\n                      {type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Unread filter */}\n            <div>\n              <Button\n                variant={activeFilters.unreadOnly ? 'primary' : 'outline'}\n                size=\"sm\"\n                onClick={() => {\n                  handleFilterChange({\n                    ...activeFilters,\n                    unreadOnly: !activeFilters.unreadOnly\n                  });\n                }}\n              >\n                Unread only\n              </Button>\n            </div>\n          </div>\n\n          {Object.keys(activeFilters).length > 0 && (\n            <div className=\"mt-2 pt-2 border-t border-gray-200\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => handleFilterChange({})}\n              >\n                Clear all filters\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Activity Feed */}\n      <div\n        className={`\n          bg-white border border-gray-200 rounded-lg\n          ${maxHeight ? 'overflow-y-auto' : ''}\n        `}\n        style={{ maxHeight }}\n      >\n        {Object.entries(groupedActivities).map(([groupKey, groupActivities]) =>\n          renderGroup(groupKey, groupActivities)\n        )}\n\n        {/* Infinite scroll trigger */}\n        {infiniteScroll && hasMore && (\n          <div className=\"p-4 text-center\">\n            <Button\n              variant=\"outline\"\n              onClick={onLoadMore}\n              disabled={loading}\n            >\n              {loading ? 'Loading...' : 'Load more'}\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Real-time indicator */}\n      {realTimeUpdates && (\n        <div className=\"mt-3 flex items-center justify-center text-xs text-gray-500\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse mr-2\" />\n          Live updates enabled\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ActivityFeed;\n", "import { FilterGroup, FilterRule, TableColumn, WorkspaceContext } from './types';\n\n// Workspace context utilities\nexport const getWorkspaceTheme = (context: WorkspaceContext = 'neutral') => {\n  const themes = {\n    consultant: {\n      primary: 'bg-blue-600 text-white',\n      secondary: 'bg-blue-50 text-blue-900 border-blue-200',\n      accent: 'text-blue-600',\n      hover: 'hover:bg-blue-50',\n    },\n    client: {\n      primary: 'bg-green-600 text-white',\n      secondary: 'bg-green-50 text-green-900 border-green-200',\n      accent: 'text-green-600',\n      hover: 'hover:bg-green-50',\n    },\n    admin: {\n      primary: 'bg-purple-600 text-white',\n      secondary: 'bg-purple-50 text-purple-900 border-purple-200',\n      accent: 'text-purple-600',\n      hover: 'hover:bg-purple-50',\n    },\n    expert: {\n      primary: 'bg-orange-600 text-white',\n      secondary: 'bg-orange-50 text-orange-900 border-orange-200',\n      accent: 'text-orange-600',\n      hover: 'hover:bg-orange-50',\n    },\n    'tool-creator': {\n      primary: 'bg-indigo-600 text-white',\n      secondary: 'bg-indigo-50 text-indigo-900 border-indigo-200',\n      accent: 'text-indigo-600',\n      hover: 'hover:bg-indigo-50',\n    },\n    founder: {\n      primary: 'bg-red-600 text-white',\n      secondary: 'bg-red-50 text-red-900 border-red-200',\n      accent: 'text-red-600',\n      hover: 'hover:bg-red-50',\n    },\n    neutral: {\n      primary: 'bg-gray-600 text-white',\n      secondary: 'bg-gray-50 text-gray-900 border-gray-200',\n      accent: 'text-gray-600',\n      hover: 'hover:bg-gray-50',\n    },\n  };\n\n  return themes[context];\n};\n\n// Permission checking utilities\nexport const hasPermission = (userPermissions: string[] = [], requiredPermission?: string): boolean => {\n  if (!requiredPermission) return true;\n  return userPermissions.includes(requiredPermission) || userPermissions.includes('*');\n};\n\nexport const filterColumnsByPermissions = <T>(\n  columns: TableColumn<T>[],\n  userPermissions: string[] = [],\n  context: WorkspaceContext = 'neutral'\n): TableColumn<T>[] => {\n  return columns.filter(column => {\n    // Check permission\n    if (!hasPermission(userPermissions, column.permission)) {\n      return false;\n    }\n\n    // Check workspace context\n    if (column.workspaceContext && !column.workspaceContext.includes(context)) {\n      return false;\n    }\n\n    // Check if column is hidden\n    if (column.hidden) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\n// Data sorting utilities\nexport const sortData = <T>(\n  data: T[],\n  field: string,\n  direction: 'asc' | 'desc'\n): T[] => {\n  return [...data].sort((a, b) => {\n    const aValue = getNestedValue(a, field);\n    const bValue = getNestedValue(b, field);\n\n    if (aValue === null || aValue === undefined) return direction === 'asc' ? 1 : -1;\n    if (bValue === null || bValue === undefined) return direction === 'asc' ? -1 : 1;\n\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return direction === 'asc'\n        ? aValue.localeCompare(bValue)\n        : bValue.localeCompare(aValue);\n    }\n\n    if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return direction === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n\n    if (aValue instanceof Date && bValue instanceof Date) {\n      return direction === 'asc'\n        ? aValue.getTime() - bValue.getTime()\n        : bValue.getTime() - aValue.getTime();\n    }\n\n    // Fallback to string comparison\n    const aStr = String(aValue);\n    const bStr = String(bValue);\n    return direction === 'asc'\n      ? aStr.localeCompare(bStr)\n      : bStr.localeCompare(aStr);\n  });\n};\n\n// Data filtering utilities\nexport const filterData = <T>(\n  data: T[],\n  filters: Record<string, any>,\n  searchTerm?: string\n): T[] => {\n  let filteredData = [...data];\n\n  // Apply search filter\n  if (searchTerm && searchTerm.trim()) {\n    const searchLower = searchTerm.toLowerCase();\n    filteredData = filteredData.filter(item =>\n      Object.values(item as any).some(value =>\n        String(value).toLowerCase().includes(searchLower)\n      )\n    );\n  }\n\n  // Apply column filters\n  Object.entries(filters).forEach(([field, filterValue]) => {\n    if (filterValue !== undefined && filterValue !== null && filterValue !== '') {\n      filteredData = filteredData.filter(item => {\n        const itemValue = getNestedValue(item, field);\n\n        if (Array.isArray(filterValue)) {\n          return filterValue.includes(itemValue);\n        }\n\n        if (typeof filterValue === 'string') {\n          return String(itemValue).toLowerCase().includes(filterValue.toLowerCase());\n        }\n\n        return itemValue === filterValue;\n      });\n    }\n  });\n\n  return filteredData;\n};\n\n// Advanced filter utilities\nexport const applyFilterGroup = <T>(data: T[], filterGroup: FilterGroup): T[] => {\n  return data.filter(item => evaluateFilterGroup(item, filterGroup));\n};\n\nconst evaluateFilterGroup = <T>(item: T, group: FilterGroup): boolean => {\n  const results = group.rules.map(rule => {\n    if ('logic' in rule) {\n      // It's a nested group\n      return evaluateFilterGroup(item, rule as FilterGroup);\n    } else {\n      // It's a filter rule\n      return evaluateFilterRule(item, rule as FilterRule);\n    }\n  });\n\n  return group.logic === 'and'\n    ? results.every(Boolean)\n    : results.some(Boolean);\n};\n\nconst evaluateFilterRule = <T>(item: T, rule: FilterRule): boolean => {\n  const itemValue = getNestedValue(item, rule.field);\n  const { operator, value } = rule;\n\n  switch (operator) {\n    case 'equals':\n      return itemValue === value;\n    case 'not_equals':\n      return itemValue !== value;\n    case 'contains':\n      return String(itemValue).toLowerCase().includes(String(value).toLowerCase());\n    case 'not_contains':\n      return !String(itemValue).toLowerCase().includes(String(value).toLowerCase());\n    case 'starts_with':\n      return String(itemValue).toLowerCase().startsWith(String(value).toLowerCase());\n    case 'ends_with':\n      return String(itemValue).toLowerCase().endsWith(String(value).toLowerCase());\n    case 'greater_than':\n      return Number(itemValue) > Number(value);\n    case 'less_than':\n      return Number(itemValue) < Number(value);\n    case 'between':\n      return Array.isArray(value) &&\n             Number(itemValue) >= Number(value[0]) &&\n             Number(itemValue) <= Number(value[1]);\n    case 'in':\n      return Array.isArray(value) && value.includes(itemValue);\n    case 'not_in':\n      return Array.isArray(value) && !value.includes(itemValue);\n    case 'is_null':\n      return itemValue === null || itemValue === undefined;\n    case 'is_not_null':\n      return itemValue !== null && itemValue !== undefined;\n    default:\n      return true;\n  }\n};\n\n// Utility functions\nexport const getNestedValue = (obj: any, path: string): any => {\n  return path.split('.').reduce((current, key) => current?.[key], obj);\n};\n\nexport const setNestedValue = (obj: any, path: string, value: any): void => {\n  const keys = path.split('.');\n  const lastKey = keys.pop()!;\n  const target = keys.reduce((current, key) => {\n    if (!(key in current)) current[key] = {};\n    return current[key];\n  }, obj);\n  target[lastKey] = value;\n};\n\n// Pagination utilities\nexport const paginateData = <T>(\n  data: T[],\n  page: number,\n  pageSize: number\n): { data: T[]; total: number; totalPages: number } => {\n  const startIndex = (page - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n\n  return {\n    data: data.slice(startIndex, endIndex),\n    total: data.length,\n    totalPages: Math.ceil(data.length / pageSize),\n  };\n};\n\n// Selection utilities\nexport const getRowKey = <T>(row: T, getRowKey?: (row: T) => string): string => {\n  if (getRowKey) return getRowKey(row);\n  if (typeof row === 'object' && row !== null && 'id' in row) {\n    return String((row as any).id);\n  }\n  return JSON.stringify(row);\n};\n\nexport const toggleSelection = (\n  selectedKeys: string[],\n  key: string,\n  type: 'checkbox' | 'radio' = 'checkbox'\n): string[] => {\n  if (type === 'radio') {\n    return [key];\n  }\n\n  const index = selectedKeys.indexOf(key);\n  if (index > -1) {\n    return selectedKeys.filter(k => k !== key);\n  } else {\n    return [...selectedKeys, key];\n  }\n};\n\n// Export utilities\nexport const exportToCSV = <T>(data: T[], columns: TableColumn<T>[], filename = 'export.csv'): void => {\n  const headers = columns.map(col => col.title);\n  const rows = data.map(row =>\n    columns.map(col => {\n      const value = getNestedValue(row, String(col.key));\n      return typeof value === 'string' ? `\"${value.replace(/\"/g, '\"\"')}\"` : String(value || '');\n    })\n  );\n\n  const csvContent = [headers, ...rows]\n    .map(row => row.join(','))\n    .join('\\n');\n\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n};\n\nexport const exportToJSON = <T>(data: T[], filename = 'export.json'): void => {\n  const jsonContent = JSON.stringify(data, null, 2);\n  const blob = new Blob([jsonContent], { type: 'application/json;charset=utf-8;' });\n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n};\n\n// Virtual scrolling utilities\nexport const calculateVirtualItems = (\n  totalItems: number,\n  itemHeight: number,\n  containerHeight: number,\n  scrollTop: number,\n  overscan = 5\n) => {\n  const visibleStart = Math.floor(scrollTop / itemHeight);\n  const visibleEnd = Math.min(\n    totalItems - 1,\n    Math.ceil((scrollTop + containerHeight) / itemHeight)\n  );\n\n  const start = Math.max(0, visibleStart - overscan);\n  const end = Math.min(totalItems - 1, visibleEnd + overscan);\n\n  return {\n    start,\n    end,\n    visibleStart,\n    visibleEnd,\n    totalHeight: totalItems * itemHeight,\n    offsetY: start * itemHeight,\n  };\n};\n\n// Accessibility utilities\nexport const getAriaSort = (\n  columnKey: string,\n  sortField?: string,\n  sortDirection?: 'asc' | 'desc'\n): 'ascending' | 'descending' | 'none' => {\n  if (sortField !== columnKey) return 'none';\n  return sortDirection === 'asc' ? 'ascending' : 'descending';\n};\n\n// Responsive utilities\nexport const getResponsiveColumns = (\n  columns: TableColumn[],\n  screenSize: 'sm' | 'md' | 'lg' | 'xl'\n): TableColumn[] => {\n  const priorities = {\n    sm: ['id', 'name', 'title', 'status'],\n    md: ['id', 'name', 'title', 'status', 'date', 'user'],\n    lg: ['id', 'name', 'title', 'status', 'date', 'user', 'description'],\n    xl: columns.map(col => String(col.key)),\n  };\n\n  const priorityFields = priorities[screenSize];\n\n  return columns.filter(col =>\n    priorityFields.includes(String(col.key)) ||\n    col.fixed === 'left' ||\n    col.fixed === 'right'\n  );\n};\n\n// Debounce utility for search and filters\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: NodeJS.Timeout;\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n// Format utilities\nexport const formatCellValue = (value: any, column: TableColumn): string => {\n  if (value === null || value === undefined) return '';\n\n  if (column.render) {\n    // If there's a custom render function, we can't format it as string\n    return String(value);\n  }\n\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  if (typeof value === 'number') {\n    return value.toLocaleString();\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n\n  return String(value);\n};\n", "import { EmptyState, Spinner } from '@wheel/ui';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { DataGridProps } from './types';\nimport {\n  calculateVirtualItems,\n  debounce,\n  filterData,\n  getRowKey,\n  getWorkspaceTheme,\n  paginateData,\n  toggleSelection\n} from './utils';\n\nexport interface CardGridProps<T = any> extends Omit<DataGridProps<T>, 'cardComponent'> {\n  // Card rendering\n  renderCard: (item: T, index: number, context?: string) => React.ReactNode;\n\n  // Grid layout\n  minCardWidth?: number;\n  maxCardWidth?: number;\n  aspectRatio?: number;\n\n  // Enhanced features\n  sortable?: boolean;\n  sortOptions?: Array<{\n    key: string;\n    label: string;\n    direction?: 'asc' | 'desc';\n  }>;\n  onSort?: (sortKey: string, direction: 'asc' | 'desc') => void;\n\n  // Drag and drop\n  draggable?: boolean;\n  onDragStart?: (item: T, index: number) => void;\n  onDragEnd?: (item: T, fromIndex: number, toIndex: number) => void;\n\n  // Masonry layout\n  masonry?: boolean;\n  masonryBreakpoints?: Record<number, number>;\n}\n\nexport const CardGrid = <T extends Record<string, any>>({\n  data,\n  loading = false,\n  context = 'neutral',\n  permissions = [],\n  columns = 'auto',\n  gap = 'md',\n  itemHeight = 'auto',\n  renderCard,\n  minCardWidth = 280,\n  maxCardWidth = 400,\n  aspectRatio,\n  pagination,\n  filtering,\n  selection,\n  virtualScrolling,\n  sortable = false,\n  sortOptions = [],\n  onSort,\n  draggable = false,\n  onDragStart,\n  onDragEnd,\n  masonry = false,\n  masonryBreakpoints,\n  onItemClick,\n  onItemDoubleClick,\n  infiniteScroll = false,\n  onLoadMore,\n  hasMore = false,\n  responsive = true,\n  className = '',\n  style,\n}: CardGridProps<T>) => {\n  // State management\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedKeys, setSelectedKeys] = useState<string[]>(selection?.selectedKeys || []);\n  const [currentPage, setCurrentPage] = useState(pagination?.page || 1);\n  const [pageSize, setPageSize] = useState(pagination?.pageSize || 12);\n  const [scrollTop, setScrollTop] = useState(0);\n  const [sortKey, setSortKey] = useState<string>('');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [draggedItem, setDraggedItem] = useState<{ item: T; index: number } | null>(null);\n\n  // Refs\n  const gridRef = useRef<HTMLDivElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  // Get workspace theme\n  const theme = getWorkspaceTheme(context);\n\n  // Debounced search handler\n  const debouncedSearch = useCallback(\n    debounce((term: string) => {\n      setSearchTerm(term);\n      setCurrentPage(1);\n      if (filtering?.onSearch) {\n        filtering.onSearch(term);\n      }\n    }, 300),\n    [filtering]\n  );\n\n  // Process data: filter, sort, paginate\n  const processedData = useMemo(() => {\n    let result = [...data];\n\n    // Apply filtering\n    if (filtering?.enabled !== false && searchTerm) {\n      result = filterData(result, {}, searchTerm);\n    }\n\n    // Apply sorting\n    if (sortKey && onSort) {\n      onSort(sortKey, sortDirection);\n    } else if (sortKey) {\n      result.sort((a, b) => {\n        const aValue = a[sortKey];\n        const bValue = b[sortKey];\n\n        if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n\n    // Apply pagination (if not using virtual scrolling or infinite scroll)\n    if (pagination?.enabled !== false && !virtualScrolling?.enabled && !infiniteScroll) {\n      const paginatedResult = paginateData(result, currentPage, pageSize);\n      return {\n        data: paginatedResult.data,\n        total: paginatedResult.total,\n        totalPages: paginatedResult.totalPages,\n        filteredTotal: result.length,\n      };\n    }\n\n    return {\n      data: result,\n      total: result.length,\n      totalPages: 1,\n      filteredTotal: result.length,\n    };\n  }, [data, searchTerm, sortKey, sortDirection, currentPage, pageSize, filtering, pagination, virtualScrolling, infiniteScroll, onSort]);\n\n  // Grid layout calculations\n  const gridConfig = useMemo(() => {\n    if (typeof columns === 'number') {\n      return {\n        columns: `repeat(${columns}, 1fr)`,\n        autoFit: false,\n      };\n    }\n\n    // Auto-fit columns based on container width and card constraints\n    const gapSize = gap === 'sm' ? 8 : gap === 'md' ? 16 : gap === 'lg' ? 24 : typeof gap === 'number' ? gap : 16;\n\n    if (masonry) {\n      // Masonry layout uses CSS columns\n      return {\n        columns: 'auto',\n        autoFit: true,\n        gap: gapSize,\n        masonry: true,\n      };\n    }\n\n    return {\n      columns: `repeat(auto-fit, minmax(${minCardWidth}px, 1fr))`,\n      autoFit: true,\n      gap: gapSize,\n    };\n  }, [columns, gap, minCardWidth, masonry]);\n\n  // Virtual scrolling calculations\n  const virtualItems = useMemo(() => {\n    if (!virtualScrolling?.enabled || !gridRef.current || itemHeight === 'auto') {\n      return null;\n    }\n\n    const containerHeight = gridRef.current.clientHeight;\n    const itemHeightNum = typeof itemHeight === 'number' ? itemHeight : 200;\n\n    return calculateVirtualItems(\n      processedData.data.length,\n      itemHeightNum,\n      containerHeight,\n      scrollTop,\n      virtualScrolling.overscan\n    );\n  }, [virtualScrolling, processedData.data.length, scrollTop, itemHeight]);\n\n  // Event handlers\n  const handleItemSelection = useCallback((itemKey: string) => {\n    if (!selection?.enabled) return;\n\n    const newSelectedKeys = toggleSelection(selectedKeys, itemKey, selection.type);\n    setSelectedKeys(newSelectedKeys);\n\n    if (selection.onSelectionChange) {\n      const selectedItems = processedData.data.filter(item =>\n        newSelectedKeys.includes(getRowKey(item, selection.getRowKey))\n      );\n      selection.onSelectionChange(newSelectedKeys, selectedItems);\n    }\n  }, [selectedKeys, selection, processedData.data]);\n\n  const handleItemClick = useCallback((item: T, index: number) => {\n    onItemClick?.(item, index);\n  }, [onItemClick]);\n\n  const handleItemDoubleClick = useCallback((item: T, index: number) => {\n    onItemDoubleClick?.(item, index);\n  }, [onItemDoubleClick]);\n\n  const handleSort = useCallback((newSortKey: string) => {\n    const newDirection = sortKey === newSortKey && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortKey(newSortKey);\n    setSortDirection(newDirection);\n  }, [sortKey, sortDirection]);\n\n  const handleDragStart = useCallback((item: T, index: number) => {\n    if (!draggable) return;\n\n    setDraggedItem({ item, index });\n    onDragStart?.(item, index);\n  }, [draggable, onDragStart]);\n\n  const handleDragEnd = useCallback((item: T, fromIndex: number, toIndex: number) => {\n    if (!draggable) return;\n\n    setDraggedItem(null);\n    onDragEnd?.(item, fromIndex, toIndex);\n  }, [draggable, onDragEnd]);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (virtualScrolling?.enabled) {\n      setScrollTop(e.currentTarget.scrollTop);\n      if (virtualScrolling.onScroll) {\n        virtualScrolling.onScroll(e.currentTarget.scrollTop);\n      }\n    }\n  }, [virtualScrolling]);\n\n  // Infinite scroll setup\n  React.useEffect(() => {\n    if (!infiniteScroll || !loadMoreRef.current || !hasMore) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && onLoadMore) {\n          onLoadMore();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    observer.observe(loadMoreRef.current);\n    observerRef.current = observer;\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [infiniteScroll, hasMore, onLoadMore]);\n\n  // Gap classes\n  const gapClasses = {\n    sm: 'gap-2',\n    md: 'gap-4',\n    lg: 'gap-6',\n  };\n\n  const gapClass = typeof gap === 'string' ? gapClasses[gap] : '';\n\n  // Render functions\n  const renderGridItem = (item: T, index: number) => {\n    const itemKey = getRowKey(item, selection?.getRowKey);\n    const isSelected = selectedKeys.includes(itemKey);\n    const isDragged = draggedItem?.item === item;\n\n    return (\n      <div\n        key={itemKey}\n        className={`\n          ${responsive ? 'w-full' : ''}\n          ${onItemClick ? 'cursor-pointer' : ''}\n          ${isDragged ? 'opacity-50' : ''}\n          ${isSelected ? 'ring-2 ring-blue-500' : ''}\n          transition-all duration-150 hover:scale-[1.02]\n        `}\n        style={{\n          height: itemHeight === 'auto' ? 'auto' : itemHeight,\n          maxWidth: maxCardWidth,\n          aspectRatio: aspectRatio ? `${aspectRatio}` : undefined,\n        }}\n        draggable={draggable}\n        onDragStart={() => handleDragStart(item, index)}\n        onDragEnd={() => handleDragEnd(item, draggedItem?.index || 0, index)}\n        onClick={() => handleItemClick(item, index)}\n        onDoubleClick={() => handleItemDoubleClick(item, index)}\n      >\n        <div className=\"relative h-full\">\n          {selection?.enabled && (\n            <div className=\"absolute top-2 right-2 z-10\">\n              <input\n                type={selection.type === 'radio' ? 'radio' : 'checkbox'}\n                checked={isSelected}\n                onChange={() => handleItemSelection(itemKey)}\n                className=\"w-4 h-4\"\n                onClick={(e) => e.stopPropagation()}\n              />\n            </div>\n          )}\n          {renderCard(item, index, context)}\n        </div>\n      </div>\n    );\n  };\n\n  const renderVirtualizedGrid = () => {\n    if (!virtualItems) return null;\n\n    const { start, end, totalHeight, offsetY } = virtualItems;\n    const visibleItems = processedData.data.slice(start, end + 1);\n\n    return (\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div style={{ transform: `translateY(${offsetY}px)` }}>\n          <div\n            className={`grid ${gapClass}`}\n            style={{\n              gridTemplateColumns: gridConfig.columns,\n              gap: typeof gap === 'number' ? `${gap}px` : undefined,\n            }}\n          >\n            {visibleItems.map((item, index) => renderGridItem(item, start + index))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderMasonryGrid = () => (\n    <div\n      className=\"columns-1 sm:columns-2 md:columns-3 lg:columns-4 xl:columns-5\"\n      style={{\n        columnGap: typeof gap === 'number' ? `${gap}px` : undefined,\n      }}\n    >\n      {processedData.data.map((item, index) => (\n        <div key={getRowKey(item, selection?.getRowKey)} className=\"break-inside-avoid mb-4\">\n          {renderGridItem(item, index)}\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderRegularGrid = () => (\n    <div\n      className={`grid ${gapClass}`}\n      style={{\n        gridTemplateColumns: gridConfig.columns,\n        gap: typeof gap === 'number' ? `${gap}px` : undefined,\n      }}\n    >\n      {processedData.data.map((item, index) => renderGridItem(item, index))}\n    </div>\n  );\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <Spinner size=\"lg\" />\n        <span className=\"ml-2 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (processedData.data.length === 0) {\n    return (\n      <EmptyState\n        title=\"No items found\"\n        description={searchTerm ? \"No results found for your search.\" : \"There are no items to display.\"}\n        actions={searchTerm ? (\n          <button\n            onClick={() => setSearchTerm('')}\n            className={`px-4 py-2 rounded-md ${theme.primary} hover:opacity-90 transition-opacity`}\n          >\n            Clear search\n          </button>\n        ) : undefined}\n      />\n    );\n  }\n\n  return (\n    <div className={`${className}`} style={style}>\n      {/* Toolbar */}\n      {(filtering?.enabled !== false || sortable || selectedKeys.length > 0) && (\n        <div className=\"mb-6 space-y-4\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n            {/* Search and Filters */}\n            <div className=\"flex items-center gap-4 flex-1\">\n              {filtering?.enabled !== false && (\n                <div className=\"flex-1 max-w-md\">\n                  <input\n                    type=\"text\"\n                    placeholder={filtering?.searchPlaceholder || \"Search items...\"}\n                    onChange={(e) => debouncedSearch(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                </div>\n              )}\n\n              {sortable && sortOptions.length > 0 && (\n                <div className=\"flex items-center gap-2\">\n                  <label className=\"text-sm font-medium text-gray-700\">Sort by:</label>\n                  <select\n                    value={sortKey}\n                    onChange={(e) => handleSort(e.target.value)}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">Default</option>\n                    {sortOptions.map((option) => (\n                      <option key={option.key} value={option.key}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </select>\n\n                  {sortKey && (\n                    <button\n                      onClick={() => setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')}\n                      className=\"p-2 text-gray-500 hover:text-gray-700\"\n                      title={`Sort ${sortDirection === 'asc' ? 'descending' : 'ascending'}`}\n                    >\n                      {sortDirection === 'asc' ? '↑' : '↓'}\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Selection Info */}\n            {selectedKeys.length > 0 && (\n              <div className=\"text-sm text-gray-600\">\n                {selectedKeys.length} selected\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Grid Container */}\n      <div\n        ref={gridRef}\n        className={`\n          ${virtualScrolling?.enabled ? 'overflow-auto' : ''}\n          ${responsive ? 'w-full' : ''}\n        `}\n        style={{\n          maxHeight: virtualScrolling?.enabled ? 600 : undefined,\n        }}\n        onScroll={handleScroll}\n      >\n        {virtualScrolling?.enabled\n          ? renderVirtualizedGrid()\n          : masonry\n            ? renderMasonryGrid()\n            : renderRegularGrid()\n        }\n\n        {/* Infinite Scroll Trigger */}\n        {infiniteScroll && hasMore && (\n          <div ref={loadMoreRef} className=\"flex justify-center py-4\">\n            <Spinner size=\"md\" />\n          </div>\n        )}\n      </div>\n\n      {/* Pagination */}\n      {pagination?.enabled !== false && !virtualScrolling?.enabled && !infiniteScroll && processedData.totalPages > 1 && (\n        <div className=\"mt-6 flex items-center justify-between\">\n          <div className=\"text-sm text-gray-700\">\n            Showing {((currentPage - 1) * pageSize) + 1} to {Math.min(currentPage * pageSize, processedData.filteredTotal)} of {processedData.filteredTotal} results\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className={`\n                px-3 py-1 text-sm border rounded-md\n                ${currentPage === 1\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-white text-gray-700 hover:bg-gray-50 border-gray-300'\n                }\n              `}\n            >\n              Previous\n            </button>\n\n            <span className=\"text-sm text-gray-700 px-3\">\n              Page {currentPage} of {processedData.totalPages}\n            </span>\n\n            <button\n              onClick={() => setCurrentPage(Math.min(processedData.totalPages, currentPage + 1))}\n              disabled={currentPage === processedData.totalPages}\n              className={`\n                px-3 py-1 text-sm border rounded-md\n                ${currentPage === processedData.totalPages\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-white text-gray-700 hover:bg-gray-50 border-gray-300'\n                }\n              `}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CardGrid;\n", "import { EmptyState, Spinner } from '@wheel/ui';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { DataGridProps } from './types';\nimport {\n  calculateVirtualItems,\n  debounce,\n  filterData,\n  getRowKey,\n  getWorkspaceTheme,\n  paginateData,\n  toggleSelection\n} from './utils';\n\nexport const DataGrid = <T extends Record<string, any>>({\n  data,\n  loading = false,\n  context = 'neutral',\n  permissions = [],\n  columns = 'auto',\n  gap = 'md',\n  itemHeight = 'auto',\n  cardComponent: CardComponent,\n  pagination,\n  filtering,\n  selection,\n  virtualScrolling,\n  onItemClick,\n  onItemDoubleClick,\n  infiniteScroll = false,\n  onLoadMore,\n  hasMore = false,\n  responsive = true,\n  className = '',\n  style,\n}: DataGridProps<T>) => {\n  // State management\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedKeys, setSelectedKeys] = useState<string[]>(selection?.selectedKeys || []);\n  const [currentPage, setCurrentPage] = useState(pagination?.page || 1);\n  const [pageSize, setPageSize] = useState(pagination?.pageSize || 12);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // Refs\n  const gridRef = useRef<HTMLDivElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const loadMoreRef = useRef<HTMLDivElement>(null);\n\n  // Get workspace theme\n  const theme = getWorkspaceTheme(context);\n\n  // Debounced search handler\n  const debouncedSearch = useCallback(\n    debounce((term: string) => {\n      setSearchTerm(term);\n      setCurrentPage(1);\n      if (filtering?.onSearch) {\n        filtering.onSearch(term);\n      }\n    }, 300),\n    [filtering]\n  );\n\n  // Process data: filter, paginate\n  const processedData = useMemo(() => {\n    let result = [...data];\n\n    // Apply filtering\n    if (filtering?.enabled !== false && searchTerm) {\n      result = filterData(result, {}, searchTerm);\n    }\n\n    // Apply pagination (if not using virtual scrolling or infinite scroll)\n    if (pagination?.enabled !== false && !virtualScrolling?.enabled && !infiniteScroll) {\n      const paginatedResult = paginateData(result, currentPage, pageSize);\n      return {\n        data: paginatedResult.data,\n        total: paginatedResult.total,\n        totalPages: paginatedResult.totalPages,\n        filteredTotal: result.length,\n      };\n    }\n\n    return {\n      data: result,\n      total: result.length,\n      totalPages: 1,\n      filteredTotal: result.length,\n    };\n  }, [data, searchTerm, currentPage, pageSize, filtering, pagination, virtualScrolling, infiniteScroll]);\n\n  // Virtual scrolling calculations\n  const virtualItems = useMemo(() => {\n    if (!virtualScrolling?.enabled || !gridRef.current || itemHeight === 'auto') {\n      return null;\n    }\n\n    const containerHeight = gridRef.current.clientHeight;\n    const itemHeightNum = typeof itemHeight === 'number' ? itemHeight : 200;\n\n    return calculateVirtualItems(\n      processedData.data.length,\n      itemHeightNum,\n      containerHeight,\n      scrollTop,\n      virtualScrolling.overscan\n    );\n  }, [virtualScrolling, processedData.data.length, scrollTop, itemHeight]);\n\n  // Grid layout calculations\n  const gridConfig = useMemo(() => {\n    if (typeof columns === 'number') {\n      return {\n        columns: `repeat(${columns}, 1fr)`,\n        autoFit: false,\n      };\n    }\n\n    // Auto-fit columns based on container width and item min-width\n    const minItemWidth = 280; // Minimum card width\n    const gapSize = gap === 'sm' ? 8 : gap === 'md' ? 16 : gap === 'lg' ? 24 : typeof gap === 'number' ? gap : 16;\n\n    return {\n      columns: `repeat(auto-fit, minmax(${minItemWidth}px, 1fr))`,\n      autoFit: true,\n      gap: gapSize,\n    };\n  }, [columns, gap]);\n\n  // Event handlers\n  const handleItemSelection = useCallback((itemKey: string) => {\n    if (!selection?.enabled) return;\n\n    const newSelectedKeys = toggleSelection(selectedKeys, itemKey, selection.type);\n    setSelectedKeys(newSelectedKeys);\n\n    if (selection.onSelectionChange) {\n      const selectedItems = processedData.data.filter(item =>\n        newSelectedKeys.includes(getRowKey(item, selection.getRowKey))\n      );\n      selection.onSelectionChange(newSelectedKeys, selectedItems);\n    }\n  }, [selectedKeys, selection, processedData.data]);\n\n  const handleItemClick = useCallback((item: T, index: number) => {\n    onItemClick?.(item, index);\n  }, [onItemClick]);\n\n  const handleItemDoubleClick = useCallback((item: T, index: number) => {\n    onItemDoubleClick?.(item, index);\n  }, [onItemDoubleClick]);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (virtualScrolling?.enabled) {\n      setScrollTop(e.currentTarget.scrollTop);\n      if (virtualScrolling.onScroll) {\n        virtualScrolling.onScroll(e.currentTarget.scrollTop);\n      }\n    }\n  }, [virtualScrolling]);\n\n  // Infinite scroll setup\n  React.useEffect(() => {\n    if (!infiniteScroll || !loadMoreRef.current || !hasMore) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && onLoadMore) {\n          onLoadMore();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    observer.observe(loadMoreRef.current);\n    observerRef.current = observer;\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [infiniteScroll, hasMore, onLoadMore]);\n\n  // Gap classes\n  const gapClasses = {\n    sm: 'gap-2',\n    md: 'gap-4',\n    lg: 'gap-6',\n  };\n\n  const gapClass = typeof gap === 'string' ? gapClasses[gap] : '';\n\n  // Render functions\n  const renderGridItem = (item: T, index: number) => {\n    const itemKey = getRowKey(item, selection?.getRowKey);\n    const isSelected = selectedKeys.includes(itemKey);\n\n    return (\n      <div\n        key={itemKey}\n        className={`\n          ${responsive ? 'w-full' : ''}\n          ${onItemClick ? 'cursor-pointer' : ''}\n          transition-transform duration-150 hover:scale-[1.02]\n        `}\n        onClick={() => handleItemClick(item, index)}\n        onDoubleClick={() => handleItemDoubleClick(item, index)}\n        style={{\n          height: itemHeight === 'auto' ? 'auto' : itemHeight,\n        }}\n      >\n        <CardComponent\n          item={item}\n          context={context}\n          selected={isSelected}\n          onSelect={selection?.enabled ? () => handleItemSelection(itemKey) : undefined}\n        />\n      </div>\n    );\n  };\n\n  const renderVirtualizedGrid = () => {\n    if (!virtualItems) return null;\n\n    const { start, end, totalHeight, offsetY } = virtualItems;\n    const visibleItems = processedData.data.slice(start, end + 1);\n\n    return (\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div style={{ transform: `translateY(${offsetY}px)` }}>\n          <div\n            className={`grid ${gapClass}`}\n            style={{\n              gridTemplateColumns: gridConfig.columns,\n              gap: typeof gap === 'number' ? `${gap}px` : undefined,\n            }}\n          >\n            {visibleItems.map((item, index) => renderGridItem(item, start + index))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderRegularGrid = () => (\n    <div\n      className={`grid ${gapClass}`}\n      style={{\n        gridTemplateColumns: gridConfig.columns,\n        gap: typeof gap === 'number' ? `${gap}px` : undefined,\n      }}\n    >\n      {processedData.data.map((item, index) => renderGridItem(item, index))}\n    </div>\n  );\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <Spinner size=\"lg\" />\n        <span className=\"ml-2 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (processedData.data.length === 0) {\n    return (\n      <EmptyState\n        title=\"No items found\"\n        description={searchTerm ? \"No results found for your search.\" : \"There are no items to display.\"}\n        actions={searchTerm ? (\n          <button\n            onClick={() => setSearchTerm('')}\n            className={`px-4 py-2 rounded-md ${theme.primary} hover:opacity-90 transition-opacity`}\n          >\n            Clear search\n          </button>\n        ) : undefined}\n      />\n    );\n  }\n\n  return (\n    <div className={`${className}`} style={style}>\n      {/* Search/Filter Bar */}\n      {filtering?.enabled !== false && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex-1 max-w-md\">\n              <input\n                type=\"text\"\n                placeholder={filtering?.searchPlaceholder || \"Search items...\"}\n                onChange={(e) => debouncedSearch(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            {selectedKeys.length > 0 && (\n              <div className=\"text-sm text-gray-600\">\n                {selectedKeys.length} selected\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Grid Container */}\n      <div\n        ref={gridRef}\n        className={`\n          ${virtualScrolling?.enabled ? 'overflow-auto' : ''}\n          ${responsive ? 'w-full' : ''}\n        `}\n        style={{\n          maxHeight: virtualScrolling?.enabled ? 600 : undefined,\n        }}\n        onScroll={handleScroll}\n      >\n        {virtualScrolling?.enabled ? renderVirtualizedGrid() : renderRegularGrid()}\n\n        {/* Infinite Scroll Trigger */}\n        {infiniteScroll && hasMore && (\n          <div ref={loadMoreRef} className=\"flex justify-center py-4\">\n            <Spinner size=\"md\" />\n          </div>\n        )}\n      </div>\n\n      {/* Pagination */}\n      {pagination?.enabled !== false && !virtualScrolling?.enabled && !infiniteScroll && processedData.totalPages > 1 && (\n        <div className=\"mt-6 flex items-center justify-between\">\n          <div className=\"text-sm text-gray-700\">\n            Showing {((currentPage - 1) * pageSize) + 1} to {Math.min(currentPage * pageSize, processedData.filteredTotal)} of {processedData.filteredTotal} results\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className={`\n                px-3 py-1 text-sm border rounded-md\n                ${currentPage === 1\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-white text-gray-700 hover:bg-gray-50 border-gray-300'\n                }\n              `}\n            >\n              Previous\n            </button>\n\n            <span className=\"text-sm text-gray-700 px-3\">\n              Page {currentPage} of {processedData.totalPages}\n            </span>\n\n            <button\n              onClick={() => setCurrentPage(Math.min(processedData.totalPages, currentPage + 1))}\n              disabled={currentPage === processedData.totalPages}\n              className={`\n                px-3 py-1 text-sm border rounded-md\n                ${currentPage === processedData.totalPages\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-white text-gray-700 hover:bg-gray-50 border-gray-300'\n                }\n              `}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataGrid;\n", "import { Button, Checkbox, EmptyState, Input, Spinner } from '@wheel/ui';\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { DataTableProps } from './types';\nimport {\n  calculateVirtualItems,\n  debounce,\n  filterColumnsByPermissions,\n  filterData,\n  formatCellValue,\n  getAriaSort,\n  getNestedValue,\n  getRowKey,\n  getWorkspaceTheme,\n  paginateData,\n  sortData,\n  toggleSelection\n} from './utils';\n\nexport const DataTable = <T extends Record<string, any>>({\n  data,\n  columns,\n  loading = false,\n  context = 'neutral',\n  permissions = [],\n  pagination,\n  sorting,\n  filtering,\n  selection,\n  bulkActions = [],\n  virtualScrolling,\n  onRowClick,\n  onRowDoubleClick,\n  onCellClick,\n  size = 'md',\n  variant = 'default',\n  responsive = true,\n  stickyHeader = false,\n  maxHeight,\n  expandable,\n  exportable = false,\n  onExport,\n  ariaLabel,\n  ariaLabelledBy,\n  className = '',\n  style,\n}: DataTableProps<T>) => {\n  // State management\n  const [sortField, setSortField] = useState<string | undefined>(sorting?.field);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>(sorting?.direction || 'asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [columnFilters, setColumnFilters] = useState<Record<string, any>>({});\n  const [selectedKeys, setSelectedKeys] = useState<string[]>(selection?.selectedKeys || []);\n  const [expandedKeys, setExpandedKeys] = useState<string[]>(expandable?.expandedRowKeys || []);\n  const [currentPage, setCurrentPage] = useState(pagination?.page || 1);\n  const [pageSize, setPageSize] = useState(pagination?.pageSize || 10);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // Refs\n  const tableRef = useRef<HTMLDivElement>(null);\n  const headerRef = useRef<HTMLTableSectionElement>(null);\n\n  // Get workspace theme\n  const theme = getWorkspaceTheme(context);\n\n  // Filter columns by permissions and context\n  const visibleColumns = useMemo(() => {\n    return filterColumnsByPermissions(columns, permissions, context);\n  }, [columns, permissions, context]);\n\n  // Process data: filter, sort, paginate\n  const processedData = useMemo(() => {\n    let result = [...data];\n\n    // Apply filtering\n    if (filtering?.enabled !== false) {\n      result = filterData(result, columnFilters, searchTerm);\n    }\n\n    // Apply sorting\n    if (sortField && sorting?.onSort) {\n      // External sorting\n      sorting.onSort(sortField, sortDirection);\n    } else if (sortField) {\n      // Internal sorting\n      result = sortData(result, sortField, sortDirection);\n    }\n\n    // Apply pagination\n    if (pagination?.enabled !== false && !virtualScrolling?.enabled) {\n      const paginatedResult = paginateData(result, currentPage, pageSize);\n      return {\n        data: paginatedResult.data,\n        total: paginatedResult.total,\n        totalPages: paginatedResult.totalPages,\n        filteredTotal: result.length,\n      };\n    }\n\n    return {\n      data: result,\n      total: result.length,\n      totalPages: 1,\n      filteredTotal: result.length,\n    };\n  }, [data, columnFilters, searchTerm, sortField, sortDirection, currentPage, pageSize, filtering, sorting, pagination, virtualScrolling]);\n\n  // Virtual scrolling calculations\n  const virtualItems = useMemo(() => {\n    if (!virtualScrolling?.enabled || !tableRef.current) {\n      return null;\n    }\n\n    const containerHeight = tableRef.current.clientHeight;\n    const itemHeight = virtualScrolling.itemHeight || 48;\n\n    return calculateVirtualItems(\n      processedData.data.length,\n      itemHeight,\n      containerHeight,\n      scrollTop,\n      virtualScrolling.overscan\n    );\n  }, [virtualScrolling, processedData.data.length, scrollTop]);\n\n  // Debounced search handler\n  const debouncedSearch = useCallback(\n    debounce((term: string) => {\n      setSearchTerm(term);\n      setCurrentPage(1);\n      if (filtering?.onSearch) {\n        filtering.onSearch(term);\n      }\n    }, 300),\n    [filtering]\n  );\n\n  // Event handlers\n  const handleSort = useCallback((columnKey: string) => {\n    const column = visibleColumns.find(col => String(col.key) === columnKey);\n    if (!column?.sortable) return;\n\n    const newDirection = sortField === columnKey && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortField(columnKey);\n    setSortDirection(newDirection);\n\n    if (sorting?.onSort) {\n      sorting.onSort(columnKey, newDirection);\n    }\n  }, [visibleColumns, sortField, sortDirection, sorting]);\n\n  const handleRowSelection = useCallback((rowKey: string) => {\n    if (!selection?.enabled) return;\n\n    const newSelectedKeys = toggleSelection(selectedKeys, rowKey, selection.type);\n    setSelectedKeys(newSelectedKeys);\n\n    if (selection.onSelectionChange) {\n      const selectedRows = processedData.data.filter(row =>\n        newSelectedKeys.includes(getRowKey(row, selection.getRowKey))\n      );\n      selection.onSelectionChange(newSelectedKeys, selectedRows);\n    }\n  }, [selectedKeys, selection, processedData.data]);\n\n  const handleSelectAll = useCallback(() => {\n    if (!selection?.enabled || selection.type === 'radio') return;\n\n    const allKeys = processedData.data.map(row => getRowKey(row, selection.getRowKey));\n    const newSelectedKeys = selectedKeys.length === allKeys.length ? [] : allKeys;\n    setSelectedKeys(newSelectedKeys);\n\n    if (selection.onSelectionChange) {\n      const selectedRows = newSelectedKeys.length > 0 ? processedData.data : [];\n      selection.onSelectionChange(newSelectedKeys, selectedRows);\n    }\n  }, [selectedKeys, selection, processedData.data]);\n\n  const handleBulkAction = useCallback((actionId: string) => {\n    const action = bulkActions.find(a => a.id === actionId);\n    if (!action) return;\n\n    const selectedRows = processedData.data.filter(row =>\n      selectedKeys.includes(getRowKey(row, selection?.getRowKey))\n    );\n\n    if (action.confirmMessage && !window.confirm(action.confirmMessage)) {\n      return;\n    }\n\n    action.onClick(selectedRows);\n  }, [bulkActions, processedData.data, selectedKeys, selection]);\n\n  const handleExport = useCallback(() => {\n    if (!exportable || !onExport) return;\n\n    const exportData = selectedKeys.length > 0\n      ? processedData.data.filter(row => selectedKeys.includes(getRowKey(row, selection?.getRowKey)))\n      : processedData.data;\n\n    onExport(exportData);\n  }, [exportable, onExport, processedData.data, selectedKeys, selection]);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (virtualScrolling?.enabled) {\n      setScrollTop(e.currentTarget.scrollTop);\n      if (virtualScrolling.onScroll) {\n        virtualScrolling.onScroll(e.currentTarget.scrollTop);\n      }\n    }\n  }, [virtualScrolling]);\n\n  // Size classes\n  const sizeClasses = {\n    sm: 'text-xs',\n    md: 'text-sm',\n    lg: 'text-base',\n  };\n\n  const cellPaddingClasses = {\n    sm: 'px-2 py-1',\n    md: 'px-3 py-2',\n    lg: 'px-4 py-3',\n  };\n\n  // Variant classes\n  const variantClasses = {\n    default: '',\n    striped: '[&>tbody>tr:nth-child(odd)]:bg-gray-50',\n    bordered: 'border border-gray-200',\n  };\n\n  // Render functions\n  const renderTableHeader = () => (\n    <thead\n      ref={headerRef}\n      className={`bg-gray-50 ${stickyHeader ? 'sticky top-0 z-10' : ''}`}\n    >\n      <tr>\n        {selection?.enabled && (\n          <th className={`${cellPaddingClasses[size]} w-12`}>\n            {selection.type === 'checkbox' && selection.selectAll !== false && (\n              <Checkbox\n                checked={selectedKeys.length === processedData.data.length && processedData.data.length > 0}\n                onChange={handleSelectAll}\n                aria-label=\"Select all rows\"\n              />\n            )}\n          </th>\n        )}\n\n        {visibleColumns.map((column) => (\n          <th\n            key={String(column.key)}\n            className={`\n              ${cellPaddingClasses[size]}\n              text-left font-medium text-gray-900\n              ${column.sortable ? 'cursor-pointer hover:bg-gray-100' : ''}\n              ${column.align === 'center' ? 'text-center' : ''}\n              ${column.align === 'right' ? 'text-right' : ''}\n            `}\n            style={{\n              width: column.width,\n              minWidth: column.minWidth,\n              maxWidth: column.maxWidth,\n            }}\n            onClick={() => column.sortable && handleSort(String(column.key))}\n            aria-sort={getAriaSort(String(column.key), sortField, sortDirection)}\n          >\n            <div className=\"flex items-center gap-1\">\n              {column.headerRender ? column.headerRender() : column.title}\n              {column.sortable && (\n                <div className=\"flex flex-col\">\n                  <span\n                    className={`text-xs ${\n                      sortField === String(column.key) && sortDirection === 'asc'\n                        ? 'text-blue-600'\n                        : 'text-gray-400'\n                    }`}\n                  >\n                    ▲\n                  </span>\n                  <span\n                    className={`text-xs -mt-1 ${\n                      sortField === String(column.key) && sortDirection === 'desc'\n                        ? 'text-blue-600'\n                        : 'text-gray-400'\n                    }`}\n                  >\n                    ▼\n                  </span>\n                </div>\n              )}\n              {column.filterable && (\n                <span className=\"text-xs text-gray-400\">🔍</span>\n              )}\n            </div>\n          </th>\n        ))}\n\n        {expandable && (\n          <th className={`${cellPaddingClasses[size]} w-12`}>\n            <span className=\"sr-only\">Expand</span>\n          </th>\n        )}\n      </tr>\n    </thead>\n  );\n\n  const renderTableRow = (row: T, index: number) => {\n    const rowKey = getRowKey(row, selection?.getRowKey);\n    const isSelected = selectedKeys.includes(rowKey);\n    const isExpanded = expandedKeys.includes(rowKey);\n\n    return (\n      <React.Fragment key={rowKey}>\n        <tr\n          className={`\n            ${isSelected ? theme.secondary : 'hover:bg-gray-50'}\n            ${onRowClick ? 'cursor-pointer' : ''}\n            transition-colors duration-150\n          `}\n          onClick={() => onRowClick?.(row, index)}\n          onDoubleClick={() => onRowDoubleClick?.(row, index)}\n        >\n          {selection?.enabled && (\n            <td className={cellPaddingClasses[size]}>\n              <Checkbox\n                checked={isSelected}\n                onChange={() => handleRowSelection(rowKey)}\n                aria-label={`Select row ${index + 1}`}\n              />\n            </td>\n          )}\n\n          {visibleColumns.map((column) => {\n            const value = getNestedValue(row, String(column.key));\n\n            return (\n              <td\n                key={String(column.key)}\n                className={`\n                  ${cellPaddingClasses[size]}\n                  ${column.align === 'center' ? 'text-center' : ''}\n                  ${column.align === 'right' ? 'text-right' : ''}\n                  ${onCellClick ? 'cursor-pointer' : ''}\n                `}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onCellClick?.(value, row, column);\n                }}\n              >\n                {column.render ? column.render(value, row, index) : formatCellValue(value, column)}\n              </td>\n            );\n          })}\n\n          {expandable && (\n            <td className={cellPaddingClasses[size]}>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  const newExpandedKeys = expandedKeys.includes(rowKey)\n                    ? expandedKeys.filter(k => k !== rowKey)\n                    : [...expandedKeys, rowKey];\n                  setExpandedKeys(newExpandedKeys);\n                  expandable.onExpand?.(!isExpanded, row);\n                }}\n                aria-label={isExpanded ? 'Collapse row' : 'Expand row'}\n              >\n                {isExpanded ? (\n                  <span className=\"text-sm\">▲</span>\n                ) : (\n                  <span className=\"text-sm\">▼</span>\n                )}\n              </Button>\n            </td>\n          )}\n        </tr>\n\n        {expandable && isExpanded && (\n          <tr>\n            <td\n              colSpan={visibleColumns.length + (selection?.enabled ? 1 : 0) + 1}\n              className=\"p-0\"\n            >\n              <div className=\"bg-gray-50 p-4\">\n                {expandable.expandedRowRender(row)}\n              </div>\n            </td>\n          </tr>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  const renderVirtualizedRows = () => {\n    if (!virtualItems) return null;\n\n    const { start, end, totalHeight, offsetY } = virtualItems;\n    const visibleRows = processedData.data.slice(start, end + 1);\n\n    return (\n      <tbody style={{ height: totalHeight }}>\n        <tr style={{ height: offsetY }}>\n          <td colSpan={visibleColumns.length + (selection?.enabled ? 1 : 0) + (expandable ? 1 : 0)} />\n        </tr>\n        {visibleRows.map((row, index) => renderTableRow(row, start + index))}\n      </tbody>\n    );\n  };\n\n  const renderRegularRows = () => (\n    <tbody>\n      {processedData.data.map((row, index) => renderTableRow(row, index))}\n    </tbody>\n  );\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <Spinner size=\"lg\" />\n        <span className=\"ml-2 text-gray-600\">Loading...</span>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (processedData.data.length === 0) {\n    return (\n      <EmptyState\n        title=\"No data available\"\n        description={searchTerm ? \"No results found for your search.\" : \"There are no items to display.\"}\n        actions={searchTerm ? (\n          <Button onClick={() => setSearchTerm('')}>\n            Clear search\n          </Button>\n        ) : undefined}\n      />\n    );\n  }\n\n  return (\n    <div className={`${className}`} style={style}>\n      {/* Toolbar */}\n      {(filtering?.enabled !== false || bulkActions.length > 0 || exportable) && (\n        <div className=\"mb-4 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\">\n          <div className=\"flex flex-1 items-center gap-4\">\n            {filtering?.searchable !== false && (\n              <div className=\"flex-1 max-w-sm\">\n                <Input\n                  name=\"search\"\n                  placeholder={filtering?.searchPlaceholder || \"Search...\"}\n                  onChange={(e) => debouncedSearch(e.target.value)}\n                  className=\"w-full\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            {selectedKeys.length > 0 && bulkActions.length > 0 && (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-600\">\n                  {selectedKeys.length} selected\n                </span>\n                {bulkActions.map((action) => (\n                  <Button\n                    key={action.id}\n                    variant={action.variant || 'secondary'}\n                    size=\"sm\"\n                    onClick={() => handleBulkAction(action.id)}\n                    disabled={action.disabled}\n                  >\n                    {action.label}\n                  </Button>\n                ))}\n              </div>\n            )}\n\n            {exportable && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={handleExport}\n              >\n                Export\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Table */}\n      <div\n        ref={tableRef}\n        className={`\n          overflow-auto border border-gray-200 rounded-lg\n          ${maxHeight ? '' : 'max-h-96'}\n        `}\n        style={{ maxHeight }}\n        onScroll={handleScroll}\n      >\n        <table\n          className={`\n            min-w-full divide-y divide-gray-200\n            ${sizeClasses[size]}\n            ${variantClasses[variant]}\n          `}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n        >\n          {renderTableHeader()}\n          {virtualScrolling?.enabled ? renderVirtualizedRows() : renderRegularRows()}\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {pagination?.enabled !== false && !virtualScrolling?.enabled && processedData.totalPages > 1 && (\n        <div className=\"mt-4 flex items-center justify-between\">\n          <div className=\"text-sm text-gray-700\">\n            Showing {((currentPage - 1) * pageSize) + 1} to {Math.min(currentPage * pageSize, processedData.filteredTotal)} of {processedData.filteredTotal} results\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n            >\n              Previous\n            </Button>\n\n            <span className=\"text-sm text-gray-700\">\n              Page {currentPage} of {processedData.totalPages}\n            </span>\n\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentPage(Math.min(processedData.totalPages, currentPage + 1))}\n              disabled={currentPage === processedData.totalPages}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n", "import { Avatar, Badge, Button, EmptyState, Spinner } from '@wheel/ui';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { TimelineEvent, TimelineFilter, TimelineProps } from './types';\nimport { getWorkspaceTheme } from './utils';\n\nexport const Timeline: React.FC<TimelineProps> = ({\n  events,\n  loading = false,\n  context = 'neutral',\n  permissions = [],\n  groupBy = 'date',\n  filtering = [],\n  onEventClick,\n  onFilterChange,\n  realTimeUpdates = false,\n  onNewEvent,\n  responsive = true,\n  maxHeight,\n  showTime = true,\n  showUser = true,\n  className = '',\n  style,\n}) => {\n  // State management\n  const [activeFilters, setActiveFilters] = useState<TimelineFilter[]>(filtering);\n  const [expandedGroups, setExpandedGroups] = useState<Set<string>>(new Set());\n\n  // Get workspace theme\n  const theme = getWorkspaceTheme(context);\n\n  // Filter events based on active filters\n  const filteredEvents = useMemo(() => {\n    if (activeFilters.length === 0) return events;\n\n    return events.filter(event => {\n      return activeFilters.every(filter => {\n        switch (filter.type) {\n          case 'user':\n            return event.user?.id === filter.value;\n          case 'type':\n            return event.type === filter.value;\n          case 'status':\n            return event.status === filter.value;\n          case 'date':\n            const eventDate = new Date(event.timestamp);\n            const filterDate = new Date(filter.value);\n            return eventDate.toDateString() === filterDate.toDateString();\n          default:\n            return true;\n        }\n      });\n    });\n  }, [events, activeFilters]);\n\n  // Group events based on groupBy prop\n  const groupedEvents = useMemo(() => {\n    if (groupBy === 'none') {\n      return { 'All Events': filteredEvents };\n    }\n\n    const groups: Record<string, TimelineEvent[]> = {};\n\n    filteredEvents.forEach(event => {\n      let groupKey: string;\n\n      switch (groupBy) {\n        case 'date':\n          groupKey = new Date(event.timestamp).toDateString();\n          break;\n        case 'type':\n          groupKey = event.type;\n          break;\n        case 'user':\n          groupKey = event.user?.name || 'Unknown User';\n          break;\n        default:\n          groupKey = 'All Events';\n      }\n\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(event);\n    });\n\n    // Sort groups by most recent\n    Object.keys(groups).forEach(key => {\n      groups[key].sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n    });\n\n    return groups;\n  }, [filteredEvents, groupBy]);\n\n  // Event handlers\n  const handleFilterChange = useCallback((newFilters: TimelineFilter[]) => {\n    setActiveFilters(newFilters);\n    onFilterChange?.(newFilters);\n  }, [onFilterChange]);\n\n  const handleEventClick = useCallback((event: TimelineEvent) => {\n    onEventClick?.(event);\n  }, [onEventClick]);\n\n  const toggleGroupExpansion = useCallback((groupKey: string) => {\n    const newExpanded = new Set(expandedGroups);\n    if (newExpanded.has(groupKey)) {\n      newExpanded.delete(groupKey);\n    } else {\n      newExpanded.add(groupKey);\n    }\n    setExpandedGroups(newExpanded);\n  }, [expandedGroups]);\n\n  // Real-time updates\n  React.useEffect(() => {\n    if (realTimeUpdates && onNewEvent) {\n      // This would typically connect to a WebSocket or polling mechanism\n      // For now, we'll just set up the callback structure\n      const handleNewEvent = (event: TimelineEvent) => {\n        onNewEvent(event);\n      };\n\n      // Return cleanup function\n      return () => {\n        // Cleanup WebSocket connection or polling\n      };\n    }\n  }, [realTimeUpdates, onNewEvent]);\n\n  // Render functions\n  const renderEventIcon = (event: TimelineEvent) => {\n    if (event.icon) {\n      return (\n        <div\n          className={`\n            w-8 h-8 rounded-full flex items-center justify-center text-white text-sm\n            ${event.color ? '' : theme.primary}\n          `}\n          style={{ backgroundColor: event.color }}\n        >\n          {event.icon}\n        </div>\n      );\n    }\n\n    // Default icon based on status\n    const statusColors = {\n      pending: 'bg-yellow-500',\n      completed: 'bg-green-500',\n      failed: 'bg-red-500',\n      cancelled: 'bg-gray-500',\n    };\n\n    const statusIcons = {\n      pending: '⏳',\n      completed: '✓',\n      failed: '✗',\n      cancelled: '⊘',\n    };\n\n    return (\n      <div\n        className={`\n          w-8 h-8 rounded-full flex items-center justify-center text-white text-sm\n          ${event.status ? statusColors[event.status] : theme.primary}\n        `}\n      >\n        {event.status ? statusIcons[event.status] : '•'}\n      </div>\n    );\n  };\n\n  const renderEvent = (event: TimelineEvent, isLast: boolean) => {\n    const canView = !event.workspaceContext ||\n      event.workspaceContext === context ||\n      permissions.includes('view_all_events');\n\n    if (!canView) return null;\n\n    return (\n      <div key={event.id} className=\"relative flex gap-4 pb-6\">\n        {/* Timeline line */}\n        {!isLast && (\n          <div className=\"absolute left-4 top-8 w-0.5 h-full bg-gray-200\" />\n        )}\n\n        {/* Event icon */}\n        <div className=\"relative z-10\">\n          {renderEventIcon(event)}\n        </div>\n\n        {/* Event content */}\n        <div className=\"flex-1 min-w-0\">\n          <div\n            className={`\n              bg-white border border-gray-200 rounded-lg p-4 shadow-sm\n              ${onEventClick ? 'cursor-pointer hover:shadow-md transition-shadow' : ''}\n            `}\n            onClick={() => handleEventClick(event)}\n          >\n            {/* Event header */}\n            <div className=\"flex items-start justify-between gap-4 mb-2\">\n              <div className=\"flex-1 min-w-0\">\n                <h4 className=\"font-medium text-gray-900 truncate\">\n                  {event.title}\n                </h4>\n                {event.description && (\n                  <p className=\"text-sm text-gray-600 mt-1\">\n                    {event.description}\n                  </p>\n                )}\n              </div>\n\n              {event.status && (\n                <Badge\n                  variant={\n                    event.status === 'completed' ? 'success' :\n                    event.status === 'failed' ? 'error' :\n                    event.status === 'cancelled' ? 'secondary' :\n                    'warning'\n                  }\n                  size=\"sm\"\n                >\n                  {event.status}\n                </Badge>\n              )}\n            </div>\n\n            {/* Event metadata */}\n            <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n              {showTime && (\n                <span>\n                  {new Date(event.timestamp).toLocaleString()}\n                </span>\n              )}\n\n              {showUser && event.user && (\n                <div className=\"flex items-center gap-2\">\n                  {event.user.avatar && (\n                    <Avatar\n                      src={event.user.avatar}\n                      alt={event.user.name}\n                      size=\"xs\"\n                    />\n                  )}\n                  <span>{event.user.name}</span>\n                </div>\n              )}\n\n              <span className=\"capitalize\">{event.type}</span>\n            </div>\n\n            {/* Event metadata display */}\n            {event.metadata && Object.keys(event.metadata).length > 0 && (\n              <div className=\"mt-3 pt-3 border-t border-gray-100\">\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                  {Object.entries(event.metadata).map(([key, value]) => (\n                    <div key={key}>\n                      <span className=\"font-medium text-gray-600\">\n                        {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}:\n                      </span>\n                      <span className=\"ml-1 text-gray-900\">\n                        {typeof value === 'object' ? JSON.stringify(value) : String(value)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderGroup = (groupKey: string, groupEvents: TimelineEvent[]) => {\n    const isExpanded = expandedGroups.has(groupKey) || groupBy === 'none';\n\n    return (\n      <div key={groupKey} className=\"mb-6\">\n        {groupBy !== 'none' && (\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              {groupKey}\n            </h3>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-gray-500\">\n                {groupEvents.length} event{groupEvents.length !== 1 ? 's' : ''}\n              </span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => toggleGroupExpansion(groupKey)}\n              >\n                {isExpanded ? '▲' : '▼'}\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {isExpanded && (\n          <div className=\"space-y-0\">\n            {groupEvents.map((event, index) =>\n              renderEvent(event, index === groupEvents.length - 1)\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <Spinner size=\"lg\" />\n        <span className=\"ml-2 text-gray-600\">Loading timeline...</span>\n      </div>\n    );\n  }\n\n  // Empty state\n  if (filteredEvents.length === 0) {\n    return (\n      <EmptyState\n        title=\"No events found\"\n        description={\n          activeFilters.length > 0\n            ? \"No events match your current filters.\"\n            : \"There are no events to display.\"\n        }\n        actions={\n          activeFilters.length > 0 ? (\n            <Button onClick={() => handleFilterChange([])}>\n              Clear filters\n            </Button>\n          ) : undefined\n        }\n      />\n    );\n  }\n\n  return (\n    <div className={`${className}`} style={style}>\n      {/* Filters */}\n      {filtering.length > 0 && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium text-gray-900 mb-3\">Filters</h4>\n          <div className=\"flex flex-wrap gap-2\">\n            {filtering.map((filter) => (\n              <Button\n                key={`${filter.type}-${filter.value}`}\n                variant={\n                  activeFilters.some(f => f.type === filter.type && f.value === filter.value)\n                    ? 'primary'\n                    : 'outline'\n                }\n                size=\"sm\"\n                onClick={() => {\n                  const isActive = activeFilters.some(f =>\n                    f.type === filter.type && f.value === filter.value\n                  );\n\n                  if (isActive) {\n                    handleFilterChange(\n                      activeFilters.filter(f =>\n                        !(f.type === filter.type && f.value === filter.value)\n                      )\n                    );\n                  } else {\n                    handleFilterChange([...activeFilters, filter]);\n                  }\n                }}\n              >\n                {filter.label}\n              </Button>\n            ))}\n          </div>\n\n          {activeFilters.length > 0 && (\n            <div className=\"mt-3 pt-3 border-t border-gray-200\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => handleFilterChange([])}\n              >\n                Clear all filters\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Timeline */}\n      <div\n        className={`\n          ${responsive ? 'w-full' : ''}\n          ${maxHeight ? 'overflow-y-auto' : ''}\n        `}\n        style={{ maxHeight }}\n      >\n        {Object.entries(groupedEvents).map(([groupKey, groupEvents]) =>\n          renderGroup(groupKey, groupEvents)\n        )}\n      </div>\n\n      {/* Real-time indicator */}\n      {realTimeUpdates && (\n        <div className=\"mt-4 flex items-center justify-center text-sm text-gray-500\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse mr-2\" />\n          Live updates enabled\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Timeline;\n", "/**\n * FormBuilder Component\n * Advanced form builder organism with workspace context, auto-save, and collaborative editing\n */\n\nimport { Button } from '@wheel/ui';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  FormBuilderProps,\n  FormField,\n  FormState\n} from './types';\nimport {\n  calculateFormCompletion,\n  debounce,\n  deepClone,\n  generateFieldId,\n  getVisibleFields,\n  hasUnsavedChanges,\n  validateForm\n} from './utils';\n\n/**\n * FormBuilder - Dynamic form generation with workspace context\n */\nexport function FormBuilder({\n  context = 'neutral',\n  schema,\n  initialData = {},\n  onSubmit,\n  onChange,\n  onValidationChange,\n  template,\n  workspaceId,\n  autoSave = false,\n  autoSaveInterval = 2000,\n  collaborative = false,\n  readonly = false,\n  permissions = [],\n  className = '',\n  loading = false,\n  disabled = false\n}: FormBuilderProps) {\n  // Form state management\n  const [formState, setFormState] = useState<FormState>({\n    data: { ...initialData },\n    errors: {},\n    touched: {},\n    isValid: true,\n    isSubmitting: false,\n    isDirty: false,\n    lastSaved: undefined\n  });\n\n  // Auto-save state\n  const [autoSaveStatus, setAutoSaveStatus] = useState<'idle' | 'saving' | 'saved' | 'error'>('idle');\n  const savedDataRef = useRef({ ...initialData });\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout>();\n\n  // Get visible fields based on current data and permissions\n  const visibleFields = useMemo(() =>\n    getVisibleFields(schema.fields, formState.data, permissions, context),\n    [schema.fields, formState.data, permissions, context]\n  );\n\n  // Calculate form completion percentage\n  const completionPercentage = useMemo(() =>\n    calculateFormCompletion(visibleFields, formState.data, permissions, context),\n    [visibleFields, formState.data, permissions, context]\n  );\n\n  // Validate form data\n  const validateFormData = useCallback((data: Record<string, any>) => {\n    const errors = validateForm(visibleFields, data, context);\n    const isValid = Object.keys(errors).length === 0;\n    return { errors, isValid };\n  }, [visibleFields, context]);\n\n  // Handle field value changes\n  const handleFieldChange = useCallback((fieldName: string, value: any) => {\n    if (readonly || disabled) return;\n\n    setFormState(prevState => {\n      const newData = { ...prevState.data, [fieldName]: value };\n      const { errors, isValid } = validateFormData(newData);\n      const isDirty = hasUnsavedChanges(newData, savedDataRef.current);\n\n      const newState = {\n        ...prevState,\n        data: newData,\n        errors,\n        isValid,\n        isDirty,\n        touched: { ...prevState.touched, [fieldName]: true }\n      };\n\n      // Trigger onChange callback\n      onChange?.(newData);\n      onValidationChange?.(errors);\n\n      return newState;\n    });\n  }, [readonly, disabled, validateFormData, onChange, onValidationChange]);\n\n  // Debounced auto-save function\n  const debouncedAutoSave = useMemo(\n    () => debounce(async (data: Record<string, any>) => {\n      if (!autoSave || readonly) return;\n\n      try {\n        setAutoSaveStatus('saving');\n\n        // Simulate auto-save API call\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        savedDataRef.current = deepClone(data);\n        setFormState(prev => ({ ...prev, lastSaved: new Date(), isDirty: false }));\n        setAutoSaveStatus('saved');\n\n        // Reset status after 2 seconds\n        setTimeout(() => setAutoSaveStatus('idle'), 2000);\n      } catch (error) {\n        console.error('Auto-save failed:', error);\n        setAutoSaveStatus('error');\n        setTimeout(() => setAutoSaveStatus('idle'), 3000);\n      }\n    }, autoSaveInterval),\n    [autoSave, autoSaveInterval, readonly]\n  );\n\n  // Auto-save effect\n  useEffect(() => {\n    if (autoSave && formState.isDirty && !formState.isSubmitting) {\n      debouncedAutoSave(formState.data);\n    }\n  }, [autoSave, formState.isDirty, formState.isSubmitting, formState.data, debouncedAutoSave]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (readonly || disabled || formState.isSubmitting) return;\n\n    const { errors, isValid } = validateFormData(formState.data);\n\n    setFormState(prev => ({\n      ...prev,\n      errors,\n      isValid,\n      isSubmitting: true,\n      touched: visibleFields.reduce((acc, field) => ({ ...acc, [field.name]: true }), {})\n    }));\n\n    if (isValid && onSubmit) {\n      try {\n        await onSubmit(formState.data);\n        savedDataRef.current = deepClone(formState.data);\n        setFormState(prev => ({ ...prev, isDirty: false, lastSaved: new Date() }));\n      } catch (error) {\n        console.error('Form submission failed:', error);\n      }\n    }\n\n    setFormState(prev => ({ ...prev, isSubmitting: false }));\n  }, [readonly, disabled, formState.isSubmitting, formState.data, validateFormData, visibleFields, onSubmit]);\n\n  // Reset form\n  const handleReset = useCallback(() => {\n    if (readonly || disabled) return;\n\n    setFormState({\n      data: { ...initialData },\n      errors: {},\n      touched: {},\n      isValid: true,\n      isSubmitting: false,\n      isDirty: false,\n      lastSaved: undefined\n    });\n    savedDataRef.current = { ...initialData };\n  }, [readonly, disabled, initialData]);\n\n  // Render form field\n  const renderField = useCallback((field: FormField) => {\n    const fieldId = generateFieldId(field.name, workspaceId);\n    const value = formState.data[field.name] || '';\n    const error = formState.errors[field.name];\n    const touched = formState.touched[field.name];\n\n    return (\n      <div key={field.name} className=\"space-y-2\">\n        <label htmlFor={fieldId} className=\"block text-sm font-medium text-gray-700\">\n          {field.label}\n          {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n        <input\n          id={fieldId}\n          name={field.name}\n          type={field.type || 'text'}\n          placeholder={field.placeholder}\n          value={value}\n          disabled={disabled || readonly}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleFieldChange(field.name, e.target.value)}\n          className={`\n            w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\n            ${touched && error ? 'border-red-500' : 'border-gray-300'}\n            ${disabled || readonly ? 'bg-gray-50 cursor-not-allowed' : 'bg-white'}\n          `}\n          {...field.props}\n        />\n        {touched && error && (\n          <p className=\"text-sm text-red-600\">{error}</p>\n        )}\n      </div>\n    );\n  }, [formState.data, formState.errors, formState.touched, disabled, readonly, workspaceId, handleFieldChange]);\n\n  // Auto-save indicator\n  const renderAutoSaveIndicator = () => {\n    if (!autoSave) return null;\n\n    const statusMessages = {\n      idle: '',\n      saving: 'Saving...',\n      saved: 'Saved',\n      error: 'Save failed'\n    };\n\n    const statusColors = {\n      idle: 'text-gray-500',\n      saving: 'text-blue-500',\n      saved: 'text-green-500',\n      error: 'text-red-500'\n    };\n\n    return (\n      <div className={`text-sm ${statusColors[autoSaveStatus]} transition-colors duration-200`}>\n        {statusMessages[autoSaveStatus]}\n        {formState.lastSaved && autoSaveStatus === 'idle' && (\n          <span className=\"text-gray-400 ml-2\">\n            Last saved: {formState.lastSaved.toLocaleTimeString()}\n          </span>\n        )}\n      </div>\n    );\n  };\n\n  // Form layout based on schema\n  const renderFormLayout = () => {\n    const layout = schema.layout?.type || 'single-column';\n    const spacing = schema.layout?.spacing || 'normal';\n\n    const spacingClasses = {\n      compact: 'space-y-3',\n      normal: 'space-y-4',\n      relaxed: 'space-y-6'\n    };\n\n    const layoutClasses = {\n      'single-column': 'grid grid-cols-1',\n      'two-column': 'grid grid-cols-1 md:grid-cols-2 gap-x-6',\n      'grid': `grid grid-cols-1 md:grid-cols-${schema.layout?.columns || 2} gap-x-6`,\n      'tabs': 'space-y-4',\n      'accordion': 'space-y-2'\n    };\n\n    return (\n      <div className={`${layoutClasses[layout]} ${spacingClasses[spacing]}`}>\n        {visibleFields.map(renderField)}\n      </div>\n    );\n  };\n\n  // Workspace-specific styling\n  const getWorkspaceStyles = () => {\n    const baseStyles = 'bg-white border border-gray-200 rounded-lg shadow-sm';\n\n    const workspaceStyles = {\n      consultant: 'border-blue-200 focus-within:border-blue-500',\n      client: 'border-green-200 focus-within:border-green-500',\n      admin: 'border-purple-200 focus-within:border-purple-500',\n      expert: 'border-orange-200 focus-within:border-orange-500',\n      'tool-creator': 'border-indigo-200 focus-within:border-indigo-500',\n      founder: 'border-red-200 focus-within:border-red-500',\n      neutral: 'border-gray-200 focus-within:border-gray-500'\n    };\n\n    return `${baseStyles} ${workspaceStyles[context]}`;\n  };\n\n  return (\n    <div className={`form-builder ${className}`}>\n      {/* Form Header */}\n      {(schema.metadata?.title || completionPercentage < 100 || autoSave) && (\n        <div className=\"mb-6\">\n          {schema.metadata?.title && (\n            <div className=\"mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">\n                {schema.metadata.title}\n              </h2>\n              {schema.metadata.description && (\n                <p className=\"text-gray-600 mt-1\">\n                  {schema.metadata.description}\n                </p>\n              )}\n            </div>\n          )}\n\n          <div className=\"flex items-center justify-between\">\n            {/* Progress indicator */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-sm text-gray-600\">\n                Progress: {completionPercentage}%\n              </div>\n              <div className=\"w-32 bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${completionPercentage}%` }}\n                />\n              </div>\n            </div>\n\n            {/* Auto-save indicator */}\n            {renderAutoSaveIndicator()}\n          </div>\n        </div>\n      )}\n\n      {/* Form Content */}\n      <form onSubmit={handleSubmit} className={getWorkspaceStyles()}>\n        <div className=\"p-6\">\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\" />\n              <span className=\"ml-3 text-gray-600\">Loading form...</span>\n            </div>\n          ) : (\n            renderFormLayout()\n          )}\n        </div>\n\n        {/* Form Actions */}\n        {!readonly && (\n          <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200 rounded-b-lg\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                {formState.isDirty && (\n                  <span className=\"text-sm text-orange-600\">\n                    You have unsaved changes\n                  </span>\n                )}\n              </div>\n\n              <div className=\"flex items-center space-x-3\">\n                <Button\n                  type=\"button\"\n                  variant=\"secondary\"\n                  onClick={handleReset}\n                  disabled={disabled || formState.isSubmitting || !formState.isDirty}\n                >\n                  Reset\n                </Button>\n\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  disabled={disabled || formState.isSubmitting || !formState.isValid}\n                  isLoading={formState.isSubmitting}\n                >\n                  {formState.isSubmitting ? 'Submitting...' : 'Submit'}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </form>\n\n      {/* Collaborative indicators */}\n      {collaborative && (\n        <div className=\"mt-4 text-sm text-gray-500\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n            <span>Collaborative editing enabled</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FormBuilder;\n", "/**\n * Form Organisms Utilities\n * Helper functions for form validation, state management, and data processing\n */\n\nimport { ConditionalRule, FormField, FormState, ValidationRule, WorkspaceContext } from './types';\n\n/**\n * Validates a single field value against its validation rules\n */\nexport function validateField(\n  field: FormField,\n  value: any,\n  allData: Record<string, any> = {},\n  context?: WorkspaceContext\n): string | null {\n  if (!field.validation) return null;\n\n  for (const rule of field.validation) {\n    // Skip validation if workspace context doesn't match\n    if (rule.workspaceContext && context && rule.workspaceContext !== context) {\n      continue;\n    }\n\n    const error = validateRule(rule, value, field, allData);\n    if (error) return error;\n  }\n\n  return null;\n}\n\n/**\n * Validates a single validation rule\n */\nfunction validateRule(\n  rule: ValidationRule,\n  value: any,\n  field: FormField,\n  allData: Record<string, any>\n): string | null {\n  switch (rule.type) {\n    case 'required':\n      if (value === undefined || value === null || value === '') {\n        return rule.message || `${field.label} is required`;\n      }\n      break;\n\n    case 'minLength':\n      if (typeof value === 'string' && value.length < rule.value) {\n        return rule.message || `${field.label} must be at least ${rule.value} characters`;\n      }\n      break;\n\n    case 'maxLength':\n      if (typeof value === 'string' && value.length > rule.value) {\n        return rule.message || `${field.label} must be no more than ${rule.value} characters`;\n      }\n      break;\n\n    case 'pattern':\n      if (typeof value === 'string' && !new RegExp(rule.value).test(value)) {\n        return rule.message || `${field.label} format is invalid`;\n      }\n      break;\n\n    case 'email':\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (typeof value === 'string' && !emailRegex.test(value)) {\n        return rule.message || `${field.label} must be a valid email address`;\n      }\n      break;\n\n    case 'url':\n      try {\n        new URL(value);\n      } catch {\n        return rule.message || `${field.label} must be a valid URL`;\n      }\n      break;\n\n    case 'number':\n      if (isNaN(Number(value))) {\n        return rule.message || `${field.label} must be a valid number`;\n      }\n      break;\n\n    case 'custom':\n      if (typeof rule.value === 'function') {\n        const result = rule.value(value, allData, field);\n        if (result !== true) {\n          return typeof result === 'string' ? result : rule.message;\n        }\n      }\n      break;\n  }\n\n  return null;\n}\n\n/**\n * Validates all fields in a form\n */\nexport function validateForm(\n  fields: FormField[],\n  data: Record<string, any>,\n  context?: WorkspaceContext\n): Record<string, string> {\n  const errors: Record<string, string> = {};\n\n  for (const field of fields) {\n    const error = validateField(field, data[field.name], data, context);\n    if (error) {\n      errors[field.name] = error;\n    }\n  }\n\n  return errors;\n}\n\n/**\n * Evaluates conditional rules to determine field visibility/state\n */\nexport function evaluateConditionalRules(\n  field: FormField,\n  data: Record<string, any>\n): {\n  visible: boolean;\n  required: boolean;\n  disabled: boolean;\n  readonly: boolean;\n} {\n  let visible = true;\n  let required = field.required || false;\n  let disabled = false;\n  let readonly = false;\n\n  if (!field.conditional) {\n    return { visible, required, disabled, readonly };\n  }\n\n  for (const rule of field.conditional) {\n    const fieldValue = data[rule.field];\n    const conditionMet = evaluateCondition(rule, fieldValue);\n\n    if (conditionMet) {\n      switch (rule.action) {\n        case 'show':\n          visible = true;\n          break;\n        case 'hide':\n          visible = false;\n          break;\n        case 'required':\n          required = true;\n          break;\n        case 'disabled':\n          disabled = true;\n          break;\n        case 'readonly':\n          readonly = true;\n          break;\n      }\n    }\n  }\n\n  return { visible, required, disabled, readonly };\n}\n\n/**\n * Evaluates a single conditional rule\n */\nfunction evaluateCondition(rule: ConditionalRule, value: any): boolean {\n  switch (rule.operator) {\n    case 'equals':\n      return value === rule.value;\n    case 'not_equals':\n      return value !== rule.value;\n    case 'contains':\n      return typeof value === 'string' && value.includes(rule.value);\n    case 'greater_than':\n      return Number(value) > Number(rule.value);\n    case 'less_than':\n      return Number(value) < Number(rule.value);\n    case 'in':\n      return Array.isArray(rule.value) && rule.value.includes(value);\n    case 'not_in':\n      return Array.isArray(rule.value) && !rule.value.includes(value);\n    default:\n      return false;\n  }\n}\n\n/**\n * Filters fields based on permissions and workspace context\n */\nexport function filterFieldsByPermissions(\n  fields: FormField[],\n  userPermissions: string[] = [],\n  context?: WorkspaceContext\n): FormField[] {\n  return fields.filter(field => {\n    // Check workspace context\n    if (field.workspaceContext && context && field.workspaceContext !== context) {\n      return false;\n    }\n\n    // Check permissions\n    if (field.permission && !userPermissions.includes(field.permission)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\n/**\n * Gets visible fields based on current form data and conditions\n */\nexport function getVisibleFields(\n  fields: FormField[],\n  data: Record<string, any>,\n  userPermissions: string[] = [],\n  context?: WorkspaceContext\n): FormField[] {\n  const filteredFields = filterFieldsByPermissions(fields, userPermissions, context);\n\n  return filteredFields.filter(field => {\n    const { visible } = evaluateConditionalRules(field, data);\n    return visible;\n  });\n}\n\n/**\n * Calculates form completion percentage\n */\nexport function calculateFormCompletion(\n  fields: FormField[],\n  data: Record<string, any>,\n  userPermissions: string[] = [],\n  context?: WorkspaceContext\n): number {\n  const visibleFields = getVisibleFields(fields, data, userPermissions, context);\n  const requiredFields = visibleFields.filter(field => {\n    const { required } = evaluateConditionalRules(field, data);\n    return required;\n  });\n\n  if (requiredFields.length === 0) return 100;\n\n  const completedFields = requiredFields.filter(field => {\n    const value = data[field.name];\n    return value !== undefined && value !== null && value !== '';\n  });\n\n  return Math.round((completedFields.length / requiredFields.length) * 100);\n}\n\n/**\n * Debounces a function call\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\n/**\n * Deep clones an object\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') return obj;\n  if (obj instanceof Date) return new Date(obj.getTime()) as unknown as T;\n  if (obj instanceof Array) return obj.map(item => deepClone(item)) as unknown as T;\n  if (typeof obj === 'object') {\n    const cloned = {} as T;\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cloned[key] = deepClone(obj[key]);\n      }\n    }\n    return cloned;\n  }\n  return obj;\n}\n\n/**\n * Merges form data with defaults\n */\nexport function mergeFormData(\n  defaultData: Record<string, any>,\n  userData: Record<string, any>\n): Record<string, any> {\n  return { ...defaultData, ...userData };\n}\n\n/**\n * Sanitizes form data by removing empty values\n */\nexport function sanitizeFormData(\n  data: Record<string, any>,\n  removeEmpty = true\n): Record<string, any> {\n  const sanitized: Record<string, any> = {};\n\n  for (const [key, value] of Object.entries(data)) {\n    if (removeEmpty && (value === '' || value === null || value === undefined)) {\n      continue;\n    }\n    sanitized[key] = value;\n  }\n\n  return sanitized;\n}\n\n/**\n * Formats field value for display\n */\nexport function formatFieldValue(field: FormField, value: any): string {\n  if (value === null || value === undefined) return '';\n\n  switch (field.type) {\n    case 'currency':\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      }).format(Number(value) || 0);\n\n    case 'date':\n      return value instanceof Date ? value.toLocaleDateString() : value;\n\n    case 'time':\n      return value instanceof Date ? value.toLocaleTimeString() : value;\n\n    case 'phone':\n      // Basic phone formatting\n      const cleaned = value.replace(/\\D/g, '');\n      if (cleaned.length === 10) {\n        return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n      }\n      return value;\n\n    default:\n      return String(value);\n  }\n}\n\n/**\n * Generates a unique form field ID\n */\nexport function generateFieldId(fieldName: string, formId?: string): string {\n  const base = formId ? `${formId}-${fieldName}` : fieldName;\n  return base.replace(/[^a-zA-Z0-9-_]/g, '-').toLowerCase();\n}\n\n/**\n * Checks if form has unsaved changes\n */\nexport function hasUnsavedChanges(\n  currentData: Record<string, any>,\n  savedData: Record<string, any>\n): boolean {\n  return JSON.stringify(currentData) !== JSON.stringify(savedData);\n}\n\n/**\n * Creates a form state snapshot for undo/redo functionality\n */\nexport function createFormSnapshot(formState: FormState): FormState {\n  return deepClone(formState);\n}\n\n/**\n * Validates file upload based on field requirements\n */\nexport function validateFileUpload(\n  file: File,\n  allowedTypes: string[] = [],\n  maxSize?: number\n): string | null {\n  // Check file type\n  if (allowedTypes.length > 0) {\n    const fileExtension = file.name.split('.').pop()?.toLowerCase();\n    const mimeType = file.type.toLowerCase();\n\n    const isValidType = allowedTypes.some(type =>\n      type.toLowerCase() === fileExtension ||\n      type.toLowerCase() === mimeType ||\n      mimeType.startsWith(type.toLowerCase())\n    );\n\n    if (!isValidType) {\n      return `File type not allowed. Allowed types: ${allowedTypes.join(', ')}`;\n    }\n  }\n\n  // Check file size\n  if (maxSize && file.size > maxSize) {\n    const maxSizeMB = Math.round(maxSize / (1024 * 1024));\n    return `File size too large. Maximum size: ${maxSizeMB}MB`;\n  }\n\n  return null;\n}\n\n/**\n * Generates form analytics data\n */\nexport function generateFormAnalytics(\n  startTime: Date,\n  completionTime: Date | null,\n  stepTimes: Record<string, number>,\n  fieldInteractions: Record<string, number>,\n  validationErrors: Record<string, number>,\n  abandonmentPoint?: string\n) {\n  return {\n    startTime,\n    completionTime,\n    stepTimes,\n    fieldInteractions,\n    validationErrors,\n    abandonmentPoint,\n    totalTime: completionTime ? completionTime.getTime() - startTime.getTime() : null,\n    completionRate: completionTime ? 100 : 0,\n    errorRate: Object.values(validationErrors).reduce((sum, count) => sum + count, 0),\n    interactionCount: Object.values(fieldInteractions).reduce((sum, count) => sum + count, 0)\n  };\n}\n\n/**\n * Workspace-specific field type mappings\n */\nexport const WORKSPACE_FIELD_TYPES: Record<WorkspaceContext, string[]> = {\n  consultant: ['text', 'email', 'phone', 'textarea', 'select', 'date', 'time', 'currency', 'file'],\n  client: ['text', 'email', 'phone', 'textarea', 'select', 'date', 'file'],\n  admin: ['text', 'email', 'phone', 'textarea', 'select', 'date', 'time', 'currency', 'file', 'password', 'number'],\n  expert: ['text', 'email', 'phone', 'textarea', 'select', 'date', 'time', 'file'],\n  'tool-creator': ['text', 'email', 'phone', 'textarea', 'select', 'date', 'time', 'file', 'code', 'json'],\n  founder: ['text', 'email', 'phone', 'textarea', 'select', 'date', 'time', 'currency', 'file', 'password', 'number'],\n  neutral: ['text', 'email', 'phone', 'textarea', 'select', 'date', 'file']\n};\n\n/**\n * Gets allowed field types for a workspace context\n */\nexport function getAllowedFieldTypes(context: WorkspaceContext): string[] {\n  return WORKSPACE_FIELD_TYPES[context] || WORKSPACE_FIELD_TYPES.neutral;\n}\n\n/**\n * Checks if a field type is allowed in a workspace context\n */\nexport function isFieldTypeAllowed(fieldType: string, context: WorkspaceContext): boolean {\n  const allowedTypes = getAllowedFieldTypes(context);\n  return allowedTypes.includes(fieldType);\n}\n", "/**\n * FormTemplate Component\n * Reusable form template organism for THE WHEEL design system\n * Supports template management, customization, and sharing\n */\n\nimport { Button } from '@wheel/ui';\nimport { useCallback, useMemo, useState } from 'react';\nimport {\n  FormTemplateCategory,\n  FormTemplateMetadata,\n  FormTemplateProps,\n  FormTemplate as FormTemplateType,\n  UseFormTemplateReturn,\n  WorkspaceContext\n} from './types';\nimport {\n  debounce,\n  getVisibleFields\n} from './utils';\n\n/**\n * Custom hook for form template management\n */\nfunction useFormTemplate(\n  template: FormTemplateType | null,\n  options: {\n    autoSave?: boolean;\n    autoSaveInterval?: number;\n    onTemplateChange?: (template: FormTemplateType) => void;\n    onTemplateSave?: (template: FormTemplateType) => void;\n    context?: WorkspaceContext;\n    permissions?: string[];\n  } = {}\n): UseFormTemplateReturn {\n  const [currentTemplate, setCurrentTemplate] = useState<FormTemplateType | null>(template);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [lastSaved, setLastSaved] = useState<Date | null>(null);\n\n  // Auto-save functionality\n  const debouncedAutoSave = useMemo(() => {\n    if (!options.autoSave) return null;\n\n    return debounce((template: FormTemplateType) => {\n      setIsSaving(true);\n      // Auto-save logic would go here\n      setTimeout(() => {\n        setIsSaving(false);\n        setLastSaved(new Date());\n        setIsDirty(false);\n      }, 500);\n    }, options.autoSaveInterval || 2000);\n  }, [options.autoSave, options.autoSaveInterval]);\n\n  // Update template\n  const updateTemplate = useCallback((updates: Partial<FormTemplateType>) => {\n    if (!currentTemplate) return;\n\n    const updatedTemplate = { ...currentTemplate, ...updates };\n    setCurrentTemplate(updatedTemplate);\n    setIsDirty(true);\n\n    if (options.onTemplateChange) {\n      options.onTemplateChange(updatedTemplate);\n    }\n\n    // Trigger auto-save\n    if (debouncedAutoSave) {\n      debouncedAutoSave(updatedTemplate);\n    }\n  }, [currentTemplate, options, debouncedAutoSave]);\n\n  // Save template\n  const saveTemplate = useCallback(async () => {\n    if (!currentTemplate || !isDirty) return;\n\n    setIsSaving(true);\n    try {\n      if (options.onTemplateSave) {\n        options.onTemplateSave(currentTemplate);\n      }\n      setLastSaved(new Date());\n      setIsDirty(false);\n    } finally {\n      setIsSaving(false);\n    }\n  }, [currentTemplate, isDirty, options]);\n\n  // Start editing\n  const startEditing = useCallback(() => {\n    setIsEditing(true);\n  }, []);\n\n  // Stop editing\n  const stopEditing = useCallback(() => {\n    setIsEditing(false);\n  }, []);\n\n  // Cancel editing\n  const cancelEditing = useCallback(() => {\n    setCurrentTemplate(template);\n    setIsEditing(false);\n    setIsDirty(false);\n  }, [template]);\n\n  return {\n    currentTemplate,\n    isEditing,\n    isDirty,\n    isSaving,\n    lastSaved,\n    updateTemplate,\n    saveTemplate,\n    startEditing,\n    stopEditing,\n    cancelEditing\n  };\n}\n\n/**\n * Template metadata editor component\n */\ninterface TemplateMetadataEditorProps {\n  metadata: FormTemplateMetadata;\n  onMetadataChange: (metadata: FormTemplateMetadata) => void;\n  context?: WorkspaceContext;\n  disabled?: boolean;\n}\n\nfunction TemplateMetadataEditor({\n  metadata,\n  onMetadataChange,\n  context,\n  disabled = false\n}: TemplateMetadataEditorProps) {\n  const handleChange = (field: keyof FormTemplateMetadata, value: any) => {\n    onMetadataChange({\n      ...metadata,\n      [field]: value\n    });\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Template Name *\n          </label>\n          <input\n            type=\"text\"\n            value={metadata.name}\n            onChange={(e) => handleChange('name', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter template name\"\n            disabled={disabled}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Category\n          </label>\n          <select\n            value={metadata.category}\n            onChange={(e) => handleChange('category', e.target.value as FormTemplateCategory)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={disabled}\n          >\n            <option value=\"general\">General</option>\n            <option value=\"onboarding\">Onboarding</option>\n            <option value=\"survey\">Survey</option>\n            <option value=\"application\">Application</option>\n            <option value=\"feedback\">Feedback</option>\n            <option value=\"registration\">Registration</option>\n            <option value=\"contact\">Contact</option>\n            <option value=\"custom\">Custom</option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Description\n        </label>\n        <textarea\n          value={metadata.description || ''}\n          onChange={(e) => handleChange('description', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          placeholder=\"Describe what this template is for\"\n          rows={3}\n          disabled={disabled}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Version\n          </label>\n          <input\n            type=\"text\"\n            value={metadata.version}\n            onChange={(e) => handleChange('version', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"1.0.0\"\n            disabled={disabled}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Author\n          </label>\n          <input\n            type=\"text\"\n            value={metadata.author || ''}\n            onChange={(e) => handleChange('author', e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Template author\"\n            disabled={disabled}\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Estimated Time (minutes)\n          </label>\n          <input\n            type=\"number\"\n            value={metadata.estimatedTime || ''}\n            onChange={(e) => handleChange('estimatedTime', parseInt(e.target.value) || undefined)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"5\"\n            min=\"1\"\n            disabled={disabled}\n          />\n        </div>\n      </div>\n\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Tags\n        </label>\n        <input\n          type=\"text\"\n          value={metadata.tags?.join(', ') || ''}\n          onChange={(e) => handleChange('tags', e.target.value.split(',').map(tag => tag.trim()).filter(Boolean))}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          placeholder=\"tag1, tag2, tag3\"\n          disabled={disabled}\n        />\n        <p className=\"text-xs text-gray-500 mt-1\">Separate tags with commas</p>\n      </div>\n\n      <div className=\"flex items-center space-x-4\">\n        <label className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            checked={metadata.isPublic || false}\n            onChange={(e) => handleChange('isPublic', e.target.checked)}\n            className=\"mr-2\"\n            disabled={disabled}\n          />\n          <span className=\"text-sm text-gray-700\">Make template public</span>\n        </label>\n\n        <label className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            checked={metadata.isShared || false}\n            onChange={(e) => handleChange('isShared', e.target.checked)}\n            className=\"mr-2\"\n            disabled={disabled}\n          />\n          <span className=\"text-sm text-gray-700\">Allow sharing</span>\n        </label>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Template preview component\n */\ninterface TemplatePreviewProps {\n  template: FormTemplateType;\n  context?: WorkspaceContext;\n}\n\nfunction TemplatePreview({ template, context }: TemplatePreviewProps) {\n  const visibleFields = useMemo(() => {\n    return getVisibleFields(template.fields, {}, [], context);\n  }, [template.fields, context]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"border-b border-gray-200 pb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">{template.metadata.name}</h3>\n        {template.metadata.description && (\n          <p className=\"text-gray-600 mt-1\">{template.metadata.description}</p>\n        )}\n        <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-500\">\n          <span>Category: {template.metadata.category}</span>\n          <span>Version: {template.metadata.version}</span>\n          {template.metadata.estimatedTime && (\n            <span>Est. time: {template.metadata.estimatedTime} min</span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        <h4 className=\"font-medium text-gray-900\">Form Fields ({visibleFields.length})</h4>\n        <div className=\"grid grid-cols-1 gap-4\">\n          {visibleFields.map((field, index) => (\n            <div key={field.name} className=\"border border-gray-200 rounded-md p-3\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"font-medium text-sm text-gray-900\">\n                  {field.label}\n                  {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                </span>\n                <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                  {field.type}\n                </span>\n              </div>\n              {field.placeholder && (\n                <p className=\"text-xs text-gray-500\">Placeholder: {field.placeholder}</p>\n              )}\n              {field.validation && (\n                <p className=\"text-xs text-gray-500\">Validation: {JSON.stringify(field.validation)}</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {template.metadata.tags && template.metadata.tags.length > 0 && (\n        <div>\n          <h4 className=\"font-medium text-gray-900 mb-2\">Tags</h4>\n          <div className=\"flex flex-wrap gap-2\">\n            {template.metadata.tags.map((tag, index) => (\n              <span\n                key={index}\n                className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * Main FormTemplate component\n */\nexport function FormTemplate({\n  context = 'neutral',\n  template: initialTemplate,\n  mode = 'view',\n  onTemplateChange,\n  onTemplateSave,\n  onTemplateUse,\n  onTemplateShare,\n  onTemplateDelete,\n  autoSave = false,\n  autoSaveInterval = 2000,\n  permissions = [],\n  className = '',\n  loading = false,\n  disabled = false\n}: FormTemplateProps) {\n  // Mock workspace for now - replace with actual useWorkspace hook when available\n  const workspace = { type: 'neutral' };\n  const workspaceContext = context || workspace?.type || 'neutral';\n\n  const {\n    currentTemplate,\n    isEditing,\n    isDirty,\n    isSaving,\n    lastSaved,\n    updateTemplate,\n    saveTemplate,\n    startEditing,\n    stopEditing,\n    cancelEditing\n  } = useFormTemplate(initialTemplate || null, {\n    autoSave,\n    autoSaveInterval,\n    onTemplateChange,\n    onTemplateSave,\n    context: workspaceContext,\n    permissions\n  });\n\n  const handleMetadataChange = useCallback((metadata: FormTemplateMetadata) => {\n    updateTemplate({ metadata });\n  }, [updateTemplate]);\n\n  const handleUseTemplate = useCallback(() => {\n    if (currentTemplate && onTemplateUse) {\n      onTemplateUse(currentTemplate);\n    }\n  }, [currentTemplate, onTemplateUse]);\n\n  const handleShareTemplate = useCallback(() => {\n    if (currentTemplate && onTemplateShare) {\n      onTemplateShare(currentTemplate);\n    }\n  }, [currentTemplate, onTemplateShare]);\n\n  const handleDeleteTemplate = useCallback(() => {\n    if (currentTemplate && onTemplateDelete) {\n      onTemplateDelete(currentTemplate);\n    }\n  }, [currentTemplate, onTemplateDelete]);\n\n  const baseClasses = `\n    bg-white rounded-lg shadow-sm border border-gray-200 p-6\n    ${className}\n  `;\n\n  if (loading) {\n    return (\n      <div className={baseClasses}>\n        <div className=\"animate-pulse space-y-6\">\n          <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n          <div className=\"space-y-3\">\n            <div className=\"h-4 bg-gray-200 rounded\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentTemplate) {\n    return (\n      <div className={baseClasses}>\n        <div className=\"text-center py-8\">\n          <div className=\"text-gray-500\">No template selected</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={baseClasses}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {mode === 'edit' || isEditing ? 'Edit Template' : 'Template'}\n          </h2>\n          {lastSaved && (\n            <p className=\"text-sm text-gray-500\">\n              Last saved: {lastSaved.toLocaleTimeString()}\n            </p>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {mode === 'view' && !isEditing && (\n            <>\n              <Button\n                variant=\"secondary\"\n                onClick={handleUseTemplate}\n                disabled={disabled}\n              >\n                Use Template\n              </Button>\n              {currentTemplate.metadata.isShared && (\n                <Button\n                  variant=\"ghost\"\n                  onClick={handleShareTemplate}\n                  disabled={disabled}\n                >\n                  Share\n                </Button>\n              )}\n              <Button\n                variant=\"ghost\"\n                onClick={startEditing}\n                disabled={disabled}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n\n          {(mode === 'edit' || isEditing) && (\n            <>\n              <Button\n                variant=\"ghost\"\n                onClick={cancelEditing}\n                disabled={disabled || isSaving}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={saveTemplate}\n                disabled={disabled || !isDirty || isSaving}\n                isLoading={isSaving}\n              >\n                Save\n              </Button>\n            </>\n          )}\n\n          {mode === 'view' && !isEditing && onTemplateDelete && (\n            <Button\n              variant=\"ghost\"\n              onClick={handleDeleteTemplate}\n              disabled={disabled}\n              className=\"text-red-600 hover:text-red-700\"\n            >\n              Delete\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Content */}\n      {mode === 'edit' || isEditing ? (\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Template Information</h3>\n            <TemplateMetadataEditor\n              metadata={currentTemplate.metadata}\n              onMetadataChange={handleMetadataChange}\n              context={workspaceContext}\n              disabled={disabled || isSaving}\n            />\n          </div>\n\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Form Preview</h3>\n            <TemplatePreview\n              template={currentTemplate}\n              context={workspaceContext}\n            />\n          </div>\n        </div>\n      ) : (\n        <TemplatePreview\n          template={currentTemplate}\n          context={workspaceContext}\n        />\n      )}\n\n      {/* Auto-save indicator */}\n      {autoSave && isSaving && (\n        <div className=\"mt-4 text-xs text-gray-500 text-center\">\n          Saving...\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FormTemplate;\n", "/**\n * FormWizard Component\n * Multi-step form wizard organism for THE WHEEL design system\n * Supports workspace context, auto-save, and collaborative editing\n */\n\nimport { Button } from '@wheel/ui';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  FormState,\n  FormWizardProps,\n  FormWizardStep,\n  UseFormWizardReturn,\n  WorkspaceContext\n} from './types';\nimport {\n  debounce,\n  getVisibleFields,\n  hasUnsavedChanges,\n  validateForm\n} from './utils';\n\n/**\n * Custom hook for form wizard state management\n */\nfunction useFormWizard(\n  steps: FormWizardStep[],\n  initialData: Record<string, any> = {},\n  options: {\n    autoSave?: boolean;\n    autoSaveInterval?: number;\n    onStepChange?: (step: number, data: Record<string, any>) => void;\n    onComplete?: (data: Record<string, any>) => void;\n    context?: WorkspaceContext;\n    permissions?: string[];\n  } = {}\n): UseFormWizardReturn {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formState, setFormState] = useState<FormState>({\n    data: initialData,\n    errors: {},\n    touched: {},\n    isValid: false,\n    isSubmitting: false,\n    isDirty: false,\n    currentStep: 0\n  });\n\n  const totalSteps = steps.length;\n  const isFirstStep = currentStep === 0;\n  const isLastStep = currentStep === totalSteps - 1;\n\n  // Get current step configuration\n  const currentStepConfig = steps[currentStep];\n  const visibleFields = useMemo(() => {\n    if (!currentStepConfig) return [];\n    return getVisibleFields(\n      currentStepConfig.fields,\n      formState.data,\n      options.permissions,\n      options.context\n    );\n  }, [currentStepConfig, formState.data, options.permissions, options.context]);\n\n  // Validate current step\n  const validateCurrentStep = useCallback(() => {\n    if (!currentStepConfig) return true;\n\n    const stepErrors = validateForm(\n      visibleFields,\n      formState.data,\n      options.context\n    );\n\n    setFormState(prev => ({\n      ...prev,\n      errors: { ...prev.errors, ...stepErrors },\n      isValid: Object.keys(stepErrors).length === 0\n    }));\n\n    return Object.keys(stepErrors).length === 0;\n  }, [currentStepConfig, visibleFields, formState.data, options.context]);\n\n  // Check if can proceed to next step\n  const canGoNext = useMemo(() => {\n    if (isLastStep) return false;\n\n    // Check if current step is valid\n    const stepErrors = validateForm(\n      visibleFields,\n      formState.data,\n      options.context\n    );\n\n    return Object.keys(stepErrors).length === 0;\n  }, [isLastStep, visibleFields, formState.data, options.context]);\n\n  const canGoPrevious = !isFirstStep;\n\n  // Auto-save functionality\n  const debouncedAutoSave = useMemo(() => {\n    if (!options.autoSave) return null;\n\n    return debounce((data: Record<string, any>) => {\n      // Auto-save logic would go here\n      setFormState(prev => ({\n        ...prev,\n        lastSaved: new Date()\n      }));\n    }, options.autoSaveInterval || 2000);\n  }, [options.autoSave, options.autoSaveInterval]);\n\n  // Update form data\n  const setValue = useCallback((field: string, value: any) => {\n    setFormState(prev => {\n      const newData = { ...prev.data, [field]: value };\n      const newState = {\n        ...prev,\n        data: newData,\n        touched: { ...prev.touched, [field]: true },\n        isDirty: hasUnsavedChanges(newData, initialData)\n      };\n\n      // Trigger auto-save\n      if (debouncedAutoSave) {\n        debouncedAutoSave(newData);\n      }\n\n      return newState;\n    });\n  }, [debouncedAutoSave, initialData]);\n\n  // Set field error\n  const setError = useCallback((field: string, error: string) => {\n    setFormState(prev => ({\n      ...prev,\n      errors: { ...prev.errors, [field]: error }\n    }));\n  }, []);\n\n  // Clear field error\n  const clearError = useCallback((field: string) => {\n    setFormState(prev => {\n      const newErrors = { ...prev.errors };\n      delete newErrors[field];\n      return {\n        ...prev,\n        errors: newErrors\n      };\n    });\n  }, []);\n\n  // Navigate to next step\n  const nextStep = useCallback(() => {\n    if (!canGoNext) return;\n\n    const newStep = Math.min(currentStep + 1, totalSteps - 1);\n    setCurrentStep(newStep);\n    setFormState(prev => ({ ...prev, currentStep: newStep }));\n\n    if (options.onStepChange) {\n      options.onStepChange(newStep, formState.data);\n    }\n  }, [canGoNext, currentStep, totalSteps, formState.data, options]);\n\n  // Navigate to previous step\n  const previousStep = useCallback(() => {\n    if (!canGoPrevious) return;\n\n    const newStep = Math.max(currentStep - 1, 0);\n    setCurrentStep(newStep);\n    setFormState(prev => ({ ...prev, currentStep: newStep }));\n\n    if (options.onStepChange) {\n      options.onStepChange(newStep, formState.data);\n    }\n  }, [canGoPrevious, currentStep, formState.data, options]);\n\n  // Navigate to specific step\n  const goToStep = useCallback((step: number) => {\n    if (step < 0 || step >= totalSteps) return;\n\n    setCurrentStep(step);\n    setFormState(prev => ({ ...prev, currentStep: step }));\n\n    if (options.onStepChange) {\n      options.onStepChange(step, formState.data);\n    }\n  }, [totalSteps, formState.data, options]);\n\n  // Validate entire form\n  const validate = useCallback(() => {\n    return validateCurrentStep();\n  }, [validateCurrentStep]);\n\n  // Reset form\n  const reset = useCallback(() => {\n    setCurrentStep(0);\n    setFormState({\n      data: initialData,\n      errors: {},\n      touched: {},\n      isValid: false,\n      isSubmitting: false,\n      isDirty: false,\n      currentStep: 0\n    });\n  }, [initialData]);\n\n  // Submit form\n  const submit = useCallback(() => {\n    if (!isLastStep || !canGoNext) return;\n\n    setFormState(prev => ({ ...prev, isSubmitting: true }));\n\n    if (options.onComplete) {\n      options.onComplete(formState.data);\n    }\n  }, [isLastStep, canGoNext, formState.data, options]);\n\n  return {\n    formState,\n    setValue,\n    setError,\n    clearError,\n    validate,\n    reset,\n    submit,\n    currentStep,\n    totalSteps,\n    canGoNext,\n    canGoPrevious,\n    nextStep,\n    previousStep,\n    goToStep,\n    isFirstStep,\n    isLastStep\n  };\n}\n\n/**\n * Progress indicator component\n */\ninterface WizardProgressProps {\n  steps: FormWizardStep[];\n  currentStep: number;\n  completedSteps: number[];\n  context?: WorkspaceContext;\n}\n\nfunction WizardProgress({ steps, currentStep, completedSteps, context }: WizardProgressProps) {\n  const getStepStatus = (stepIndex: number) => {\n    if (completedSteps.includes(stepIndex)) return 'completed';\n    if (stepIndex === currentStep) return 'current';\n    if (stepIndex < currentStep) return 'completed';\n    return 'upcoming';\n  };\n\n  const getStepClasses = (stepIndex: number) => {\n    const status = getStepStatus(stepIndex);\n    const baseClasses = 'flex items-center justify-center w-8 h-8 rounded-full text-sm font-medium transition-colors';\n\n    switch (status) {\n      case 'completed':\n        return `${baseClasses} bg-green-500 text-white`;\n      case 'current':\n        return `${baseClasses} bg-blue-500 text-white ring-2 ring-blue-200`;\n      case 'upcoming':\n        return `${baseClasses} bg-gray-200 text-gray-500`;\n      default:\n        return baseClasses;\n    }\n  };\n\n  return (\n    <div className=\"mb-8\">\n      <div className=\"flex items-center justify-between\">\n        {steps.map((step, index) => (\n          <div key={step.id} className=\"flex items-center\">\n            <div className=\"flex flex-col items-center\">\n              <div className={getStepClasses(index)}>\n                {completedSteps.includes(index) ? (\n                  <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                  </svg>\n                ) : (\n                  <span>{index + 1}</span>\n                )}\n              </div>\n              <div className=\"mt-2 text-center\">\n                <div className=\"text-sm font-medium text-gray-900\">{step.title}</div>\n                {step.estimatedTime && (\n                  <div className=\"text-xs text-gray-500\">{step.estimatedTime} min</div>\n                )}\n              </div>\n            </div>\n            {index < steps.length - 1 && (\n              <div className=\"flex-1 mx-4 h-0.5 bg-gray-200\">\n                <div\n                  className=\"h-full bg-blue-500 transition-all duration-300\"\n                  style={{\n                    width: index < currentStep ? '100%' : '0%'\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Step content component\n */\ninterface WizardStepContentProps {\n  step: FormWizardStep;\n  formData: Record<string, any>;\n  errors: Record<string, string>;\n  onFieldChange: (field: string, value: any) => void;\n  context?: WorkspaceContext;\n  permissions?: string[];\n}\n\nfunction WizardStepContent({\n  step,\n  formData,\n  errors,\n  onFieldChange,\n  context,\n  permissions\n}: WizardStepContentProps) {\n  const visibleFields = getVisibleFields(step.fields, formData, permissions, context);\n\n  return (\n    <div className=\"space-y-6\">\n      {step.description && (\n        <div className=\"text-gray-600 mb-6\">\n          {step.description}\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 gap-6\">\n        {visibleFields.map((field) => (\n          <div key={field.name} className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              {field.label}\n              {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n            </label>\n            <input\n              type={field.type || 'text'}\n              value={formData[field.name] || ''}\n              onChange={(e) => onFieldChange(field.name, e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder={field.placeholder}\n              disabled={(field as any).disabled || false}\n            />\n            {errors[field.name] && (\n              <p className=\"text-sm text-red-600\">{errors[field.name]}</p>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Main FormWizard component\n */\nexport function FormWizard({\n  context = 'neutral',\n  steps,\n  initialData = {},\n  currentStep: controlledCurrentStep,\n  onStepChange,\n  onComplete,\n  onCancel,\n  template,\n  workspaceId,\n  autoSave = false,\n  autoSaveInterval = 2000,\n  showProgress = true,\n  allowStepSkip = false,\n  allowStepBack = true,\n  permissions = [],\n  className = '',\n  loading = false,\n  disabled = false\n}: FormWizardProps) {\n  // Mock workspace for now - replace with actual useWorkspace hook when available\n  const workspace = { type: 'neutral' };\n  const workspaceContext = context || workspace?.type || 'neutral';\n\n  // Use controlled or uncontrolled step management\n  const isControlled = controlledCurrentStep !== undefined;\n\n  const {\n    formState,\n    setValue,\n    setError,\n    clearError,\n    validate,\n    reset,\n    submit,\n    currentStep: internalCurrentStep,\n    totalSteps,\n    canGoNext,\n    canGoPrevious,\n    nextStep: internalNextStep,\n    previousStep: internalPreviousStep,\n    goToStep: internalGoToStep,\n    isFirstStep,\n    isLastStep\n  } = useFormWizard(steps, initialData, {\n    autoSave,\n    autoSaveInterval,\n    onStepChange,\n    onComplete,\n    context: workspaceContext,\n    permissions\n  });\n\n  const currentStep = isControlled ? controlledCurrentStep! : internalCurrentStep;\n  const nextStep = isControlled ? () => onStepChange?.(currentStep + 1, formState.data) : internalNextStep;\n  const previousStep = isControlled ? () => onStepChange?.(currentStep - 1, formState.data) : internalPreviousStep;\n  const goToStep = isControlled ? (step: number) => onStepChange?.(step, formState.data) : internalGoToStep;\n\n  // Track completed steps\n  const [completedSteps, setCompletedSteps] = useState<number[]>([]);\n\n  // Update completed steps when moving forward\n  useEffect(() => {\n    if (currentStep > 0 && !completedSteps.includes(currentStep - 1)) {\n      setCompletedSteps(prev => [...prev, currentStep - 1]);\n    }\n  }, [currentStep, completedSteps]);\n\n  // Get current step configuration\n  const currentStepConfig = steps[currentStep];\n\n  if (!currentStepConfig) {\n    return (\n      <div className=\"text-center py-8\">\n        <div className=\"text-red-600\">Invalid step configuration</div>\n      </div>\n    );\n  }\n\n  // Calculate overall progress\n  const overallProgress = Math.round(((currentStep + 1) / totalSteps) * 100);\n\n  const handleFieldChange = (field: string, value: any) => {\n    setValue(field, value);\n    clearError(field);\n  };\n\n  const handleNext = () => {\n    if (validate()) {\n      nextStep();\n    }\n  };\n\n  const handleComplete = () => {\n    if (validate()) {\n      submit();\n    }\n  };\n\n  const baseClasses = `\n    bg-white rounded-lg shadow-sm border border-gray-200 p-6\n    ${className}\n  `;\n\n  if (loading) {\n    return (\n      <div className={baseClasses}>\n        <div className=\"animate-pulse space-y-6\">\n          <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n          <div className=\"space-y-3\">\n            <div className=\"h-4 bg-gray-200 rounded\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={baseClasses}>\n      {/* Progress indicator */}\n      {showProgress && (\n        <WizardProgress\n          steps={steps}\n          currentStep={currentStep}\n          completedSteps={completedSteps}\n          context={workspaceContext}\n        />\n      )}\n\n      {/* Step header */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {currentStepConfig.title}\n          </h2>\n          <div className=\"text-sm text-gray-500\">\n            Step {currentStep + 1} of {totalSteps} ({overallProgress}%)\n          </div>\n        </div>\n\n        {/* Progress bar */}\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div\n            className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${overallProgress}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Step content */}\n      <WizardStepContent\n        step={currentStepConfig}\n        formData={formState.data}\n        errors={formState.errors}\n        onFieldChange={handleFieldChange}\n        context={workspaceContext}\n        permissions={permissions}\n      />\n\n      {/* Navigation */}\n      <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n        <div className=\"flex items-center space-x-3\">\n          {allowStepBack && canGoPrevious && (\n            <Button\n              variant=\"secondary\"\n              onClick={previousStep}\n              disabled={disabled || formState.isSubmitting}\n            >\n              Previous\n            </Button>\n          )}\n\n          {onCancel && (\n            <Button\n              variant=\"ghost\"\n              onClick={onCancel}\n              disabled={disabled || formState.isSubmitting}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-3\">\n          {allowStepSkip && !isLastStep && (\n            <Button\n              variant=\"ghost\"\n              onClick={nextStep}\n              disabled={disabled || formState.isSubmitting}\n            >\n              Skip\n            </Button>\n          )}\n\n          {isLastStep ? (\n            <Button\n              variant=\"primary\"\n              onClick={handleComplete}\n              disabled={disabled || !canGoNext || formState.isSubmitting}\n              isLoading={formState.isSubmitting}\n            >\n              Complete\n            </Button>\n          ) : (\n            <Button\n              variant=\"primary\"\n              onClick={handleNext}\n              disabled={disabled || !canGoNext || formState.isSubmitting}\n            >\n              Next\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Auto-save indicator */}\n      {autoSave && formState.lastSaved && (\n        <div className=\"mt-4 text-xs text-gray-500 text-center\">\n          Last saved: {formState.lastSaved.toLocaleTimeString()}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FormWizard;\n", "import { Avatar, Badge, Button, EmptyState, Icon, Input, Spinner } from '@wheel/ui';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { cn } from '../../../lib/utils';\nimport {\n  Chat,\n  ChatInterfaceProps,\n  Message,\n  TypingIndicator,\n  User,\n  WorkspaceContext\n} from '../types';\n\n// Mock hook for real-time collaboration - would be replaced with actual implementation\nconst useRealTimeCollaboration = () => {\n  return {\n    socket: {\n      on: (event: string, handler: Function) => {},\n      off: (event: string) => {},\n      emit: (event: string, data: any) => {}\n    }\n  };\n};\n\n// Mock hook for workspace permissions - would be replaced with actual implementation\nconst useWorkspace = () => {\n  return {\n    hasPermission: (permission: string) => true\n  };\n};\n\n// Utility function to format dates\nconst formatDate = (date: Date) => {\n  const now = new Date();\n  const diff = now.getTime() - date.getTime();\n  const minutes = Math.floor(diff / 60000);\n  const hours = Math.floor(diff / 3600000);\n  const days = Math.floor(diff / 86400000);\n\n  if (minutes < 1) return 'Just now';\n  if (minutes < 60) return `${minutes}m ago`;\n  if (hours < 24) return `${hours}h ago`;\n  if (days < 7) return `${days}d ago`;\n  return date.toLocaleDateString();\n};\n\n// Chat List Component\ninterface ChatListProps {\n  chats: Chat[];\n  selectedChat: Chat | null;\n  onChatSelect: (chat: Chat) => void;\n  context?: WorkspaceContext;\n  currentUser: User;\n}\n\nconst ChatList: React.FC<ChatListProps> = ({\n  chats,\n  selectedChat,\n  onChatSelect,\n  context = 'consultant',\n  currentUser\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredChats = useMemo(() => {\n    if (!searchQuery) return chats;\n    return chats.filter(chat =>\n      chat.name?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      chat.participants.some(p => p.name.toLowerCase().includes(searchQuery.toLowerCase()))\n    );\n  }, [chats, searchQuery]);\n\n  const getContextStyles = (context: WorkspaceContext) => {\n    const styles = {\n      consultant: 'border-l-blue-500 bg-blue-50',\n      client: 'border-l-green-500 bg-green-50',\n      admin: 'border-l-purple-500 bg-purple-50',\n      expert: 'border-l-orange-500 bg-orange-50',\n      tool_creator: 'border-l-indigo-500 bg-indigo-50',\n      founder: 'border-l-red-500 bg-red-50',\n      neutral: 'border-l-gray-500 bg-gray-50'\n    };\n    return styles[context] || 'border-l-gray-500 bg-gray-50';\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white border-r border-gray-200\">\n      <div className=\"p-4 border-b border-gray-200\">\n        <div className=\"relative\">\n          <Icon name=\"Search\" className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n          <Input\n            name=\"search\"\n            placeholder=\"Search conversations...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex-1 overflow-y-auto\">\n        {filteredChats.length === 0 ? (\n          <EmptyState\n            title={searchQuery ? \"No conversations found\" : \"No conversations yet\"}\n            description=\"Start a new conversation to get started\"\n          />\n        ) : (\n          <div className=\"space-y-1 p-2\">\n            {filteredChats.map((chat) => (\n              <div\n                key={chat.id}\n                onClick={() => onChatSelect(chat)}\n                className={cn(\n                  \"flex items-center p-3 rounded-lg cursor-pointer transition-colors border-l-4\",\n                  selectedChat?.id === chat.id\n                    ? getContextStyles(context)\n                    : \"border-l-transparent hover:bg-gray-50\"\n                )}\n              >\n                <div className=\"flex-shrink-0 mr-3\">\n                  {chat.type === 'direct' ? (\n                    <Avatar\n                      src={chat.participants.find(p => p.id !== currentUser.id)?.avatar || chat.participants[0]?.avatar}\n                      alt={chat.participants.find(p => p.id !== currentUser.id)?.name || chat.participants[0]?.name}\n                      size=\"md\"\n                    />\n                  ) : (\n                    <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center\">\n                      <Icon name=\"Users\" className=\"w-5 h-5 text-gray-600\" />\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-sm font-medium text-gray-900 truncate\">\n                      {chat.name || chat.participants\n                        .filter(p => p.id !== currentUser.id)\n                        .map(p => p.name)\n                        .join(', ')}\n                    </h3>\n                    {chat.lastMessage && (\n                      <span className=\"text-xs text-gray-500\">\n                        {formatDate(chat.lastMessage.timestamp)}\n                      </span>\n                    )}\n                  </div>\n\n                  <div className=\"flex items-center justify-between mt-1\">\n                    <p className=\"text-sm text-gray-600 truncate\">\n                      {chat.lastMessage?.content || 'No messages yet'}\n                    </p>\n                    {chat.unreadCount > 0 && (\n                      <Badge variant=\"primary\" size=\"sm\">\n                        {chat.unreadCount}\n                      </Badge>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Chat Header Component\ninterface ChatHeaderProps {\n  chat: Chat;\n  context?: WorkspaceContext;\n  currentUser: User;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({ chat, context = 'consultant', currentUser }) => {\n  const getContextColor = (context: WorkspaceContext) => {\n    const colors = {\n      consultant: 'text-blue-600',\n      client: 'text-green-600',\n      admin: 'text-purple-600',\n      expert: 'text-orange-600',\n      tool_creator: 'text-indigo-600',\n      founder: 'text-red-600',\n      neutral: 'text-gray-600'\n    };\n    return colors[context] || 'text-gray-600';\n  };\n\n  return (\n    <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-white\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0 mr-3\">\n          {chat.type === 'direct' ? (\n            <Avatar\n              src={chat.participants.find(p => p.id !== currentUser.id)?.avatar || chat.participants[0]?.avatar}\n              alt={chat.participants.find(p => p.id !== currentUser.id)?.name || chat.participants[0]?.name}\n              size=\"md\"\n            />\n          ) : (\n            <div className=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center\">\n              <Icon name=\"Users\" className=\"w-5 h-5 text-gray-600\" />\n            </div>\n          )}\n        </div>\n\n        <div>\n          <h2 className=\"text-lg font-semibold text-gray-900\">\n            {chat.name || chat.participants\n              .filter(p => p.id !== currentUser.id)\n              .map(p => p.name)\n              .join(', ')}\n          </h2>\n          <p className={cn(\"text-sm\", getContextColor(context as WorkspaceContext))}>\n            {chat.participants.length} participant{chat.participants.length !== 1 ? 's' : ''}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\">\n          <Icon name=\"Phone\" className=\"w-4 h-4\" />\n        </Button>\n        <Button variant=\"ghost\" size=\"sm\">\n          <Icon name=\"Video\" className=\"w-4 h-4\" />\n        </Button>\n        <Button variant=\"ghost\" size=\"sm\">\n          <Icon name=\"Info\" className=\"w-4 h-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n// Message List Component\ninterface MessageListProps {\n  messages: Message[];\n  currentUser: User;\n  context?: WorkspaceContext;\n  onMessageReply?: (message: Message) => void;\n  onMessageReact?: (message: Message, reaction: string) => void;\n  loading?: boolean;\n}\n\nconst MessageList: React.FC<MessageListProps> = ({\n  messages,\n  currentUser,\n  context = 'consultant',\n  onMessageReply,\n  onMessageReact,\n  loading\n}) => {\n  const getContextColor = (context: WorkspaceContext) => {\n    const colors = {\n      consultant: 'bg-blue-500',\n      client: 'bg-green-500',\n      admin: 'bg-purple-500',\n      expert: 'bg-orange-500',\n      tool_creator: 'bg-indigo-500',\n      founder: 'bg-red-500',\n      neutral: 'bg-gray-500'\n    };\n    return colors[context] || 'bg-gray-500';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center\">\n        <Spinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (messages.length === 0) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center\">\n        <EmptyState\n          title=\"No messages yet\"\n          description=\"Start the conversation!\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n      {messages.map((message) => {\n        const isOwnMessage = message.sender.id === currentUser.id;\n\n        return (\n          <div\n            key={message.id}\n            className={cn(\n              \"flex\",\n              isOwnMessage ? \"justify-end\" : \"justify-start\"\n            )}\n          >\n            <div className={cn(\"flex max-w-xs lg:max-w-md\", isOwnMessage ? \"flex-row-reverse\" : \"flex-row\")}>\n              {!isOwnMessage && (\n                <Avatar\n                  src={message.sender.avatar}\n                  alt={message.sender.name}\n                  size=\"sm\"\n                  className=\"flex-shrink-0 mr-2\"\n                />\n              )}\n\n              <div className={cn(\"flex flex-col\", isOwnMessage ? \"items-end\" : \"items-start\")}>\n                {!isOwnMessage && (\n                  <span className=\"text-xs text-gray-500 mb-1\">{message.sender.name}</span>\n                )}\n\n                <div\n                  className={cn(\n                    \"px-4 py-2 rounded-lg\",\n                    isOwnMessage\n                      ? cn(\"text-white\", getContextColor(context as WorkspaceContext))\n                      : \"bg-gray-100 text-gray-900\"\n                  )}\n                >\n                  <p className=\"text-sm\">{message.content}</p>\n\n                  {message.attachments && message.attachments.length > 0 && (\n                    <div className=\"mt-2 space-y-1\">\n                      {message.attachments.map((attachment) => (\n                        <div key={attachment.id} className=\"flex items-center space-x-2 text-xs\">\n                          <Icon name=\"Paperclip\" className=\"w-3 h-3\" />\n                          <span>{attachment.name}</span>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex items-center mt-1 space-x-2\">\n                  <span className=\"text-xs text-gray-500\">\n                    {formatDate(message.timestamp)}\n                  </span>\n\n                  {message.status === 'read' && isOwnMessage && (\n                    <Icon name=\"CheckCheck\" className=\"w-3 h-3 text-blue-500\" />\n                  )}\n\n                  {message.reactions && message.reactions.length > 0 && (\n                    <div className=\"flex space-x-1\">\n                      {message.reactions.map((reaction, index) => (\n                        <span key={index} className=\"text-xs bg-gray-200 px-1 rounded\">\n                          {reaction.emoji} {reaction.users.length}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\n// Message Input Component\ninterface MessageInputProps {\n  onSend: (content: string, attachments?: File[]) => void;\n  onTyping?: () => void;\n  context?: WorkspaceContext;\n  placeholder?: string;\n  disabled?: boolean;\n}\n\nconst MessageInput: React.FC<MessageInputProps> = ({\n  onSend,\n  onTyping,\n  context = 'consultant',\n  placeholder = \"Type a message...\",\n  disabled\n}) => {\n  const [message, setMessage] = useState('');\n  const [attachments, setAttachments] = useState<File[]>([]);\n\n  const handleSend = () => {\n    if (message.trim() || attachments.length > 0) {\n      onSend(message.trim(), attachments);\n      setMessage('');\n      setAttachments([]);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const getContextColor = (context: WorkspaceContext) => {\n    const colors = {\n      consultant: 'text-blue-600 hover:text-blue-700',\n      client: 'text-green-600 hover:text-green-700',\n      admin: 'text-purple-600 hover:text-purple-700',\n      expert: 'text-orange-600 hover:text-orange-700',\n      tool_creator: 'text-indigo-600 hover:text-indigo-700',\n      founder: 'text-red-600 hover:text-red-700',\n      neutral: 'text-gray-600 hover:text-gray-700'\n    };\n    return colors[context] || 'text-gray-600 hover:text-gray-700';\n  };\n\n  return (\n    <div className=\"p-4 border-t border-gray-200 bg-white\">\n      <div className=\"flex items-end space-x-2\">\n        <div className=\"flex-1\">\n          <div className=\"relative\">\n            <textarea\n              value={message}\n              onChange={(e) => {\n                setMessage(e.target.value);\n                onTyping?.();\n              }}\n              onKeyPress={handleKeyPress}\n              placeholder={placeholder}\n              disabled={disabled}\n              className=\"w-full p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              rows={1}\n              style={{ minHeight: '44px', maxHeight: '120px' }}\n            />\n\n            {attachments.length > 0 && (\n              <div className=\"mt-2 flex flex-wrap gap-2\">\n                {attachments.map((file, index) => (\n                  <div key={index} className=\"flex items-center space-x-2 bg-gray-100 px-2 py-1 rounded text-sm\">\n                    <Icon name=\"Paperclip\" className=\"w-3 h-3\" />\n                    <span>{file.name}</span>\n                    <button\n                      onClick={() => setAttachments(prev => prev.filter((_, i) => i !== index))}\n                      className=\"text-gray-500 hover:text-red-500\"\n                    >\n                      <Icon name=\"X\" className=\"w-3 h-3\" />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => {\n              if (e.target.files) {\n                setAttachments(prev => [...prev, ...Array.from(e.target.files!)]);\n              }\n            }}\n            className=\"hidden\"\n            id=\"file-upload\"\n          />\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => document.getElementById('file-upload')?.click()}\n            disabled={disabled}\n          >\n            <Icon name=\"Paperclip\" className=\"w-4 h-4\" />\n          </Button>\n\n          <Button\n            onClick={handleSend}\n            disabled={disabled || (!message.trim() && attachments.length === 0)}\n            className={cn(\"px-4 py-2\", getContextColor(context as WorkspaceContext))}\n          >\n            <Icon name=\"Send\" className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Main ChatInterface Component\nexport const ChatInterface: React.FC<ChatInterfaceProps> = ({\n  workspace,\n  currentUser,\n  chatId,\n  context = 'consultant',\n  onMessageSend,\n  onChatSelect,\n  showSidebar = true,\n  showSearch = true,\n  permissions = [],\n  className\n}) => {\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [loading, setLoading] = useState(false);\n  const { socket } = useRealTimeCollaboration();\n  const { hasPermission } = useWorkspace();\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // In a real implementation, this would fetch chats from an API\n    const mockChats: Chat[] = [\n      {\n        id: '1',\n        type: 'direct',\n        participants: [\n          currentUser,\n          { id: '2', name: 'John Doe', email: 'john@example.com', avatar: '/avatars/john.jpg' }\n        ],\n        unreadCount: 2,\n        workspace: workspace.id,\n        createdAt: new Date(),\n        lastMessage: {\n          id: '1',\n          content: 'Hey, how are you?',\n          sender: { id: '2', name: 'John Doe', email: 'john@example.com' },\n          timestamp: new Date(),\n          chatId: '1',\n          status: 'read'\n        }\n      }\n    ];\n    setChats(mockChats);\n\n    if (chatId) {\n      const chat = mockChats.find(c => c.id === chatId);\n      if (chat) setSelectedChat(chat);\n    }\n  }, [workspace.id, currentUser, chatId]);\n\n  // Set up real-time listeners\n  useEffect(() => {\n    socket.on('message:new', handleNewMessage);\n    socket.on('message:update', handleMessageUpdate);\n    socket.on('typing:start', handleTypingStart);\n    socket.on('typing:stop', handleTypingStop);\n\n    return () => {\n      socket.off('message:new');\n      socket.off('message:update');\n      socket.off('typing:start');\n      socket.off('typing:stop');\n    };\n  }, [socket]);\n\n  const handleNewMessage = (message: Message) => {\n    setMessages(prev => [...prev, message]);\n  };\n\n  const handleMessageUpdate = (message: Message) => {\n    setMessages(prev => prev.map(m => m.id === message.id ? message : m));\n  };\n\n  const handleTypingStart = (indicator: TypingIndicator) => {\n    // Handle typing indicator\n  };\n\n  const handleTypingStop = (indicator: TypingIndicator) => {\n    // Handle typing indicator stop\n  };\n\n  const handleChatSelect = (chat: Chat) => {\n    setSelectedChat(chat);\n    onChatSelect?.(chat);\n\n    // Load messages for selected chat\n    setLoading(true);\n    // In a real implementation, this would fetch messages from an API\n    setTimeout(() => {\n      const mockMessages: Message[] = [\n        {\n          id: '1',\n          content: 'Hey, how are you?',\n          sender: chat.participants.find(p => p.id !== currentUser.id) || chat.participants[0],\n          timestamp: new Date(Date.now() - 3600000),\n          chatId: chat.id,\n          status: 'read'\n        },\n        {\n          id: '2',\n          content: 'I\\'m doing well, thanks! How about you?',\n          sender: currentUser,\n          timestamp: new Date(Date.now() - 3000000),\n          chatId: chat.id,\n          status: 'read'\n        }\n      ];\n      setMessages(mockMessages);\n      setLoading(false);\n    }, 500);\n  };\n\n  const handleSendMessage = (content: string, attachments?: File[]) => {\n    if (!selectedChat) return;\n\n    const newMessage: Message = {\n      id: Date.now().toString(),\n      content,\n      sender: currentUser,\n      timestamp: new Date(),\n      chatId: selectedChat.id,\n      status: 'sending',\n      attachments: attachments?.map(file => ({\n        id: Date.now().toString(),\n        name: file.name,\n        type: file.type,\n        size: file.size,\n        url: URL.createObjectURL(file)\n      }))\n    };\n\n    setMessages(prev => [...prev, newMessage]);\n    onMessageSend?.(newMessage);\n\n    // Simulate message sending\n    setTimeout(() => {\n      setMessages(prev => prev.map(m =>\n        m.id === newMessage.id ? { ...m, status: 'sent' as const } : m\n      ));\n    }, 1000);\n  };\n\n  return (\n    <div className={cn(\"flex h-full bg-white rounded-lg shadow-lg overflow-hidden\", className)}>\n      {showSidebar && (\n        <div className=\"w-80 flex-shrink-0\">\n          <ChatList\n            chats={chats}\n            selectedChat={selectedChat}\n            onChatSelect={handleChatSelect}\n            context={context}\n            currentUser={currentUser}\n          />\n        </div>\n      )}\n\n      <div className=\"flex-1 flex flex-col\">\n        {selectedChat ? (\n          <>\n            <ChatHeader\n              chat={selectedChat}\n              context={context}\n              currentUser={currentUser}\n            />\n            <MessageList\n              messages={messages}\n              currentUser={currentUser}\n              context={context}\n              loading={loading}\n            />\n            <MessageInput\n              onSend={handleSendMessage}\n              context={context}\n              placeholder=\"Type a message...\"\n              disabled={!hasPermission('chat:send')}\n            />\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <EmptyState\n              title=\"Select a conversation\"\n              description=\"Choose a conversation from the sidebar to start chatting\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n", "import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n", "/**\n * CommentThread Component\n *\n * A comprehensive comment thread component that displays comments with replies,\n * supports real-time updates, and provides full comment management functionality.\n */\n\nimport { Avatar, Badge, Button, Icon } from '@wheel/ui';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { cn } from '../../../lib/utils';\nimport {\n  CommentThreadProps,\n  ExtendedComment,\n  formatCommentTimestamp,\n  getCommentPriorityColor,\n  getCommentTheme\n} from './types';\n\n// Comment Input Component\ninterface CommentInputProps {\n  onSubmit: (content: string) => void;\n  onCancel?: () => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst CommentInput: React.FC<CommentInputProps> = ({\n  onSubmit,\n  onCancel,\n  placeholder = \"Write a comment...\",\n  autoFocus = false,\n  className\n}) => {\n  const [content, setContent] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!content.trim() || isSubmitting) return;\n\n    setIsSubmitting(true);\n    try {\n      await onSubmit(content.trim());\n      setContent('');\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [content, onSubmit, isSubmitting]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n      handleSubmit(e);\n    }\n    if (e.key === 'Escape' && onCancel) {\n      onCancel();\n    }\n  }, [handleSubmit, onCancel]);\n\n  return (\n    <form onSubmit={handleSubmit} className={cn(\"space-y-3\", className)}>\n      <textarea\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        autoFocus={autoFocus}\n        rows={3}\n        className=\"w-full px-3 py-2 border border-gray-300 rounded-md resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n      />\n      <div className=\"flex items-center justify-between\">\n        <span className=\"text-xs text-gray-500\">\n          Press Cmd+Enter to submit\n        </span>\n        <div className=\"flex items-center space-x-2\">\n          {onCancel && (\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onCancel}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            size=\"sm\"\n            disabled={!content.trim() || isSubmitting}\n          >\n            {isSubmitting ? 'Posting...' : 'Comment'}\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\n// Comment Item Component\ninterface CommentItemProps {\n  comment: ExtendedComment;\n  currentUser: any;\n  context?: string;\n  depth?: number;\n  onReply?: (parentId: string, content: string) => void;\n  onResolve?: (commentId: string) => void;\n  onEdit?: (commentId: string, content: string) => void;\n  onDelete?: (commentId: string) => void;\n  onReact?: (commentId: string, emoji: string) => void;\n  allowReplies?: boolean;\n  allowResolution?: boolean;\n  allowEditing?: boolean;\n  permissions?: string[];\n}\n\nconst CommentItem: React.FC<CommentItemProps> = ({\n  comment,\n  currentUser,\n  context = 'neutral',\n  depth = 0,\n  onReply,\n  onResolve,\n  onEdit,\n  onDelete,\n  onReact,\n  allowReplies = true,\n  allowResolution = true,\n  allowEditing = true,\n  permissions = []\n}) => {\n  const [isReplying, setIsReplying] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editContent, setEditContent] = useState(comment.content);\n  const [showActions, setShowActions] = useState(false);\n\n  const theme = getCommentTheme(context as any);\n  const isAuthor = comment.author.id === currentUser?.id;\n  const canReply = allowReplies && permissions.includes('comment:reply');\n  const canResolve = allowResolution && (permissions.includes('comment:resolve') || isAuthor);\n  const canEdit = allowEditing && (permissions.includes('comment:edit') || isAuthor);\n  const canDelete = permissions.includes('comment:delete') || isAuthor;\n\n  const handleReply = useCallback((content: string) => {\n    if (onReply) {\n      onReply(comment.id, content);\n      setIsReplying(false);\n    }\n  }, [comment.id, onReply]);\n\n  const handleEdit = useCallback(() => {\n    if (onEdit && editContent.trim() !== comment.content) {\n      onEdit(comment.id, editContent.trim());\n    }\n    setIsEditing(false);\n  }, [comment.id, comment.content, editContent, onEdit]);\n\n  const handleReaction = useCallback((emoji: string) => {\n    if (onReact) {\n      onReact(comment.id, emoji);\n    }\n  }, [comment.id, onReact]);\n\n  const priorityColor = comment.priority ? getCommentPriorityColor(comment.priority, theme) : undefined;\n\n  return (\n    <div\n      className={cn(\n        \"group relative\",\n        depth > 0 && \"ml-8 border-l-2 border-gray-100 pl-4\"\n      )}\n      onMouseEnter={() => setShowActions(true)}\n      onMouseLeave={() => setShowActions(false)}\n    >\n      {/* Priority indicator */}\n      {comment.priority && comment.priority !== 'low' && (\n        <div\n          className=\"absolute -left-1 top-3 w-2 h-2 rounded-full\"\n          style={{ backgroundColor: priorityColor }}\n        />\n      )}\n\n      <div className=\"flex space-x-3\">\n        <Avatar\n          src={comment.author.avatar}\n          alt={comment.author.name}\n          size=\"sm\"\n          className=\"flex-shrink-0\"\n        />\n\n        <div className=\"flex-1 min-w-0\">\n          {/* Comment Header */}\n          <div className=\"flex items-center space-x-2 mb-1\">\n            <span className=\"font-medium text-sm text-gray-900\">\n              {comment.author.name}\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              {formatCommentTimestamp(comment.timestamp)}\n            </span>\n            {comment.edited && (\n              <span className=\"text-xs text-gray-400\">(edited)</span>\n            )}\n            {comment.resolved && (\n              <Badge variant=\"success\" size=\"sm\">\n                Resolved\n              </Badge>\n            )}\n            {comment.priority && comment.priority !== 'low' && (\n              <Badge\n                variant=\"secondary\"\n                size=\"sm\"\n                className=\"border\"\n              >\n                {comment.priority}\n              </Badge>\n            )}\n          </div>\n\n          {/* Comment Content */}\n          <div className=\"mb-2\">\n            {isEditing ? (\n              <div className=\"space-y-2\">\n                <textarea\n                  value={editContent}\n                  onChange={(e) => setEditContent(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md resize-none focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={3}\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <Button size=\"sm\" onClick={handleEdit}>\n                    Save\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => {\n                      setIsEditing(false);\n                      setEditContent(comment.content);\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n                {comment.content}\n              </div>\n            )}\n          </div>\n\n          {/* Tags */}\n          {comment.tags && comment.tags.length > 0 && (\n            <div className=\"flex flex-wrap gap-1 mb-2\">\n              {comment.tags.map((tag) => (\n                <Badge key={tag} variant=\"secondary\" size=\"sm\">\n                  {tag}\n                </Badge>\n              ))}\n            </div>\n          )}\n\n          {/* Reactions */}\n          {comment.reactions && comment.reactions.length > 0 && (\n            <div className=\"flex items-center space-x-1 mb-2\">\n              {comment.reactions.map((reaction) => (\n                <button\n                  key={reaction.emoji}\n                  onClick={() => handleReaction(reaction.emoji)}\n                  className=\"flex items-center space-x-1 px-2 py-1 rounded-full bg-gray-100 hover:bg-gray-200 text-xs\"\n                >\n                  <span>{reaction.emoji}</span>\n                  <span>{reaction.users.length}</span>\n                </button>\n              ))}\n            </div>\n          )}\n\n          {/* Actions */}\n          <div className={cn(\n            \"flex items-center space-x-3 text-xs text-gray-500 transition-opacity\",\n            showActions ? \"opacity-100\" : \"opacity-0\"\n          )}>\n            {canReply && !comment.resolved && (\n              <button\n                onClick={() => setIsReplying(true)}\n                className=\"hover:text-gray-700\"\n              >\n                Reply\n              </button>\n            )}\n            {canEdit && !comment.resolved && (\n              <button\n                onClick={() => setIsEditing(true)}\n                className=\"hover:text-gray-700\"\n              >\n                Edit\n              </button>\n            )}\n            {canResolve && !comment.resolved && (\n              <button\n                onClick={() => onResolve?.(comment.id)}\n                className=\"hover:text-gray-700\"\n              >\n                Resolve\n              </button>\n            )}\n            <button\n              onClick={() => handleReaction('👍')}\n              className=\"hover:text-gray-700\"\n            >\n              👍\n            </button>\n            <button\n              onClick={() => handleReaction('❤️')}\n              className=\"hover:text-gray-700\"\n            >\n              ❤️\n            </button>\n            {canDelete && (\n              <button\n                onClick={() => onDelete?.(comment.id)}\n                className=\"hover:text-red-600\"\n              >\n                Delete\n              </button>\n            )}\n          </div>\n\n          {/* Reply Input */}\n          {isReplying && (\n            <div className=\"mt-3\">\n              <CommentInput\n                onSubmit={handleReply}\n                onCancel={() => setIsReplying(false)}\n                placeholder=\"Write a reply...\"\n                autoFocus\n              />\n            </div>\n          )}\n\n          {/* Replies */}\n          {comment.replies && comment.replies.length > 0 && (\n            <div className=\"mt-4 space-y-4\">\n              {comment.replies.map((reply) => (\n                <CommentItem\n                  key={reply.id}\n                  comment={reply}\n                  currentUser={currentUser}\n                  context={context}\n                  depth={depth + 1}\n                  onReply={onReply}\n                  onResolve={onResolve}\n                  onEdit={onEdit}\n                  onDelete={onDelete}\n                  onReact={onReact}\n                  allowReplies={allowReplies}\n                  allowResolution={allowResolution}\n                  allowEditing={allowEditing}\n                  permissions={permissions}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Main CommentThread Component\nexport const CommentThread: React.FC<CommentThreadProps> = ({\n  comments: rawComments,\n  parentId,\n  parentType,\n  currentUser,\n  context = 'neutral',\n  onCommentAdd,\n  onCommentReply,\n  onCommentResolve,\n  onCommentEdit,\n  onCommentDelete,\n  onCommentReact,\n  allowReplies = true,\n  allowResolution = true,\n  allowEditing = true,\n  permissions = [],\n  className\n}) => {\n  const [showNewComment, setShowNewComment] = useState(false);\n  const [filter, setFilter] = useState<'all' | 'unresolved' | 'resolved'>('all');\n\n  const theme = getCommentTheme(context);\n\n  // Convert comments to ExtendedComment format\n  const comments = useMemo(() => {\n    return rawComments.map(comment => ({\n      ...comment,\n      status: 'active' as const\n    }));\n  }, [rawComments]);\n\n  // Filter comments based on current filter\n  const filteredComments = useMemo(() => {\n    return comments.filter(comment => {\n      switch (filter) {\n        case 'unresolved':\n          return !comment.resolved;\n        case 'resolved':\n          return comment.resolved;\n        default:\n          return true;\n      }\n    });\n  }, [comments, filter]);\n\n  // Sort comments by timestamp\n  const sortedComments = useMemo(() => {\n    return [...filteredComments].sort((a, b) =>\n      new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()\n    );\n  }, [filteredComments]);\n\n  const handleNewComment = useCallback((content: string) => {\n    if (onCommentAdd) {\n      const newComment: Omit<ExtendedComment, 'id' | 'timestamp'> = {\n        content,\n        author: currentUser,\n        workspaceId: currentUser.workspace || '',\n        resolved: false,\n        status: 'active'\n      };\n      onCommentAdd(newComment);\n      setShowNewComment(false);\n    }\n  }, [currentUser, onCommentAdd]);\n\n  const handleReply = useCallback((parentId: string, content: string) => {\n    if (onCommentReply) {\n      const newReply: Omit<ExtendedComment, 'id' | 'timestamp'> = {\n        content,\n        author: currentUser,\n        parentId,\n        workspaceId: currentUser.workspace || '',\n        resolved: false,\n        status: 'active'\n      };\n      onCommentReply(parentId, newReply);\n    }\n  }, [currentUser, onCommentReply]);\n\n  const canAddComment = permissions.includes('comment:create');\n\n  return (\n    <div\n      className={cn(\"space-y-4\", className)}\n      style={{ '--comment-primary': theme.primary } as React.CSSProperties}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <h3 className=\"text-lg font-medium text-gray-900\">\n            Comments ({comments.length})\n          </h3>\n\n          {/* Filter buttons */}\n          <div className=\"flex items-center space-x-1\">\n            <button\n              onClick={() => setFilter('all')}\n              className={cn(\n                \"px-3 py-1 text-sm rounded-md transition-colors\",\n                filter === 'all'\n                  ? \"bg-blue-100 text-blue-700\"\n                  : \"text-gray-600 hover:text-gray-900\"\n              )}\n            >\n              All\n            </button>\n            <button\n              onClick={() => setFilter('unresolved')}\n              className={cn(\n                \"px-3 py-1 text-sm rounded-md transition-colors\",\n                filter === 'unresolved'\n                  ? \"bg-blue-100 text-blue-700\"\n                  : \"text-gray-600 hover:text-gray-900\"\n              )}\n            >\n              Open\n            </button>\n            <button\n              onClick={() => setFilter('resolved')}\n              className={cn(\n                \"px-3 py-1 text-sm rounded-md transition-colors\",\n                filter === 'resolved'\n                  ? \"bg-blue-100 text-blue-700\"\n                  : \"text-gray-600 hover:text-gray-900\"\n              )}\n            >\n              Resolved\n            </button>\n          </div>\n        </div>\n\n        {canAddComment && (\n          <Button\n            size=\"sm\"\n            onClick={() => setShowNewComment(true)}\n            disabled={showNewComment}\n          >\n            <Icon name=\"Plus\" className=\"w-4 h-4 mr-1\" />\n            Add Comment\n          </Button>\n        )}\n      </div>\n\n      {/* New Comment Input */}\n      {showNewComment && (\n        <div className=\"border border-gray-200 rounded-lg p-4\">\n          <CommentInput\n            onSubmit={handleNewComment}\n            onCancel={() => setShowNewComment(false)}\n            autoFocus\n          />\n        </div>\n      )}\n\n      {/* Comments List */}\n      <div className=\"space-y-6\">\n        {sortedComments.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            {filter === 'all'\n              ? \"No comments yet. Be the first to comment!\"\n              : `No ${filter} comments.`\n            }\n          </div>\n        ) : (\n          sortedComments.map((comment) => (\n            <CommentItem\n              key={comment.id}\n              comment={comment}\n              currentUser={currentUser}\n              context={context}\n              onReply={handleReply}\n              onResolve={onCommentResolve}\n              onEdit={onCommentEdit}\n              onDelete={onCommentDelete}\n              onReact={onCommentReact}\n              allowReplies={allowReplies}\n              allowResolution={allowResolution}\n              allowEditing={allowEditing}\n              permissions={permissions}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentThread;\n", "/**\n * Comment System Types\n *\n * Extended type definitions for the comment system components\n * supporting contextual commenting, real-time synchronization, and approval workflows.\n */\n\nimport {\n  Annotation,\n  Approval,\n  Comment,\n  Position,\n  ReviewItem,\n  TextSelection,\n  User,\n  WorkspaceContext\n} from '../types';\n\n// Extended Comment Types for Enhanced Functionality\nexport interface ExtendedComment extends Comment {\n  status: 'active' | 'archived' | 'deleted';\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  tags?: string[];\n  assignee?: User;\n  dueDate?: Date;\n}\n\n// Extended Review System\nexport interface ExtendedReviewItem extends Omit<ReviewItem, 'type' | 'status'> {\n  type: 'document' | 'design' | 'code' | 'project';\n  status: 'pending' | 'approved' | 'rejected' | 'changes_requested';\n  dueDate?: Date;\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  tags?: string[];\n}\n\nexport interface ExtendedApproval extends Omit<Approval, 'status'> {\n  status: 'approved' | 'rejected' | 'changes_requested';\n}\n\n// Extended Annotation\nexport interface ExtendedAnnotation extends Annotation {\n  createdAt: Date;\n  updatedAt: Date;\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  tags?: string[];\n}\n\n// Extended Text Selection\nexport interface ExtendedTextSelection extends TextSelection {\n  elementId?: string;\n  xpath?: string;\n}\n\n// Supporting Types\nexport interface DesignType {\n  id: string;\n  title: string;\n  url: string;\n  type: 'figma' | 'sketch' | 'adobe_xd' | 'image';\n  workspace: string;\n  createdBy: User;\n  createdAt: Date;\n  version?: string;\n  layers?: DesignLayer[];\n}\n\nexport interface DesignLayer {\n  id: string;\n  name: string;\n  type: 'frame' | 'group' | 'component' | 'text' | 'shape';\n  visible: boolean;\n  locked: boolean;\n}\n\nexport interface DocumentType {\n  id: string;\n  title: string;\n  content: string;\n  type: 'markdown' | 'html' | 'text' | 'pdf';\n  workspace: string;\n  createdBy: User;\n  createdAt: Date;\n  version?: string;\n  sections?: DocumentSection[];\n}\n\nexport interface DocumentSection {\n  id: string;\n  title: string;\n  content: string;\n  order: number;\n  type: 'heading' | 'paragraph' | 'list' | 'code' | 'image';\n}\n\n// Enhanced Component Props\nexport interface CommentThreadProps {\n  comments: Comment[];\n  parentId: string;\n  parentType: 'document' | 'design' | 'project' | 'task';\n  currentUser: User;\n  context?: WorkspaceContext;\n  onCommentAdd?: (comment: Omit<ExtendedComment, 'id' | 'timestamp'>) => void;\n  onCommentReply?: (parentId: string, comment: Omit<ExtendedComment, 'id' | 'timestamp'>) => void;\n  onCommentResolve?: (commentId: string) => void;\n  onCommentEdit?: (commentId: string, content: string) => void;\n  onCommentDelete?: (commentId: string) => void;\n  onCommentReact?: (commentId: string, emoji: string) => void;\n  onCommentAssign?: (commentId: string, assignee: User) => void;\n  onCommentPriority?: (commentId: string, priority: 'low' | 'medium' | 'high' | 'urgent') => void;\n  onCommentTag?: (commentId: string, tags: string[]) => void;\n  allowReplies?: boolean;\n  allowResolution?: boolean;\n  allowEditing?: boolean;\n  allowAssignment?: boolean;\n  allowPriority?: boolean;\n  allowTags?: boolean;\n  permissions?: string[];\n  className?: string;\n}\n\nexport interface InlineCommentProps {\n  selection: ExtendedTextSelection;\n  document: DocumentType;\n  currentUser: User;\n  context?: WorkspaceContext;\n  onCommentCreate?: (comment: Omit<ExtendedComment, 'id' | 'timestamp'>) => void;\n  onSelectionChange?: (selection: ExtendedTextSelection) => void;\n  onCancel?: () => void;\n  permissions?: string[];\n  className?: string;\n}\n\nexport interface AnnotationCommentProps {\n  position: Position;\n  design: DesignType;\n  currentUser: User;\n  context?: WorkspaceContext;\n  onAnnotationCreate?: (annotation: Omit<ExtendedAnnotation, 'id' | 'createdAt' | 'updatedAt'>) => void;\n  onPositionChange?: (position: Position) => void;\n  onCancel?: () => void;\n  permissions?: string[];\n  className?: string;\n}\n\nexport interface ReviewCommentProps {\n  reviewItem: ExtendedReviewItem;\n  currentUser: User;\n  context?: WorkspaceContext;\n  onApprove?: () => void;\n  onReject?: (reason: string) => void;\n  onRequestChanges?: (reason: string) => void;\n  onCommentAdd?: (comment: Omit<ExtendedComment, 'id' | 'timestamp'>) => void;\n  showApprovalActions?: boolean;\n  permissions?: string[];\n  className?: string;\n}\n\nexport interface CommentInputProps {\n  onSubmit: (content: string, attachments?: File[]) => void;\n  onCancel?: () => void;\n  currentUser: User;\n  context?: WorkspaceContext;\n  placeholder?: string;\n  maxLength?: number;\n  allowAttachments?: boolean;\n  allowFormatting?: boolean;\n  allowMentions?: boolean;\n  allowPriority?: boolean;\n  allowTags?: boolean;\n  allowAssignment?: boolean;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n}\n\n// Event Types for Real-time Updates\nexport interface CommentEvent {\n  type: 'comment:created' | 'comment:updated' | 'comment:deleted' | 'comment:resolved' | 'comment:reaction';\n  comment: ExtendedComment;\n  user: User;\n  timestamp: Date;\n}\n\nexport interface AnnotationEvent {\n  type: 'annotation:created' | 'annotation:updated' | 'annotation:deleted';\n  annotation: ExtendedAnnotation;\n  user: User;\n  timestamp: Date;\n}\n\nexport interface ReviewEvent {\n  type: 'review:approved' | 'review:rejected' | 'review:changes_requested';\n  reviewItem: ExtendedReviewItem;\n  approval: ExtendedApproval;\n  user: User;\n  timestamp: Date;\n}\n\n// Utility Types\nexport type CommentStatus = 'active' | 'archived' | 'deleted';\nexport type ReviewStatus = 'pending' | 'approved' | 'rejected' | 'changes_requested';\nexport type AnnotationStatus = 'open' | 'resolved' | 'archived';\nexport type CommentPriority = 'low' | 'medium' | 'high' | 'urgent';\n\n// Permission Types\nexport type CommentPermission =\n  | 'comment:create'\n  | 'comment:edit'\n  | 'comment:delete'\n  | 'comment:resolve'\n  | 'comment:react'\n  | 'comment:mention'\n  | 'comment:assign'\n  | 'comment:priority'\n  | 'comment:tag'\n  | 'review:approve'\n  | 'review:reject'\n  | 'review:request_changes'\n  | 'annotation:create'\n  | 'annotation:edit'\n  | 'annotation:delete';\n\n// Context-specific styling\nexport interface CommentTheme {\n  primary: string;\n  secondary: string;\n  accent: string;\n  background: string;\n  surface: string;\n  text: string;\n  textSecondary: string;\n  border: string;\n  success: string;\n  warning: string;\n  error: string;\n}\n\nexport const WORKSPACE_COMMENT_THEMES: Record<string, CommentTheme> = {\n  consultant: {\n    primary: '#8B5CF6',\n    secondary: '#A78BFA',\n    accent: '#C4B5FD',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  },\n  client: {\n    primary: '#3B82F6',\n    secondary: '#60A5FA',\n    accent: '#93C5FD',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  },\n  admin: {\n    primary: '#EF4444',\n    secondary: '#F87171',\n    accent: '#FCA5A5',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  },\n  expert: {\n    primary: '#10B981',\n    secondary: '#34D399',\n    accent: '#6EE7B7',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  },\n  tool_creator: {\n    primary: '#F59E0B',\n    secondary: '#FBBF24',\n    accent: '#FCD34D',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  },\n  founder: {\n    primary: '#7C3AED',\n    secondary: '#8B5CF6',\n    accent: '#A78BFA',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  },\n  neutral: {\n    primary: '#6B7280',\n    secondary: '#9CA3AF',\n    accent: '#D1D5DB',\n    background: '#FAFAFA',\n    surface: '#FFFFFF',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    border: '#E5E7EB',\n    success: '#10B981',\n    warning: '#F59E0B',\n    error: '#EF4444'\n  }\n};\n\n// Utility functions for comment system\nexport const getCommentTheme = (context: WorkspaceContext = 'neutral'): CommentTheme => {\n  return WORKSPACE_COMMENT_THEMES[context] || WORKSPACE_COMMENT_THEMES.neutral;\n};\n\nexport const formatCommentTimestamp = (timestamp: Date): string => {\n  const now = new Date();\n  const diff = now.getTime() - timestamp.getTime();\n  const minutes = Math.floor(diff / 60000);\n  const hours = Math.floor(diff / 3600000);\n  const days = Math.floor(diff / 86400000);\n\n  if (minutes < 1) return 'just now';\n  if (minutes < 60) return `${minutes}m ago`;\n  if (hours < 24) return `${hours}h ago`;\n  if (days < 7) return `${days}d ago`;\n\n  return timestamp.toLocaleDateString();\n};\n\nexport const getCommentPriorityColor = (priority: CommentPriority, theme: CommentTheme): string => {\n  switch (priority) {\n    case 'urgent':\n      return theme.error;\n    case 'high':\n      return theme.warning;\n    case 'medium':\n      return theme.primary;\n    case 'low':\n    default:\n      return theme.textSecondary;\n  }\n};\n", "import { Avatar, Badge, Button, Icon } from '@wheel/ui';\nimport React, { useCallback, useMemo, useState } from 'react';\n\n// Types\nexport interface Notification {\n  id: string;\n  type: 'info' | 'success' | 'warning' | 'error' | 'mention' | 'update';\n  category: 'system' | 'chat' | 'comment' | 'task' | 'billing' | 'general';\n  title: string;\n  message: string;\n  timestamp: Date;\n  read: boolean;\n  workspace: string;\n  sender?: User;\n  actions?: NotificationAction[];\n  metadata?: Record<string, any>;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n}\n\nexport interface NotificationAction {\n  id: string;\n  label: string;\n  type: 'primary' | 'secondary' | 'link';\n  action: string;\n  url?: string;\n  data?: any;\n}\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  role: string;\n}\n\nexport interface NotificationPreferences {\n  channels: {\n    inApp: boolean;\n    email: boolean;\n    push: boolean;\n    sms: boolean;\n  };\n  categories: Record<string, CategoryPreference>;\n  schedule: {\n    doNotDisturb: boolean;\n    doNotDisturbStart?: string;\n    doNotDisturbEnd?: string;\n    timezone: string;\n  };\n  grouping: {\n    enabled: boolean;\n    interval: number;\n  };\n}\n\nexport interface CategoryPreference {\n  enabled: boolean;\n  channels: string[];\n  priority: string;\n  sound?: boolean;\n}\n\nexport interface NotificationCenterProps {\n  notifications: Notification[];\n  currentUser: User;\n  context?: 'consultant' | 'client' | 'admin' | 'expert' | 'tool_creator' | 'founder' | 'neutral';\n  onNotificationClick?: (notification: Notification) => void;\n  onMarkAsRead?: (notificationId: string) => void;\n  onMarkAllAsRead?: () => void;\n  onClearAll?: () => void;\n  showFilters?: boolean;\n  showSettings?: boolean;\n  permissions?: string[];\n}\n\n// Constants\nconst NOTIFICATION_CATEGORIES = {\n  system: 'System',\n  chat: 'Chat',\n  comment: 'Comments',\n  task: 'Tasks',\n  billing: 'Billing',\n  general: 'General'\n};\n\nconst NOTIFICATION_TYPES = {\n  info: { icon: 'Info', color: 'blue' },\n  success: { icon: 'CheckCircle', color: 'green' },\n  warning: { icon: 'AlertTriangle', color: 'yellow' },\n  error: { icon: 'AlertCircle', color: 'red' },\n  mention: { icon: 'AtSign', color: 'purple' },\n  update: { icon: 'RefreshCw', color: 'blue' }\n};\n\n// Utility functions\nconst formatDate = (date: Date): string => {\n  const now = new Date();\n  const diff = now.getTime() - date.getTime();\n  const minutes = Math.floor(diff / 60000);\n  const hours = Math.floor(diff / 3600000);\n  const days = Math.floor(diff / 86400000);\n\n  if (minutes < 1) return 'Just now';\n  if (minutes < 60) return `${minutes}m ago`;\n  if (hours < 24) return `${hours}h ago`;\n  if (days < 7) return `${days}d ago`;\n  return date.toLocaleDateString();\n};\n\nconst formatDateGroup = (date: Date): string => {\n  const now = new Date();\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const yesterday = new Date(today.getTime() - 86400000);\n  const notificationDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  if (notificationDate.getTime() === today.getTime()) return 'Today';\n  if (notificationDate.getTime() === yesterday.getTime()) return 'Yesterday';\n  return date.toLocaleDateString();\n};\n\n// Styled components\nconst NotificationCenterContainer = ({ children, context }: { children: React.ReactNode; context?: string }) => (\n  <div className={`\n    notification-center\n    bg-white dark:bg-gray-900\n    border border-gray-200 dark:border-gray-700\n    rounded-lg shadow-lg\n    w-96 max-h-96 overflow-hidden\n    ${context === 'consultant' ? 'border-blue-200 dark:border-blue-800' : ''}\n    ${context === 'client' ? 'border-green-200 dark:border-green-800' : ''}\n    ${context === 'admin' ? 'border-purple-200 dark:border-purple-800' : ''}\n    ${context === 'expert' ? 'border-orange-200 dark:border-orange-800' : ''}\n    ${context === 'tool_creator' ? 'border-pink-200 dark:border-pink-800' : ''}\n    ${context === 'founder' ? 'border-yellow-200 dark:border-yellow-800' : ''}\n  `}>\n    {children}\n  </div>\n);\n\nconst NotificationHeader = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"notification-header p-4 border-b border-gray-200 dark:border-gray-700 flex items-center justify-between\">\n    {children}\n  </div>\n);\n\nconst HeaderActions = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"header-actions flex items-center gap-2\">\n    {children}\n  </div>\n);\n\nconst NotificationFilters = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"notification-filters p-2 border-b border-gray-200 dark:border-gray-700 flex flex-wrap gap-1\">\n    {children}\n  </div>\n);\n\nconst FilterButton = ({\n  children,\n  active,\n  onClick\n}: {\n  children: React.ReactNode;\n  active: boolean;\n  onClick: () => void;\n}) => (\n  <button\n    onClick={onClick}\n    className={`\n      filter-button px-3 py-1 rounded-full text-sm font-medium transition-colors\n      ${active\n        ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'\n        : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700'\n      }\n    `}\n  >\n    {children}\n  </button>\n);\n\nconst NotificationList = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"notification-list max-h-80 overflow-y-auto\">\n    {children}\n  </div>\n);\n\nconst NotificationGroup = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"notification-group\">\n    {children}\n  </div>\n);\n\nconst DateHeader = ({ children }: { children: React.ReactNode }) => (\n  <div className=\"date-header px-4 py-2 bg-gray-50 dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 sticky top-0\">\n    {children}\n  </div>\n);\n\nconst NotificationItem = ({\n  notification,\n  onClick,\n  onMarkAsRead,\n  context\n}: {\n  notification: Notification;\n  onClick: () => void;\n  onMarkAsRead: () => void;\n  context?: string;\n}) => {\n  const typeConfig = NOTIFICATION_TYPES[notification.type];\n\n  return (\n    <div\n      className={`\n        notification-item p-4 border-b border-gray-100 dark:border-gray-800 cursor-pointer\n        hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\n        ${!notification.read ? 'bg-blue-50 dark:bg-blue-950' : ''}\n      `}\n      onClick={onClick}\n    >\n      <div className=\"flex items-start gap-3\">\n        <div className={`\n          notification-icon flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center\n          ${typeConfig.color === 'blue' ? 'bg-blue-100 text-blue-600 dark:bg-blue-900 dark:text-blue-400' : ''}\n          ${typeConfig.color === 'green' ? 'bg-green-100 text-green-600 dark:bg-green-900 dark:text-green-400' : ''}\n          ${typeConfig.color === 'yellow' ? 'bg-yellow-100 text-yellow-600 dark:bg-yellow-900 dark:text-yellow-400' : ''}\n          ${typeConfig.color === 'red' ? 'bg-red-100 text-red-600 dark:bg-red-900 dark:text-red-400' : ''}\n          ${typeConfig.color === 'purple' ? 'bg-purple-100 text-purple-600 dark:bg-purple-900 dark:text-purple-400' : ''}\n        `}>\n          <Icon name={typeConfig.icon as any} size=\"sm\" />\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">\n                {notification.title}\n              </p>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                {notification.message}\n              </p>\n            </div>\n\n            <div className=\"flex items-center gap-2 ml-2\">\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {formatDate(notification.timestamp)}\n              </span>\n              {!notification.read && (\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              )}\n            </div>\n          </div>\n\n          {notification.sender && (\n            <div className=\"flex items-center gap-2 mt-2\">\n              <Avatar\n                src={notification.sender.avatar}\n                alt={notification.sender.name}\n                size=\"xs\"\n                fallback={notification.sender.name.charAt(0)}\n              />\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {notification.sender.name}\n              </span>\n            </div>\n          )}\n\n          {notification.actions && notification.actions.length > 0 && (\n            <div className=\"flex gap-2 mt-3\">\n              {notification.actions.map((action) => (\n                <Button\n                  key={action.id}\n                  variant={action.type === 'primary' ? 'primary' : 'secondary'}\n                  size=\"sm\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    // Handle action\n                  }}\n                >\n                  {action.label}\n                </Button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst EmptyState = ({ message, context }: { message: string; context?: string }) => (\n  <div className=\"empty-state p-8 text-center\">\n    <Icon name=\"Bell\" size=\"lg\" className=\"mx-auto mb-4 text-gray-400\" />\n    <p className=\"text-gray-500 dark:text-gray-400\">{message}</p>\n  </div>\n);\n\n// Main component\nexport const NotificationCenter: React.FC<NotificationCenterProps> = ({\n  notifications,\n  currentUser,\n  context = 'neutral',\n  onNotificationClick,\n  onMarkAsRead,\n  onMarkAllAsRead,\n  onClearAll,\n  showFilters = true,\n  showSettings = true,\n  permissions = []\n}) => {\n  const [filter, setFilter] = useState('all');\n  const [showPreferences, setShowPreferences] = useState(false);\n\n  // Mock hasPermission function since useWorkspace is not available\n  const hasPermission = (permission: string) => permissions.includes(permission);\n\n  // Filter notifications\n  const filteredNotifications = useMemo(() => {\n    let filtered = notifications;\n\n    if (filter === 'unread') {\n      filtered = filtered.filter(n => !n.read);\n    } else if (filter !== 'all') {\n      filtered = filtered.filter(n => n.category === filter);\n    }\n\n    return filtered.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n  }, [notifications, filter]);\n\n  // Group notifications by date\n  const groupedNotifications = useMemo(() => {\n    return filteredNotifications.reduce((groups, notification) => {\n      const dateKey = formatDateGroup(notification.timestamp);\n      if (!groups[dateKey]) {\n        groups[dateKey] = [];\n      }\n      groups[dateKey].push(notification);\n      return groups;\n    }, {} as Record<string, Notification[]>);\n  }, [filteredNotifications]);\n\n  // Event handlers\n  const handleNotificationClick = useCallback((notification: Notification) => {\n    if (!notification.read && onMarkAsRead) {\n      onMarkAsRead(notification.id);\n    }\n    if (onNotificationClick) {\n      onNotificationClick(notification);\n    }\n  }, [onMarkAsRead, onNotificationClick]);\n\n  const handleMarkAsRead = useCallback((notificationId: string) => {\n    if (onMarkAsRead) {\n      onMarkAsRead(notificationId);\n    }\n  }, [onMarkAsRead]);\n\n  const handleMarkAllAsRead = useCallback(() => {\n    if (onMarkAllAsRead) {\n      onMarkAllAsRead();\n    }\n  }, [onMarkAllAsRead]);\n\n  const handleClearAll = useCallback(() => {\n    if (onClearAll) {\n      onClearAll();\n    }\n  }, [onClearAll]);\n\n  // Count unread notifications\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  return (\n    <NotificationCenterContainer context={context}>\n      <NotificationHeader>\n        <div className=\"flex items-center gap-2\">\n          <h3 className=\"text-lg font-semibold\">\n            Notifications\n          </h3>\n          {unreadCount > 0 && (\n            <Badge variant=\"primary\" size=\"sm\">\n              {unreadCount}\n            </Badge>\n          )}\n        </div>\n\n        <HeaderActions>\n          {unreadCount > 0 && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleMarkAllAsRead}\n            >\n              Mark all as read\n            </Button>\n          )}\n          {notifications.length > 0 && hasPermission('notification:clear') && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleClearAll}\n            >\n              Clear all\n            </Button>\n          )}\n          {showSettings && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setShowPreferences(true)}\n            >\n              <Icon name=\"Settings\" size=\"sm\" />\n            </Button>\n          )}\n        </HeaderActions>\n      </NotificationHeader>\n\n      {showFilters && (\n        <NotificationFilters>\n          <FilterButton\n            active={filter === 'all'}\n            onClick={() => setFilter('all')}\n          >\n            All\n          </FilterButton>\n          <FilterButton\n            active={filter === 'unread'}\n            onClick={() => setFilter('unread')}\n          >\n            Unread {unreadCount > 0 && `(${unreadCount})`}\n          </FilterButton>\n          {Object.entries(NOTIFICATION_CATEGORIES).map(([key, label]) => {\n            const count = notifications.filter(n => n.category === key).length;\n            return count > 0 ? (\n              <FilterButton\n                key={key}\n                active={filter === key}\n                onClick={() => setFilter(key)}\n              >\n                {label} ({count})\n              </FilterButton>\n            ) : null;\n          })}\n        </NotificationFilters>\n      )}\n\n      <NotificationList>\n        {Object.keys(groupedNotifications).length === 0 ? (\n          <EmptyState\n            message={filter === 'unread' ? 'No unread notifications' : 'No notifications'}\n            context={context}\n          />\n        ) : (\n          Object.entries(groupedNotifications).map(([date, items]) => (\n            <NotificationGroup key={date}>\n              <DateHeader>{date}</DateHeader>\n              {items.map(notification => (\n                <NotificationItem\n                  key={notification.id}\n                  notification={notification}\n                  onClick={() => handleNotificationClick(notification)}\n                  onMarkAsRead={() => handleMarkAsRead(notification.id)}\n                  context={context}\n                />\n              ))}\n            </NotificationGroup>\n          ))\n        )}\n      </NotificationList>\n    </NotificationCenterContainer>\n  );\n};\n\nexport default NotificationCenter;\n"],
  "mappings": "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",
  "names": ["contextStyles", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "contextStyles", "React", "import_react", "import_jsx_runtime", "getWorkspaceTheme", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "items", "import_react", "import_jsx_runtime", "import_react", "getRowKey", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "import_react", "debounce", "import_jsx_runtime", "debounce", "_a", "_b", "import_react", "import_jsx_runtime", "debounce", "template", "import_react", "import_jsx_runtime", "debounce", "import_react", "cn", "import_jsx_runtime", "context", "cn", "hasPermission", "import_react", "import_jsx_runtime", "cn", "parentId", "import_react", "import_jsx_runtime", "formatDate", "EmptyState", "hasPermission"]
}
