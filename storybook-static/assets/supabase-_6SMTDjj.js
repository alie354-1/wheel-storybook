let e=null;function t(){return console.log("Storybook environment detected via STORYBOOK env var"),!0}function s(){if(e)return e;if(t()){console.log("Using mock Supabase client for Storybook environment");try{return e=require("./supabase-mock").supabase,e}catch(r){return console.error("Failed to load mock Supabase client:",r),e={auth:{user:null,session:null,signIn:()=>Promise.resolve({data:null,error:null}),signOut:()=>Promise.resolve({error:null}),onAuthStateChange:()=>({data:{subscription:{unsubscribe:()=>{}}}})},from:()=>({select:()=>Promise.resolve({data:[],error:null}),insert:()=>Promise.resolve({data:null,error:null}),update:()=>Promise.resolve({data:null,error:null}),delete:()=>Promise.resolve({data:null,error:null})}),rpc:()=>Promise.resolve({data:null,error:null})},e}}throw new Error("Supabase client not initialized. Call initializeSupabase() first.")}new Proxy({},{get(r,n){const l=s(),o=l[n];return typeof o=="function"?o.bind(l):o}});
